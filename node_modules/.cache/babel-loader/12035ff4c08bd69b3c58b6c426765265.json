{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/MyCovid19Coronavirus/src/components/Map/MapChart.tsx\";\nimport React from \"react\";\nimport { StoreContainer } from '../Store';\nimport _ from 'lodash';\nimport { ComposableMap, Geographies, Geography, Marker, ZoomableGroup } from \"react-simple-maps\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = props => {\n  const unstated = StoreContainer.useContainer();\n  const [data, setData] = React.useState(unstated.total);\n  const myMarkers = [];\n\n  function mapDataCountries(data) {\n    if (data.Countries) {\n      data.Countries.map(item => myMarkers.push({\n        name: item.Country,\n        markerOffset: 0,\n        lon: 0,\n        lat: 0\n      }));\n    } // console.log(myMarkers)\n\n\n    return myMarkers;\n  }\n\n  React.useEffect(() => {\n    setData(unstated.getCovidMapMarkers());\n    if (data) mapDataCountries(data); // eslint-disable-next-line\n  }, [data, unstated.code]);\n  return /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: {\n      rotate: [-10, 0, 0],\n      scale: 200\n    } // style={{ marginTop: '-5em' }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n    zoom: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    fill: \"#DDD\",\n    stroke: \"#FFF\",\n    onMouseEnter: () => {\n      let {\n        NAME,\n        POP_EST,\n        ISO_A2\n      } = geo.properties;\n\n      let country = _.find(unstated.markers, {\n        CountryCode: ISO_A2\n      });\n\n      if (country) {\n        // cases = country.TotalConfirmed;\n        props.setTooltipContent({\n          Country: NAME,\n          Population: POP_EST,\n          NewConfirmed: country.NewConfirmed,\n          TotalConfirmed: country.TotalConfirmed,\n          NewDeaths: country.NewDeaths,\n          TotalDeaths: country.TotalDeaths,\n          NewRecovered: country.NewRecovered,\n          TotalRecovered: country.TotalRecovered,\n          data: country\n        });\n      } else {\n        props.setTooltipContent({\n          Country: NAME\n        });\n      }\n    },\n    onMouseLeave: () => {\n      props.setTooltipContent(\"\");\n    },\n    onClick: () => {\n      let {\n        NAME,\n        ISO_A2\n      } = geo.properties;\n      unstated.setCode(ISO_A2.toLowerCase());\n      unstated.setCountry(NAME.toLowerCase()); // console.log(\"mapCharts : code \", unstated.code);\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#E42\",\n        outline: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }))), unstated.markers ? _.filter(unstated.markers, o => o.CountryCode === unstated.code || o.TotalConfirmed > 7000).map(item => /*#__PURE__*/React.createElement(Marker, {\n    key: item.name,\n    coordinates: [item.lon, item.lat],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ? /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    stroke: \"#ff0000\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    transform: \"translate(-12, -35)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"10\",\n    r: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, item.TotalConfirmed > 70000 ? /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    stroke: \"#ffc107\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    transform: \"translate(-12, -6)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"8\",\n    r: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 27\n    }\n  })) : \"\"), item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ? /*#__PURE__*/React.createElement(\"text\", {\n    textAnchor: \"middle\",\n    style: {\n      fill: \"red\",\n      fontWeight: \"bold\",\n      textShadow: \"1px 1px 1px black\",\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, item.CountryCode, \" : \", item.TotalConfirmed, \" cases\") : /*#__PURE__*/React.createElement(\"text\", {\n    textAnchor: \"middle\",\n    style: {\n      fill: \"orange\",\n      textShadow: \"1px 1px 1px black\",\n      fontWeight: \"bold\",\n      fontSize: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, item.TotalConfirmed > 80000 ? `${item.CountryCode} ${item.TotalConfirmed}` : \"\"))) : \"\"));\n};\n\nexport default MapChart;","map":{"version":3,"sources":["/Users/rims/Documents/MyCovid19Coronavirus/src/components/Map/MapChart.tsx"],"names":["React","StoreContainer","_","ComposableMap","Geographies","Geography","Marker","ZoomableGroup","geoUrl","MapChart","props","unstated","useContainer","data","setData","useState","total","myMarkers","mapDataCountries","Countries","map","item","push","name","Country","markerOffset","lon","lat","useEffect","getCovidMapMarkers","code","rotate","scale","geographies","geo","rsmKey","NAME","POP_EST","ISO_A2","properties","country","find","markers","CountryCode","setTooltipContent","Population","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","setCode","toLowerCase","setCountry","default","fill","outline","hover","pressed","filter","o","fontWeight","textShadow","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StoreContainer } from '../Store';\nimport _ from 'lodash';\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup\n} from \"react-simple-maps\";\n\ninterface IMarkers {\n  markerOffset: number,\n  name: string,\n  lon: number,\n  lat: number\n}\nconst geoUrl: string =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = (props: any) => {\n  const unstated = StoreContainer.useContainer();\n  const [data, setData] = React.useState<any>(unstated.total);\n  const myMarkers: IMarkers[] = []\n\n  function mapDataCountries(data: any) {\n    if (data.Countries) {\n      data.Countries.map((item: any) => myMarkers.push({ name: item.Country, markerOffset: 0, lon: 0, lat: 0 }))\n    }\n    // console.log(myMarkers)\n    return myMarkers;\n  }\n  React.useEffect(() => {\n    setData(unstated.getCovidMapMarkers());\n    if (data)\n      mapDataCountries(data);\n    // eslint-disable-next-line\n  }, [data, unstated.code])\n  return (\n    <ComposableMap\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 200\n      }}\n    // style={{ marginTop: '-5em' }}\n    >\n      <ZoomableGroup zoom={1}>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill=\"#DDD\"\n                stroke=\"#FFF\"\n                onMouseEnter={() => {\n                  let { NAME, POP_EST, ISO_A2 } = geo.properties;\n                  let country: object | any = _.find((unstated.markers), { CountryCode: ISO_A2 });\n                  if (country) {\n                    // cases = country.TotalConfirmed;\n                    props.setTooltipContent({\n                      Country: NAME,\n                      Population: POP_EST,\n                      NewConfirmed: country.NewConfirmed,\n                      TotalConfirmed: country.TotalConfirmed,\n                      NewDeaths: country.NewDeaths,\n                      TotalDeaths: country.TotalDeaths,\n                      NewRecovered: country.NewRecovered,\n                      TotalRecovered: country.TotalRecovered,\n                      data: country\n                    });\n                  } else {\n                    props.setTooltipContent({ Country: NAME });\n                  }\n                }}\n                onMouseLeave={() => {\n                  props.setTooltipContent(\"\");\n                }}\n                onClick={() => {\n                  let { NAME, ISO_A2 } = geo.properties;\n                  unstated.setCode(ISO_A2.toLowerCase());\n                  unstated.setCountry(NAME.toLowerCase());\n                  // console.log(\"mapCharts : code \", unstated.code);\n                }}\n\n                style={{\n                  default: {\n                    fill: \"#D6D6DA\",\n                    outline: \"none\"\n                  },\n                  hover: {\n                    fill: \"#F53\",\n                    outline: \"none\"\n                  },\n                  pressed: {\n                    fill: \"#E42\",\n                    outline: \"none\"\n                  }\n                }}\n              />\n            ))\n          }\n        </Geographies>\n        {unstated.markers ?\n          (_.filter(unstated.markers, (o: any) => o.CountryCode === unstated.code || o.TotalConfirmed > 7000))\n            .map((item: any) => (\n              <Marker key={item.name} coordinates={[item.lon, item.lat]}>\n                {item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ?\n                  <g\n                    fill=\"none\"\n                    stroke=\"#ff0000\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    transform=\"translate(-12, -35)\"\n                  >\n                    <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                    <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                  </g> :\n                  <>\n                    {\n                      item.TotalConfirmed > 70000 ?\n                        <g\n                          fill=\"none\"\n                          stroke=\"#ffc107\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          transform=\"translate(-12, -6)\"\n                        >\n                          <circle cx=\"12\" cy=\"8\" r=\"1\" />\n                        </g>\n                        : \"\"}\n                  </>\n                }\n\n                {item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ?\n                  <text\n                    textAnchor=\"middle\"\n                    style={{ fill: \"red\", fontWeight: \"bold\", textShadow: \"1px 1px 1px black\", fontSize: \"15px\" }}\n                  >\n                    {item.CountryCode} : {item.TotalConfirmed} cases\n                </text>\n                  : <text\n                    textAnchor=\"middle\"\n                    style={{ fill: \"orange\", textShadow: \"1px 1px 1px black\", fontWeight: \"bold\", fontSize: \"10px\" }}\n                  >\n                    {\n                      item.TotalConfirmed > 80000 ? `${item.CountryCode} ${item.TotalConfirmed}` : \"\"}\n                  </text>\n                }\n              </Marker >\n            )) : \"\"\n        }\n      </ZoomableGroup>\n    </ComposableMap >\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}