{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/Projects/covid19/src/components/modules/SearchBar.tsx\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { StoreContainer } from '../Store'; // ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)) : isoCode;\n} // export default function SearchBar(props: any) {\n\n\nexport default function SearchBar() {\n  const unstated = StoreContainer.useContainer();\n  let textInput = \"\";\n\n  const handleChange = (e, values) => {\n    if (values) {\n      unstated.setCountry(values.name);\n      unstated.setCode(values.code);\n    } else {\n      unstated.setCountry(\"\");\n      unstated.setCode(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"country-select\",\n    options: unstated.country_list,\n    autoHighlight: true,\n    getOptionLabel: option => option.name,\n    renderOption: option => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, countryToFlag(option.code)), option.name, \" (\", option.code, \")\"),\n    onChange: handleChange,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      style: {\n        backgroundColor: 'white',\n        borderRadius: 5,\n        width: 300\n      }\n    }, params, {\n      label: \"Choose a country\",\n      variant: \"outlined\",\n      size: \"small\",\n      inputProps: { ...params.inputProps // autoComplete: 'new-password', // disable autocomplete and autofill\n\n      },\n      value: textInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/rims/Documents/Projects/covid19/src/components/modules/SearchBar.tsx"],"names":["React","TextField","Autocomplete","StoreContainer","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","SearchBar","unstated","useContainer","textInput","handleChange","e","values","setCountry","name","setCode","code","country_list","option","params","backgroundColor","borderRadius","width","inputProps"],"mappings":";;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B,C,CAGA;AACA;;AACA,SAASC,aAAT,CAAuBC,OAAvB,EAAqC;AACnC,SAAO,OAAOC,MAAM,CAACC,aAAd,KAAgC,WAAhC,GACHF,OAAO,CACNG,WADD,GAECC,OAFD,CAES,IAFT,EAEgBC,IAAD,IAAeJ,MAAM,CAACC,aAAP,CAAqBG,IAAI,CAACC,UAAL,CAAgB,CAAhB,IAAqB,MAA1C,CAF9B,CADG,GAIHN,OAJJ;AAKD,C,CAGD;;;AACA,eAAe,SAASO,SAAT,GAAqB;AAClC,QAAMC,QAAQ,GAAGV,cAAc,CAACW,YAAf,EAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAMC,YAAY,GAAG,CAACC,CAAD,EAASC,MAAT,KAAyB;AAC5C,QAAIA,MAAJ,EAAY;AACVL,MAAAA,QAAQ,CAACM,UAAT,CAAoBD,MAAM,CAACE,IAA3B;AACAP,MAAAA,QAAQ,CAACQ,OAAT,CAAiBH,MAAM,CAACI,IAAxB;AACD,KAHD,MAGO;AACLT,MAAAA,QAAQ,CAACM,UAAT,CAAoB,EAApB;AACAN,MAAAA,QAAQ,CAACQ,OAAT,CAAiB,EAAjB;AACD;AACF,GARD;;AAWA,sBACE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAER,QAAQ,CAACU,YAFpB;AAGE,IAAA,aAAa,MAHf;AAIE,IAAA,cAAc,EAAGC,MAAD,IAAYA,MAAM,CAACJ,IAJrC;AAKE,IAAA,YAAY,EAAGI,MAAD,iBACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpB,aAAa,CAACoB,MAAM,CAACF,IAAR,CAApB,CADF,EAEGE,MAAM,CAACJ,IAFV,QAEkBI,MAAM,CAACF,IAFzB,MANJ;AAWE,IAAA,QAAQ,EAAEN,YAXZ;AAYE,IAAA,WAAW,EAAGS,MAAD,iBACX,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,YAAY,EAAE,CAA1C;AAA6CC,QAAAA,KAAK,EAAE;AAApD;AADT,OAEMH,MAFN;AAGE,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,UAAU,EAAE,EACV,GAAGA,MAAM,CAACI,UADA,CAEV;;AAFU,OANd;AAUE,MAAA,KAAK,EAAEd,SAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA8BD","sourcesContent":["\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { StoreContainer } from '../Store';\n\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\n// export default function SearchBar(props: any) {\nexport default function SearchBar() {\n  const unstated = StoreContainer.useContainer();\n  let textInput = \"\";\n\n  const handleChange = (e: any, values: any) => {\n    if (values) {\n      unstated.setCountry(values.name);\n      unstated.setCode(values.code);\n    } else {\n      unstated.setCountry(\"\");\n      unstated.setCode(\"\");\n    }\n  }\n\n\n  return (\n    <Autocomplete\n      id=\"country-select\"\n      options={unstated.country_list}\n      autoHighlight\n      getOptionLabel={(option) => option.name}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.name} ({option.code})\n        </React.Fragment>\n      )}\n      onChange={handleChange}\n      renderInput={(params) => (\n        <TextField\n          style={{ backgroundColor: 'white', borderRadius: 5, width: 300 }}\n          {...params}\n          label=\"Choose a country\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputProps={{\n            ...params.inputProps,\n            // autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n          value={textInput}\n        />\n      )\n      }\n    />\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}