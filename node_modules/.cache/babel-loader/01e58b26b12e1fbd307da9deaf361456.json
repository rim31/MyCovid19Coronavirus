{"ast":null,"code":"import _objectSpread from\"/Users/rims/Documents/Projects/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable no-use-before-define */import React from'react';import TextField from'@material-ui/core/TextField';import Autocomplete from'@material-ui/lab/Autocomplete';import{StoreContainer}from'../Store';// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode){return typeof String.fromCodePoint!=='undefined'?isoCode.toUpperCase().replace(/./g,function(char){return String.fromCodePoint(char.charCodeAt(0)+127397);}):isoCode;}/**\n * Search bar component to select a country and display its stats in /stats url\n */export default function SearchBar(){var unstated=StoreContainer.useContainer();var textInput=\"\";var handleChange=function handleChange(e,values){if(values){unstated.setCountry(values.name);unstated.setCode(values.code);}else{unstated.setCountry(\"\");unstated.setCode(\"\");}};return/*#__PURE__*/React.createElement(Autocomplete,{id:\"country-select\",options:unstated.country_list,autoHighlight:true,getOptionLabel:function getOptionLabel(option){return option.name;},renderOption:function renderOption(option){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,countryToFlag(option.code)),option.name,\" (\",option.code,\")\");},onChange:handleChange,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({style:{backgroundColor:'white',borderRadius:5,width:300}},params,{label:\"Choose a country\",variant:\"outlined\",size:\"small\",inputProps:_objectSpread({},params.inputProps),value:textInput}));}});}","map":{"version":3,"sources":["/Users/rims/Documents/Projects/covid19/src/components/modules/SearchBar.tsx"],"names":["React","TextField","Autocomplete","StoreContainer","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","SearchBar","unstated","useContainer","textInput","handleChange","e","values","setCountry","name","setCode","code","country_list","option","params","backgroundColor","borderRadius","width","inputProps"],"mappings":"4JAAA,yCACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,OAASC,cAAT,KAA+B,UAA/B,CAGA;AACA;AACA,QAASC,CAAAA,aAAT,CAAuBC,OAAvB,CAAqC,CACnC,MAAO,OAAOC,CAAAA,MAAM,CAACC,aAAd,GAAgC,WAAhC,CACHF,OAAO,CACNG,WADD,GAECC,OAFD,CAES,IAFT,CAEe,SAACC,IAAD,QAAeJ,CAAAA,MAAM,CAACC,aAAP,CAAqBG,IAAI,CAACC,UAAL,CAAgB,CAAhB,EAAqB,MAA1C,CAAf,EAFf,CADG,CAIHN,OAJJ,CAKD,CAGD;;GAGA,cAAe,SAASO,CAAAA,SAAT,EAAqB,CAClC,GAAMC,CAAAA,QAAQ,CAAGV,cAAc,CAACW,YAAf,EAAjB,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAASC,MAAT,CAAyB,CAC5C,GAAIA,MAAJ,CAAY,CACVL,QAAQ,CAACM,UAAT,CAAoBD,MAAM,CAACE,IAA3B,EACAP,QAAQ,CAACQ,OAAT,CAAiBH,MAAM,CAACI,IAAxB,EACD,CAHD,IAGO,CACLT,QAAQ,CAACM,UAAT,CAAoB,EAApB,EACAN,QAAQ,CAACQ,OAAT,CAAiB,EAAjB,EACD,CACF,CARD,CAWA,mBACE,oBAAC,YAAD,EACE,EAAE,CAAC,gBADL,CAEE,OAAO,CAAER,QAAQ,CAACU,YAFpB,CAGE,aAAa,KAHf,CAIE,cAAc,CAAE,wBAACC,MAAD,QAAYA,CAAAA,MAAM,CAACJ,IAAnB,EAJlB,CAKE,YAAY,CAAE,sBAACI,MAAD,qBACZ,oBAAC,KAAD,CAAO,QAAP,mBACE,gCAAOpB,aAAa,CAACoB,MAAM,CAACF,IAAR,CAApB,CADF,CAEGE,MAAM,CAACJ,IAFV,MAEkBI,MAAM,CAACF,IAFzB,KADY,EALhB,CAWE,QAAQ,CAAEN,YAXZ,CAYE,WAAW,CAAE,qBAACS,MAAD,qBACX,oBAAC,SAAD,gBACE,KAAK,CAAE,CAAEC,eAAe,CAAE,OAAnB,CAA4BC,YAAY,CAAE,CAA1C,CAA6CC,KAAK,CAAE,GAApD,CADT,EAEMH,MAFN,EAGE,KAAK,CAAC,kBAHR,CAIE,OAAO,CAAC,UAJV,CAKE,IAAI,CAAC,OALP,CAME,UAAU,kBACLA,MAAM,CAACI,UADF,CANZ,CASE,KAAK,CAAEd,SATT,GADW,EAZf,EADF,CA6BD","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { StoreContainer } from '../Store';\n\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\n/**\n * Search bar component to select a country and display its stats in /stats url\n */\nexport default function SearchBar() {\n  const unstated = StoreContainer.useContainer();\n  let textInput = \"\";\n\n  const handleChange = (e: any, values: any) => {\n    if (values) {\n      unstated.setCountry(values.name);\n      unstated.setCode(values.code);\n    } else {\n      unstated.setCountry(\"\");\n      unstated.setCode(\"\");\n    }\n  }\n\n\n  return (\n    <Autocomplete\n      id=\"country-select\"\n      options={unstated.country_list}\n      autoHighlight\n      getOptionLabel={(option) => option.name}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.name} ({option.code})\n        </React.Fragment>\n      )}\n      onChange={handleChange}\n      renderInput={(params) => (\n        <TextField\n          style={{ backgroundColor: 'white', borderRadius: 5, width: 300 }}\n          {...params}\n          label=\"Choose a country\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputProps={{\n            ...params.inputProps,\n          }}\n          value={textInput}\n        />\n      )\n      }\n    />\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}