{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/MyCovid19Coronavirus/src/components/modules/ListCountries.tsx\";\nimport React from 'react';\nimport TableCasesData from './TableCasesData';\nimport _ from 'lodash';\nimport { StoreContainer } from '../Store';\nimport Flag from '../modules/Flag';\nexport default function ListCountries(props) {\n  const [data, setData] = React.useState(props.countries);\n  const [country, setCountry] = React.useState(\"\");\n  const [code, setCode] = React.useState(\"\");\n  const unstated = StoreContainer.useContainer();\n\n  function handleClick(event) {\n    const value = event.currentTarget.dataset.name.toLowerCase(); // console.log(value)\n\n    setCountry(value);\n    setCode(event.currentTarget.dataset.code.toLowerCase());\n    unstated.setCountry(value);\n    unstated.setCode(event.currentTarget.dataset.code.toLowerCase());\n  } // to sort array according attribute of object inside\n  // (data).sort(compareValues('TotalConfirmed', 'desc'))\n\n\n  function compareValues(key, order = 'asc') {\n    return function innerSort(a, b) {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n        // property doesn't exist on either object\n        return 0;\n      }\n\n      const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\n      const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\n      let comparison = 0;\n\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n\n      return order === 'desc' ? comparison * -1 : comparison;\n    };\n  }\n\n  React.useEffect(() => {\n    if (!_.isEmpty(props.data.Countries)) setData(props.data.Countries.sort(compareValues('TotalConfirmed', 'desc')));\n  }, [props.data, data, unstated.code, unstated.country]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"wrap\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n\n      /* Don't forget this one */\n      textOverflow: \"ellipsis\",\n      justifyContent: \"space-between\",\n      maxWidth: '50vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: 'whitesmoke'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, !_.isEmpty(unstated.code) && !_.isEmpty(unstated.country) ?\n  /*#__PURE__*/\n  // <img src={`https://www.countryflags.io/${code}/flat/64.png`} alt={`${country}`} />\n  React.createElement(TableCasesData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, Flag(unstated.code ? unstated.code : code)), !_.isEmpty(unstated.country) ? unstated.country : country), !_.isEmpty(props.data.Countries) ? props.data.Countries.map((item, i) => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button is-secondary is-fullwidth\",\n    style: {\n      display: \"flex\",\n      fontSize: '12px',\n      paddingLeft: '3px',\n      justifyContent: \"space-between\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n      backgroundColor: '#282c34',\n      color: \"whitesmoke\"\n    },\n    key: i,\n    onClick: handleClick,\n    \"data-name\": item.Country,\n    \"data-code\": item.CountryCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, item.Country), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 40\n    }\n  }, \" \", item.TotalConfirmed))) : \"\");\n}","map":{"version":3,"sources":["/Users/rims/Documents/MyCovid19Coronavirus/src/components/modules/ListCountries.tsx"],"names":["React","TableCasesData","_","StoreContainer","Flag","ListCountries","props","data","setData","useState","countries","country","setCountry","code","setCode","unstated","useContainer","handleClick","event","value","currentTarget","dataset","name","toLowerCase","compareValues","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","useEffect","isEmpty","Countries","sort","display","flexDirection","flexWrap","overflow","whiteSpace","textOverflow","justifyContent","maxWidth","color","map","item","i","fontSize","paddingLeft","backgroundColor","Country","CountryCode","TotalConfirmed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TableCasesData from './TableCasesData';\nimport _ from 'lodash';\nimport { StoreContainer } from '../Store';\nimport Flag from '../modules/Flag';\n\nexport default function ListCountries(props: any) {\n  const [data, setData] = React.useState<any>(props.countries)\n  const [country, setCountry] = React.useState<String>(\"\")\n  const [code, setCode] = React.useState<String>(\"\")\n  const unstated = StoreContainer.useContainer();\n\n\n  function handleClick(event: any) {\n    const value = event.currentTarget.dataset.name.toLowerCase();\n    // console.log(value)\n    setCountry(value);\n    setCode(event.currentTarget.dataset.code.toLowerCase());\n    unstated.setCountry(value);\n    unstated.setCode(event.currentTarget.dataset.code.toLowerCase());\n  }\n\n  // to sort array according attribute of object inside\n  // (data).sort(compareValues('TotalConfirmed', 'desc'))\n  function compareValues(key: string, order = 'asc') {\n    return function innerSort(a: any, b: any) {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n        // property doesn't exist on either object\n        return 0;\n      }\n      const varA = (typeof a[key] === 'string')\n        ? a[key].toUpperCase() : a[key];\n      const varB = (typeof b[key] === 'string')\n        ? b[key].toUpperCase() : b[key];\n      let comparison = 0;\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n      return (\n        (order === 'desc') ? (comparison * -1) : comparison\n      );\n    };\n  }\n\n  React.useEffect(() => {\n    if (!_.isEmpty(props.data.Countries))\n      setData(props.data.Countries.sort(compareValues('TotalConfirmed', 'desc')));\n\n  }, [props.data, data, unstated.code, unstated.country])\n\n  return (\n    <div\n      style={{\n        display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflow: \"hidden\",\n        whiteSpace: \"nowrap\", /* Don't forget this one */\n        textOverflow: \"ellipsis\",\n        justifyContent: \"space-between\",\n        maxWidth: '50vh'\n      }}>\n      <h1 style={{ color: 'whitesmoke' }}>\n        {!_.isEmpty(unstated.code) && !_.isEmpty(unstated.country) ?\n          // <img src={`https://www.countryflags.io/${code}/flat/64.png`} alt={`${country}`} />\n          <TableCasesData />\n          : \"\"}\n        <span>{Flag(unstated.code ? unstated.code : code)}</span>\n        {!_.isEmpty(unstated.country) ? unstated.country : country}\n      </h1>\n      {/* {(_.isEmpty(props.data) === false) ? */}\n      {!_.isEmpty(props.data.Countries) ?\n        props.data.Countries.map((item: any, i: any) =>\n          <span className=\"button is-secondary is-fullwidth\"\n            style={{\n              display: \"flex\", fontSize: '12px', paddingLeft: '3px', justifyContent: \"space-between\",\n              whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", backgroundColor: '#282c34', color: \"whitesmoke\"\n            }} key={i} onClick={handleClick} data-name={item.Country} data-code={item.CountryCode}>\n            <span>{item.Country}</span><span> {item.TotalConfirmed}</span>\n          </span>)\n        : \"\"}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}