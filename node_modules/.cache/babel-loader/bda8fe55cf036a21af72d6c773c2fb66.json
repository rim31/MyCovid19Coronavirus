{"ast":null,"code":"export default function SortCountries(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\n    let comparison = 0;\n\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n\n    return order === 'desc' ? comparison * -1 : comparison;\n  };\n}","map":{"version":3,"sources":["/Users/rims/Documents/Projects/covid19/src/components/modules/SortCountries.js"],"names":["SortCountries","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,KAAK,GAAG,KAApC,EAA2C;AACxD,SAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AAC9B,QAAI,CAACD,CAAC,CAACE,cAAF,CAAiBL,GAAjB,CAAD,IAA0B,CAACI,CAAC,CAACC,cAAF,CAAiBL,GAAjB,CAA/B,EAAsD;AACpD;AACA,aAAO,CAAP;AACD;;AACD,UAAMM,IAAI,GAAI,OAAOH,CAAC,CAACH,GAAD,CAAR,KAAkB,QAAnB,GACTG,CAAC,CAACH,GAAD,CAAD,CAAOO,WAAP,EADS,GACcJ,CAAC,CAACH,GAAD,CAD5B;AAEA,UAAMQ,IAAI,GAAI,OAAOJ,CAAC,CAACJ,GAAD,CAAR,KAAkB,QAAnB,GACTI,CAAC,CAACJ,GAAD,CAAD,CAAOO,WAAP,EADS,GACcH,CAAC,CAACJ,GAAD,CAD5B;AAEA,QAAIS,UAAU,GAAG,CAAjB;;AACA,QAAIH,IAAI,GAAGE,IAAX,EAAiB;AACfC,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEO,IAAIH,IAAI,GAAGE,IAAX,EAAiB;AACtBC,MAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,WACGR,KAAK,KAAK,MAAX,GAAsBQ,UAAU,GAAG,CAAC,CAApC,GAAyCA,UAD3C;AAGD,GAlBD;AAmBD","sourcesContent":["export default function SortCountries(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n    const varA = (typeof a[key] === 'string')\n      ? a[key].toUpperCase() : a[key];\n    const varB = (typeof b[key] === 'string')\n      ? b[key].toUpperCase() : b[key];\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return (\n      (order === 'desc') ? (comparison * -1) : comparison\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}