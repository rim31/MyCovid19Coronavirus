{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rims/Documents/Projects/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rims/Documents/Projects/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/rims/Documents/Projects/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';// import { useParams, useHistory } from 'react-router-dom';\nimport BarChart from'../Charts/BarChart';import LinearChart from'../Charts/LinearChart';import moment from'moment';import{StoreContainer}from'../Store';// import ListCountries from '../modules/ListCountries';\nimport Dashboard from'../Charts/Dashboard';import Flag from'../modules/Flag';import SelectCase from'../Charts/SelectCase';import SelectPeriod from'../Charts/SelectPeriod';import SortCountries from'../modules/SortCountries';import TableCasesData from'../modules/TableCasesData';import _ from'lodash';import'../../App.css';// position: \"-webkit-sticky\", top: \"4.5rem\"\nexport default function HomeComponent(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),date=_useState4[0],setDate=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),countries=_useState6[0],setCountries=_useState6[1];var _React$useState=React.useState(\"\".concat(moment().subtract(1,'months').format())),_React$useState2=_slicedToArray(_React$useState,2),dates=_React$useState2[0],setDates=_React$useState2[1];var _React$useState3=React.useState(\"confirmed\"),_React$useState4=_slicedToArray(_React$useState3,2),cases=_React$useState4[0],setCases=_React$useState4[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),X=_useState8[0],setX=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),Y=_useState10[0],setY=_useState10[1];var countrySelect={code:\"fr\",name:'france'};var unstated=StoreContainer.useContainer();function setGraph(data){setDate(\"World \"+moment(data.Date).format('YYYY/MM/DD'));// set date for graph Label Title\nvar infos=unstated.globalDataGraph(data.Global);// cleaning data =  returning a double table \nsetX(infos===null||infos===void 0?void 0:infos.resultDates);setY(infos===null||infos===void 0?void 0:infos.resultCases);}function getCovidData(){try{fetch(\"https://api.covid19api.com/summary\",{method:\"GET\"}).then(function(response){return response.json();}).then(function(res){// setData(res);\nsetGraph(res);return res;}).catch(function(err){return alert(err);});}catch(err){console.log(err);return;}};function getAll(){return _getAll.apply(this,arguments);}function _getAll(){_getAll=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return unstated.getTotal();case 2:case\"end\":return _context.stop();}}},_callee);}));return _getAll.apply(this,arguments);}function handleClick(event){unstated.setCountry(event.currentTarget.dataset.name.toLowerCase());unstated.setCode(event.currentTarget.dataset.code.toLowerCase());}React.useEffect(function(){setCountries(unstated.country_list);if(unstated.code){unstated.getCovidCountry(unstated.code,cases,dates);}else if(countries.filter(function(countries){return countries.name.toLowerCase().includes(unstated.country);}).length===1){// eslint-disable-next-line\ncountrySelect=countries.filter(function(countries){return countries.name.toLowerCase().includes(unstated.country);})[0];unstated.setCode(countrySelect.code.toLowerCase());unstated.getCovidCountry(countrySelect.code.toLowerCase(),\"confirmed\",\"\".concat(moment().subtract(1,'months').format()));}else{unstated.getCovidCountry(\"\",\"\",\"\".concat(moment().subtract(30,'days').format()));}// eslint-disable-next-line\n},[unstated.country,cases,dates]);React.useEffect(function(){setData(getCovidData());getAll();// eslint-disable-next-line\n},[]);React.useEffect(function(){if(!_.isEmpty(unstated.total)){var tmp=unstated.total;if(!_.isEmpty(tmp.Countries))setData(tmp.Countries.sort(SortCountries('TotalConfirmed','desc')));}// eslint-disable-next-line\n},[unstated.total]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"header\",null),/*#__PURE__*/React.createElement(\"aside\",{className:\"sidebar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"field\",style:{position:\"sticky\",top:\"0rem\",zIndex:100,backgroundColor:'#333'}},/*#__PURE__*/React.createElement(\"div\",{className:\"control has-icons-left\",style:{position:'sticky'}},/*#__PURE__*/React.createElement(\"span\",{style:{display:'flex',flexDirection:'column'}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input  is-fullwidth mt-1\",value:unstated.country,onChange:function onChange(e){return unstated.setCountry(e.target.value.toLowerCase());},placeholder:\"Search a country\"}),unstated.country?/*#__PURE__*/React.createElement(\"span\",{className:\"icon is-small is-left\",onClick:function onClick(){unstated.setCountry(\"\");unstated.setCode(\"\");}},/*#__PURE__*/React.createElement(\"i\",{className:\"delete\"})):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(SelectCase,{setCases:setCases,className:\"is-fullwidth\"}),/*#__PURE__*/React.createElement(SelectPeriod,{setDates:setDates,className:\"is-fullwidth\"})))),/*#__PURE__*/React.createElement(\"h3\",{className:\"mt-1\"},\"Countries \"),!_.isEmpty(unstated.code)&&!_.isEmpty(unstated.country)?/*#__PURE__*/React.createElement(TableCasesData,null):\"\",data?data.filter(function(countries){return countries.Country.toLowerCase().includes(unstated.country);}).map(function(item,i){return/*#__PURE__*/React.createElement(\"span\",{\"data-name\":item.Country,\"data-code\":item.CountryCode,className:\"button is-secondary\",key:i,onClick:handleClick,style:{margin:\"1px\",display:'flex',justifyContent:\"space-between\",backgroundColor:\"#333\",color:\"whitesmoke\",fontSize:\"0.8em\"}},item.Country,/*#__PURE__*/React.createElement(\"span\",null,item.TotalConfirmed,Flag(item.CountryCode)));}):\"\"),/*#__PURE__*/React.createElement(\"section\",{className:\"main\"},/*#__PURE__*/React.createElement(Dashboard,{data:unstated.total?unstated.total:data?data:{}}),/*#__PURE__*/React.createElement(\"div\",{className:\"sticky-top\"},/*#__PURE__*/React.createElement(\"div\",{className:\"nav flex-column\"},unstated.code?/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(LinearChart,{dataCountry:unstated.data,labelsCountry:unstated.labels,country:\"\".concat(unstated.code.toUpperCase())})):/*#__PURE__*/React.createElement(React.Fragment,null),data?/*#__PURE__*/React.createElement(BarChart,{dataCountry:Y,labelsCountry:X,country:date}):/*#__PURE__*/React.createElement(React.Fragment,null)))));}","map":{"version":3,"sources":["/Users/rims/Documents/Projects/covid19/src/components/Pages/HomeComponent.tsx"],"names":["React","useState","BarChart","LinearChart","moment","StoreContainer","Dashboard","Flag","SelectCase","SelectPeriod","SortCountries","TableCasesData","_","HomeComponent","data","setData","date","setDate","countries","setCountries","subtract","format","dates","setDates","cases","setCases","X","setX","Y","setY","countrySelect","code","name","unstated","useContainer","setGraph","Date","infos","globalDataGraph","Global","resultDates","resultCases","getCovidData","fetch","method","then","response","json","res","catch","err","alert","console","log","getAll","getTotal","handleClick","event","setCountry","currentTarget","dataset","toLowerCase","setCode","useEffect","country_list","getCovidCountry","filter","includes","country","length","isEmpty","total","tmp","Countries","sort","position","top","zIndex","backgroundColor","display","flexDirection","e","target","value","Country","map","item","i","CountryCode","margin","justifyContent","color","fontSize","TotalConfirmed","labels","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import { useParams, useHistory } from 'react-router-dom';\nimport BarChart from '../Charts/BarChart';\nimport LinearChart from '../Charts/LinearChart';\nimport moment from 'moment';\nimport { StoreContainer } from '../Store';\n// import ListCountries from '../modules/ListCountries';\nimport Dashboard from '../Charts/Dashboard';\nimport Flag from '../modules/Flag';\nimport SelectCase from '../Charts/SelectCase';\nimport SelectPeriod from '../Charts/SelectPeriod';\nimport SortCountries from '../modules/SortCountries';\nimport TableCasesData from '../modules/TableCasesData';\n\nimport _ from 'lodash';\nimport '../../App.css'\n\n\n// position: \"-webkit-sticky\", top: \"4.5rem\"\n\n\ninterface ICountry {\n  code: string,\n  name: string\n}\n\nexport default function HomeComponent() {\n  const [data, setData] = useState<any>(\"\");\n  const [date, setDate] = useState<any>(\"\");\n  const [countries, setCountries] = useState<any>([]);\n  const [dates, setDates] = React.useState<string>(`${moment().subtract(1, 'months').format()}`)\n  const [cases, setCases] = React.useState<string>(\"confirmed\")\n  const [X, setX] = useState<any>([]);\n  const [Y, setY] = useState<any>([]);\n  let countrySelect: ICountry = { code: \"fr\", name: 'france' };\n  const unstated = StoreContainer.useContainer();\n\n  function setGraph(data: any) {\n    setDate(\"World \" + moment(data.Date).format('YYYY/MM/DD'));// set date for graph Label Title\n    const infos = unstated.globalDataGraph(data.Global);// cleaning data =  returning a double table \n    setX(infos?.resultDates)\n    setY(infos?.resultCases)\n  }\n\n  function getCovidData() {\n    try {\n      fetch(`https://api.covid19api.com/summary`, {\n        method: \"GET\",\n      }).then((response: any) => response.json()).then((res) => {\n        // setData(res);\n        setGraph(res)\n        return (res)\n      }).catch(err => alert(err));\n    } catch (err) {\n      console.log(err)\n      return;\n    }\n  };\n\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n\n  function handleClick(event: any) {\n    unstated.setCountry(event.currentTarget.dataset.name.toLowerCase());\n    unstated.setCode(event.currentTarget.dataset.code.toLowerCase());\n  }\n\n  React.useEffect(() => {\n    setCountries(unstated.country_list);\n    if (unstated.code) {\n      unstated.getCovidCountry(unstated.code, cases, dates);\n    } else if (countries.filter((countries: any) => countries.name.toLowerCase().includes(unstated.country)).length === 1) {\n      // eslint-disable-next-line\n      countrySelect = countries.filter((countries: any) => countries.name.toLowerCase().includes(unstated.country))[0];\n      unstated.setCode(countrySelect.code.toLowerCase());\n      unstated.getCovidCountry(countrySelect.code.toLowerCase(), \"confirmed\", `${moment().subtract(1, 'months').format()}`);\n    } else {\n      unstated.getCovidCountry(\"\", \"\", `${moment().subtract(30, 'days').format()}`);\n    }\n    // eslint-disable-next-line\n  }, [unstated.country, cases, dates])\n\n  React.useEffect(() => {\n    setData(getCovidData());\n    getAll();\n    // eslint-disable-next-line\n  }, [])\n  React.useEffect(() => {\n    if (!_.isEmpty(unstated.total)) {\n      let tmp: any = unstated.total;\n      if (!_.isEmpty(tmp.Countries))\n        setData(tmp.Countries.sort(SortCountries('TotalConfirmed', 'desc')));\n    }\n    // eslint-disable-next-line\n  }, [unstated.total])\n\n  return (\n    <>\n\n      <header>\n      </header>\n      <aside className=\"sidebar\">\n        <div className=\"field\" style={{ position: \"sticky\", top: \"0rem\", zIndex: 100, backgroundColor: '#333' }}>\n          <div className=\"control has-icons-left\" style={{ position: 'sticky' }} >\n            <span style={{ display: 'flex', flexDirection: 'column' }}>\n              <input type=\"text\" className=\"input  is-fullwidth mt-1\" value={unstated.country} onChange={e => unstated.setCountry((e.target.value).toLowerCase())} placeholder='Search a country' />\n              {unstated.country ? <span className=\"icon is-small is-left\" onClick={() => { unstated.setCountry(\"\"); unstated.setCode(\"\"); }}>\n                <i className=\"delete\"></i>\n              </span> : <></>}\n              <SelectCase setCases={setCases} className=\"is-fullwidth\" />\n              <SelectPeriod setDates={setDates} className=\"is-fullwidth\" />\n            </span>\n          </div>\n        </div>\n\n        <h3 className=\"mt-1\">Countries </h3>\n        {!_.isEmpty(unstated.code) && !_.isEmpty(unstated.country) ?\n          <TableCasesData />\n          : \"\"}\n\n        {data ? data.filter((countries: any) => countries.Country.toLowerCase().includes(unstated.country)).map((item: any, i: any) => <span data-name={item.Country} data-code={item.CountryCode}\n          className=\"button is-secondary\" key={i} onClick={handleClick}\n          style={{\n            margin: \"1px\", display: 'flex', justifyContent: \"space-between\",\n            backgroundColor: \"#333\", color: \"whitesmoke\", fontSize: \"0.8em\",\n          }} >\n          {item.Country}\n          <span>{item.TotalConfirmed}{Flag(item.CountryCode)}</span>\n        </span>) : \"\"}\n      </aside>\n\n      <section className=\"main\">\n        <Dashboard data={unstated.total ? unstated.total : (data ? data : {})} />\n        <div className=\"sticky-top\">\n          <div className=\"nav flex-column\">\n            {unstated.code ?\n              <span>\n                <LinearChart dataCountry={unstated.data} labelsCountry={unstated.labels} country={`${unstated.code.toUpperCase()}`} />\n              </span>\n              : <></>}\n            {data ?\n              <BarChart dataCountry={Y} labelsCountry={X} country={date} />\n              : <></>}\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}