{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/Projects/covid19/src/components/Pages/MapComponent.tsx\";\nimport React, { useState } from 'react'; // import { useParams, useHistory } from 'react-router-dom';\n\nimport BarChart from '../Charts/BarChart';\nimport moment from 'moment';\nimport { StoreContainer } from '../Store';\nimport ListCountries from '../modules/ListCountries';\nimport Dashboard from '../Charts/Dashboard';\nimport MapChart from '../Map/MapChart';\nimport '../../App.css';\nexport default function HomeComponent() {\n  // eslint-disable-next-line\n  const [data, setData] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [X, setX] = useState([]); // for graph bar General world Covid\n\n  const [Y, setY] = useState([]); // for graph bar General world Covid\n\n  const [content, setContent] = React.useState(\"\"); // for tooltip maps\n\n  const unstated = StoreContainer.useContainer();\n\n  function setGraph(data) {\n    setDate(\"World \" + moment().format('YYYY/MM/DD')); // set date for graph Label Title\n\n    const infos = unstated.globalDataGraph(data.Global); // cleaning data =  returning a double table \n\n    setX(infos === null || infos === void 0 ? void 0 : infos.resultDates);\n    setY(infos === null || infos === void 0 ? void 0 : infos.resultCases);\n  }\n\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n  React.useEffect(() => {\n    getAll();\n    setGraph(unstated.total); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Countries \"), /*#__PURE__*/React.createElement(ListCountries, {\n    data: unstated.total ? unstated.total : data ? data : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dashboard, {\n    data: unstated.total ? unstated.total : data ? data : {},\n    content: content ? content : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MapChart, {\n    setTooltipContent: setContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sticky-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, data ? /*#__PURE__*/React.createElement(BarChart, {\n    dataCountry: Y,\n    labelsCountry: X,\n    country: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)))));\n}","map":{"version":3,"sources":["/Users/rims/Documents/Projects/covid19/src/components/Pages/MapComponent.tsx"],"names":["React","useState","BarChart","moment","StoreContainer","ListCountries","Dashboard","MapChart","HomeComponent","data","setData","date","setDate","X","setX","Y","setY","content","setContent","unstated","useContainer","setGraph","format","infos","globalDataGraph","Global","resultDates","resultCases","getAll","getTotal","useEffect","total"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import { useParams, useHistory } from 'react-router-dom';\nimport BarChart from '../Charts/BarChart';\nimport moment from 'moment';\nimport { StoreContainer } from '../Store';\nimport ListCountries from '../modules/ListCountries';\nimport Dashboard from '../Charts/Dashboard';\nimport MapChart from '../Map/MapChart';\nimport '../../App.css'\n\nexport default function HomeComponent() {\n  // eslint-disable-next-line\n  const [data, setData] = useState<any>(\"\");\n  const [date, setDate] = useState<any>(\"\");\n  const [X, setX] = useState<any>([]);// for graph bar General world Covid\n  const [Y, setY] = useState<any>([]);// for graph bar General world Covid\n  const [content, setContent] = React.useState(\"\");// for tooltip maps\n  const unstated = StoreContainer.useContainer();\n\n  function setGraph(data: any) {\n    setDate(\"World \" + moment().format('YYYY/MM/DD'));// set date for graph Label Title\n    const infos = unstated.globalDataGraph(data.Global);// cleaning data =  returning a double table \n    setX(infos?.resultDates)\n    setY(infos?.resultCases)\n  }\n\n\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n  React.useEffect(() => {\n    getAll();\n    setGraph(unstated.total);\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <>\n\n      <header>\n      </header>\n\n      <aside className=\"sidebar\">\n        <h3 className=\"mt-1\">Countries </h3>\n        <ListCountries data={unstated.total ? unstated.total : (data ? data : {})} />\n      </aside>\n\n      <section className=\"main\">\n        {/* component with the info of  */}\n        <Dashboard data={unstated.total ? unstated.total : (data ? data : {})}\n          content={content ? content : ''}\n        />\n        {/* component with the map */}\n        <MapChart setTooltipContent={setContent} />\n        <div className=\"sticky-top\">\n          <div className=\"nav flex-column\">\n            {data ?\n              <BarChart dataCountry={Y} labelsCountry={X} country={date} />\n              : <></>}\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}