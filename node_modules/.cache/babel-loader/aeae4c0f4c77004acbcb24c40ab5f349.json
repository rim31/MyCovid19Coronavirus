{"ast":null,"code":"// eslint-disable-next-line\nimport * as React from 'react';\nimport { createContainer } from \"unstated-next\";\nimport moment from 'moment';\nimport _ from 'lodash'; // source : \"https://api.covid19api.com/\"\n// source : \"https://covidtracking.com/api/us/daily\"\n\nexport const useStore = () => {\n  const [country, setCountry] = React.useState(\"\");\n  const [code, setCode] = React.useState(\"\");\n  const [covidApi, setCovidApi] = React.useState([]);\n  const [countriesML, setCountriesML] = React.useState([]);\n  const [data, setData] = React.useState([]); // data for graph\n\n  const [dataDiff, setDataDiff] = React.useState([]); // data diff for graph\n\n  const [total, setTotal] = React.useState([]);\n  const [labels, setLabels] = React.useState([]);\n  const [markers, setMarkers] = React.useState([]);\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n  const debug = true;\n  const country_list = [{\n    \"timezones\": [\"America/Aruba\"],\n    \"lat\": 12.5,\n    \"lon\": -69.96666666,\n    \"name\": \"Aruba\",\n    \"code\": \"AW\",\n    \"capital\": \"Oranjestad\"\n  }, {\n    \"timezones\": [\"Asia/Kabul\"],\n    \"lat\": 33,\n    \"lon\": 65,\n    \"name\": \"Afghanistan\",\n    \"code\": \"AF\",\n    \"capital\": \"Kabul\"\n  }, {\n    \"timezones\": [\"Africa/Luanda\"],\n    \"lat\": 12.5,\n    \"lon\": 18.5,\n    \"name\": \"Angola\",\n    \"code\": \"AO\",\n    \"capital\": \"Luanda\"\n  }, {\n    \"timezones\": [\"America/Anguilla\"],\n    \"lat\": 18.25,\n    \"lon\": -63.16666666,\n    \"name\": \"Anguilla\",\n    \"code\": \"AI\",\n    \"capital\": \"The Valley\"\n  }, {\n    \"timezones\": [\"Europe/Mariehamn\"],\n    \"lat\": 60.116667,\n    \"lon\": 19.9,\n    \"name\": \"\\u00c5land Islands\",\n    \"code\": \"AX\",\n    \"capital\": \"Mariehamn\"\n  }, {\n    \"timezones\": [\"Europe/Tirane\"],\n    \"lat\": 41,\n    \"lon\": 20,\n    \"name\": \"Albania\",\n    \"code\": \"AL\",\n    \"capital\": \"Tirana\"\n  }, {\n    \"timezones\": [\"Europe/Andorra\"],\n    \"lat\": 42.5,\n    \"lon\": 1.5,\n    \"name\": \"Andorra\",\n    \"code\": \"AD\",\n    \"capital\": \"Andorra la Vella\"\n  }, {\n    \"timezones\": [\"Asia/Dubai\"],\n    \"lat\": 24,\n    \"lon\": 54,\n    \"name\": \"United Arab Emirates\",\n    \"code\": \"AE\",\n    \"capital\": \"Abu Dhabi\"\n  }, {\n    \"timezones\": [\"America/Argentina/Buenos_Aires\", \"America/Argentina/Cordoba\", \"America/Argentina/Salta\", \"America/Argentina/Jujuy\", \"America/Argentina/Tucuman\", \"America/Argentina/Catamarca\", \"America/Argentina/La_Rioja\", \"America/Argentina/San_Juan\", \"America/Argentina/Mendoza\", \"America/Argentina/San_Luis\", \"America/Argentina/Rio_Gallegos\", \"America/Argentina/Ushuaia\"],\n    \"lon\": -58.3816,\n    \"lat\": -34.6037,\n    \"name\": \"Argentina\",\n    \"code\": \"AR\",\n    \"capital\": \"Buenos Aires\"\n  }, {\n    \"timezones\": [\"Asia/Yerevan\"],\n    \"lat\": 40,\n    \"lon\": 45,\n    \"name\": \"Armenia\",\n    \"code\": \"AM\",\n    \"capital\": \"Yerevan\"\n  }, {\n    \"timezones\": [\"Pacific/Pago_Pago\"],\n    \"lat\": 14.33333333,\n    \"lon\": -170,\n    \"name\": \"American Samoa\",\n    \"code\": \"AS\",\n    \"capital\": \"Pago Pago\"\n  }, {\n    \"timezones\": [\"Antarctica/McMurdo\", \"Antarctica/Casey\", \"Antarctica/Davis\", \"Antarctica/DumontDUrville\", \"Antarctica/Mawson\", \"Antarctica/Palmer\", \"Antarctica/Rothera\", \"Antarctica/Syowa\", \"Antarctica/Troll\", \"Antarctica/Vostok\"],\n    \"lat\": 90,\n    \"lon\": 0,\n    \"name\": \"Antarctica\",\n    \"code\": \"AQ\",\n    \"capital\": null\n  }, {\n    \"timezones\": [\"Indian/Kerguelen\"],\n    \"lat\": 49.25,\n    \"lon\": 69.167,\n    \"name\": \"French Southern and Antarctic Lands\",\n    \"code\": \"TF\",\n    \"capital\": \"Port-aux-Fran\\u00e7ais\"\n  }, {\n    \"timezones\": [\"America/Antigua\"],\n    \"lat\": 17.05,\n    \"lon\": -61.8,\n    \"name\": \"Antigua and Barbuda\",\n    \"code\": \"AG\",\n    \"capital\": \"Saint John's\"\n  }, {\n    \"timezones\": [\"Australia/Lord_Howe\", \"Antarctica/Macquarie\", \"Australia/Hobart\", \"Australia/Currie\", \"Australia/Melbourne\", \"Australia/Sydney\", \"Australia/Broken_Hill\", \"Australia/Brisbane\", \"Australia/Lindeman\", \"Australia/Adelaide\", \"Australia/Darwin\", \"Australia/Perth\", \"Australia/Eucla\"],\n    \"lat\": 27,\n    \"lon\": 133,\n    \"name\": \"Australia\",\n    \"code\": \"AU\",\n    \"capital\": \"Canberra\"\n  }, {\n    \"timezones\": [\"Europe/Vienna\"],\n    \"lat\": 47.33333333,\n    \"lon\": 13.33333333,\n    \"name\": \"Austria\",\n    \"code\": \"AT\",\n    \"capital\": \"Vienna\"\n  }, {\n    \"timezones\": [\"Asia/Baku\"],\n    \"lat\": 40.5,\n    \"lon\": 47.5,\n    \"name\": \"Azerbaijan\",\n    \"code\": \"AZ\",\n    \"capital\": \"Baku\"\n  }, {\n    \"timezones\": [\"Africa/Bujumbura\"],\n    \"lat\": 3.5,\n    \"lon\": 30,\n    \"name\": \"Burundi\",\n    \"code\": \"BI\",\n    \"capital\": \"Bujumbura\"\n  }, {\n    \"timezones\": [\"Europe/Brussels\"],\n    \"lat\": 50.83333333,\n    \"lon\": 4,\n    \"name\": \"Belgium\",\n    \"code\": \"BE\",\n    \"capital\": \"Brussels\"\n  }, {\n    \"timezones\": [\"Africa/Porto-Novo\"],\n    \"lat\": 9.5,\n    \"lon\": 2.25,\n    \"name\": \"Benin\",\n    \"code\": \"BJ\",\n    \"capital\": \"Porto-Novo\"\n  }, {\n    \"timezones\": [\"Africa/Ouagadougou\"],\n    \"lat\": 13,\n    \"lon\": -2,\n    \"name\": \"Burkina Faso\",\n    \"code\": \"BF\",\n    \"capital\": \"Ouagadougou\"\n  }, {\n    \"timezones\": [\"Asia/Dhaka\"],\n    \"lat\": 24,\n    \"lon\": 90,\n    \"name\": \"Bangladesh\",\n    \"code\": \"BD\",\n    \"capital\": \"Dhaka\"\n  }, {\n    \"timezones\": [\"Europe/Sofia\"],\n    \"lat\": 43,\n    \"lon\": 25,\n    \"name\": \"Bulgaria\",\n    \"code\": \"BG\",\n    \"capital\": \"Sofia\"\n  }, {\n    \"timezones\": [\"Asia/Bahrain\"],\n    \"lat\": 26,\n    \"lon\": 50.55,\n    \"name\": \"Bahrain\",\n    \"code\": \"BH\",\n    \"capital\": \"Manama\"\n  }, {\n    \"timezones\": [\"America/Nassau\"],\n    \"lat\": 24.25,\n    \"lon\": -76,\n    \"name\": \"Bahamas\",\n    \"code\": \"BS\",\n    \"capital\": \"Nassau\"\n  }, {\n    \"timezones\": [\"Europe/Sarajevo\"],\n    \"lat\": 44,\n    \"lon\": 18,\n    \"name\": \"Bosnia and Herzegovina\",\n    \"code\": \"BA\",\n    \"capital\": \"Sarajevo\"\n  }, {\n    \"timezones\": [\"America/St_Barthelemy\"],\n    \"lat\": 18.5,\n    \"lon\": -63.41666666,\n    \"name\": \"Saint Barth\\u00e9lemy\",\n    \"code\": \"BL\",\n    \"capital\": \"Gustavia\"\n  }, {\n    \"timezones\": [\"Europe/Minsk\"],\n    \"lat\": 53,\n    \"lon\": 28,\n    \"name\": \"Belarus\",\n    \"code\": \"BY\",\n    \"capital\": \"Minsk\"\n  }, {\n    \"timezones\": [\"America/Belize\"],\n    \"lat\": 17.25,\n    \"lon\": -88.75,\n    \"name\": \"Belize\",\n    \"code\": \"BZ\",\n    \"capital\": \"Belmopan\"\n  }, {\n    \"timezones\": [\"Atlantic/Bermuda\"],\n    \"lat\": 32.33333333,\n    \"lon\": -64.75,\n    \"name\": \"Bermuda\",\n    \"code\": \"BM\",\n    \"capital\": \"Hamilton\"\n  }, {\n    \"timezones\": [\"America/La_Paz\"],\n    \"lon\": -68.1193,\n    \"lat\": -16.4897,\n    \"name\": \"Bolivia\",\n    \"code\": \"BO\",\n    \"capital\": \"Sucre\"\n  }, {\n    \"timezones\": [\"America/Noronha\", \"America/Belem\", \"America/Fortaleza\", \"America/Recife\", \"America/Araguaina\", \"America/Maceio\", \"America/Bahia\", \"America/Sao_Paulo\", \"America/Campo_Grande\", \"America/Cuiaba\", \"America/Santarem\", \"America/Porto_Velho\", \"America/Boa_Vista\", \"America/Manaus\", \"America/Eirunepe\", \"America/Rio_Branco\"],\n    \"lat\": -34.6037,\n    \"lon\": -58.3816,\n    \"name\": \"Brazil\",\n    \"code\": \"BR\",\n    \"capital\": \"Bras\\u00edlia\"\n  }, {\n    \"timezones\": [\"America/Barbados\"],\n    \"lat\": 13.16666666,\n    \"lon\": -59.53333333,\n    \"name\": \"Barbados\",\n    \"code\": \"BB\",\n    \"capital\": \"Bridgetown\"\n  }, {\n    \"timezones\": [\"Asia/Brunei\"],\n    \"lat\": 4.5,\n    \"lon\": 114.66666666,\n    \"name\": \"Brunei\",\n    \"code\": \"BN\",\n    \"capital\": \"Bandar Seri Begawan\"\n  }, {\n    \"timezones\": [\"Asia/Thimphu\"],\n    \"lat\": 27.5,\n    \"lon\": 90.5,\n    \"name\": \"Bhutan\",\n    \"code\": \"BT\",\n    \"capital\": \"Thimphu\"\n  }, {\n    \"timezones\": [\"Europe/Oslo\"],\n    \"lat\": 54.43333333,\n    \"lon\": 3.4,\n    \"name\": \"Bouvet Island\",\n    \"code\": \"BV\",\n    \"capital\": null\n  }, {\n    \"timezones\": [\"Africa/Gaborone\"],\n    \"lat\": 22,\n    \"lon\": 24,\n    \"name\": \"Botswana\",\n    \"code\": \"BW\",\n    \"capital\": \"Gaborone\"\n  }, {\n    \"timezones\": [\"Africa/Bangui\"],\n    \"lat\": 7,\n    \"lon\": 21,\n    \"name\": \"Central African Republic\",\n    \"code\": \"CF\",\n    \"capital\": \"Bangui\"\n  }, {\n    \"timezones\": [\"America/St_Johns\", \"America/Halifax\", \"America/Glace_Bay\", \"America/Moncton\", \"America/Goose_Bay\", \"America/Blanc-Sablon\", \"America/Toronto\", \"America/Nipigon\", \"America/Thunder_Bay\", \"America/Iqaluit\", \"America/Pangnirtung\", \"America/Atikokan\", \"America/Winnipeg\", \"America/Rainy_River\", \"America/Resolute\", \"America/Rankin_Inlet\", \"America/Regina\", \"America/Swift_Current\", \"America/Edmonton\", \"America/Cambridge_Bay\", \"America/Yellowknife\", \"America/Inuvik\", \"America/Creston\", \"America/Dawson_Creek\", \"America/Fort_Nelson\", \"America/Vancouver\", \"America/Whitehorse\", \"America/Dawson\"],\n    \"lat\": 60,\n    \"lon\": -95,\n    \"name\": \"Canada\",\n    \"code\": \"CA\",\n    \"capital\": \"Ottawa\"\n  }, {\n    \"timezones\": [\"Indian/Cocos\"],\n    \"lat\": 12.5,\n    \"lon\": 96.83333333,\n    \"name\": \"Cocos (Keeling) Islands\",\n    \"code\": \"CC\",\n    \"capital\": \"West Island\"\n  }, {\n    \"timezones\": [\"Europe/Zurich\"],\n    \"lat\": 47,\n    \"lon\": 8,\n    \"name\": \"Switzerland\",\n    \"code\": \"CH\",\n    \"capital\": \"Bern\"\n  }, {\n    \"timezones\": [\"America/Santiago\", \"Pacific/Easter\"],\n    \"lon\": -70.6693,\n    \"lat\": -33.4489,\n    \"name\": \"Chile\",\n    \"code\": \"CL\",\n    \"capital\": \"Santiago\"\n  }, {\n    \"timezones\": [\"Asia/Shanghai\", \"Asia/Urumqi\"],\n    \"lat\": 35,\n    \"lon\": 105,\n    \"name\": \"China\",\n    \"code\": \"CN\",\n    \"capital\": \"Beijing\"\n  }, {\n    \"timezones\": [\"Africa/Abidjan\"],\n    \"lat\": 8,\n    \"lon\": -5,\n    \"name\": \"Ivory Coast\",\n    \"code\": \"CI\",\n    \"capital\": \"Yamoussoukro\"\n  }, {\n    \"timezones\": [\"Africa/Douala\"],\n    \"lat\": 6,\n    \"lon\": 12,\n    \"name\": \"Cameroon\",\n    \"code\": \"CM\",\n    \"capital\": \"Yaound\\u00e9\"\n  }, {\n    \"timezones\": [\"Africa/Kinshasa\", \"Africa/Lubumbashi\"],\n    \"lat\": 0,\n    \"lon\": 25,\n    \"name\": \"DR Congo\",\n    \"code\": \"CD\",\n    \"capital\": \"Kinshasa\"\n  }, {\n    \"timezones\": [\"Africa/Brazzaville\"],\n    \"lat\": 1,\n    \"lon\": 15,\n    \"name\": \"Republic of the Congo\",\n    \"code\": \"CG\",\n    \"capital\": \"Brazzaville\"\n  }, {\n    \"timezones\": [\"Pacific/Rarotonga\"],\n    \"lat\": 21.23333333,\n    \"lon\": -159.76666666,\n    \"name\": \"Cook Islands\",\n    \"code\": \"CK\",\n    \"capital\": \"Avarua\"\n  }, {\n    \"timezones\": [\"America/Bogota\"],\n    \"lon\": -74.0721,\n    \"lat\": 4.711,\n    \"name\": \"Colombia\",\n    \"code\": \"CO\",\n    \"capital\": \"Bogot\\u00e1\"\n  }, {\n    \"timezones\": [\"Indian/Comoro\"],\n    \"lat\": 12.16666666,\n    \"lon\": 44.25,\n    \"name\": \"Comoros\",\n    \"code\": \"KM\",\n    \"capital\": \"Moroni\"\n  }, {\n    \"timezones\": [\"Atlantic/Cape_Verde\"],\n    \"lat\": 16,\n    \"lon\": -24,\n    \"name\": \"Cape Verde\",\n    \"code\": \"CV\",\n    \"capital\": \"Praia\"\n  }, {\n    \"timezones\": [\"America/Costa_Rica\"],\n    \"lat\": 10,\n    \"lon\": -84,\n    \"name\": \"Costa Rica\",\n    \"code\": \"CR\",\n    \"capital\": \"San Jos\\u00e9\"\n  }, {\n    \"timezones\": [\"America/Havana\"],\n    \"lat\": 21.5,\n    \"lon\": -80,\n    \"name\": \"Cuba\",\n    \"code\": \"CU\",\n    \"capital\": \"Havana\"\n  }, {\n    \"timezones\": [\"America/Curacao\"],\n    \"lat\": 12.116667,\n    \"lon\": -68.933333,\n    \"name\": \"Cura\\u00e7ao\",\n    \"code\": \"CW\",\n    \"capital\": \"Willemstad\"\n  }, {\n    \"timezones\": [\"Indian/Christmas\"],\n    \"lat\": 10.5,\n    \"lon\": 105.66666666,\n    \"name\": \"Christmas Island\",\n    \"code\": \"CX\",\n    \"capital\": \"Flying Fish Cove\"\n  }, {\n    \"timezones\": [\"America/Cayman\"],\n    \"lat\": 19.5,\n    \"lon\": -80.5,\n    \"name\": \"Cayman Islands\",\n    \"code\": \"KY\",\n    \"capital\": \"George Town\"\n  }, {\n    \"timezones\": [\"Asia/Nicosia\"],\n    \"lat\": 35,\n    \"lon\": 33,\n    \"name\": \"Cyprus\",\n    \"code\": \"CY\",\n    \"capital\": \"Nicosia\"\n  }, {\n    \"timezones\": [\"Europe/Prague\"],\n    \"lat\": 49.75,\n    \"lon\": 15.5,\n    \"name\": \"Czech Republic\",\n    \"code\": \"CZ\",\n    \"capital\": \"Prague\"\n  }, {\n    \"timezones\": [\"Europe/Berlin\", \"Europe/Busingen\"],\n    \"lat\": 51,\n    \"lon\": 9,\n    \"name\": \"Germany\",\n    \"code\": \"DE\",\n    \"capital\": \"Berlin\"\n  }, {\n    \"timezones\": [\"Africa/Djibouti\"],\n    \"lat\": 11.5,\n    \"lon\": 43,\n    \"name\": \"Djibouti\",\n    \"code\": \"DJ\",\n    \"capital\": \"Djibouti\"\n  }, {\n    \"timezones\": [\"America/Dominica\"],\n    \"lat\": 15.41666666,\n    \"lon\": -61.33333333,\n    \"name\": \"Dominica\",\n    \"code\": \"DM\",\n    \"capital\": \"Roseau\"\n  }, {\n    \"timezones\": [\"Europe/Copenhagen\"],\n    \"lat\": 56,\n    \"lon\": 10,\n    \"name\": \"Denmark\",\n    \"code\": \"DK\",\n    \"capital\": \"Copenhagen\"\n  }, {\n    \"timezones\": [\"America/Santo_Domingo\"],\n    \"lat\": 19,\n    \"lon\": -70.66666666,\n    \"name\": \"Dominican Republic\",\n    \"code\": \"DO\",\n    \"capital\": \"Santo Domingo\"\n  }, {\n    \"timezones\": [\"Africa/Algiers\"],\n    \"lat\": 28,\n    \"lon\": 3,\n    \"name\": \"Algeria\",\n    \"code\": \"DZ\",\n    \"capital\": \"Algiers\"\n  }, {\n    \"timezones\": [\"America/Guayaquil\", \"Pacific/Galapagos\"],\n    \"lon\": -78.4678,\n    \"lat\": -0.1807,\n    \"name\": \"Ecuador\",\n    \"code\": \"EC\",\n    \"capital\": \"Quito\"\n  }, {\n    \"timezones\": [\"Africa/Cairo\"],\n    \"lat\": 27,\n    \"lon\": 30,\n    \"name\": \"Egypt\",\n    \"code\": \"EG\",\n    \"capital\": \"Cairo\"\n  }, {\n    \"timezones\": [\"Africa/Asmara\"],\n    \"lat\": 15,\n    \"lon\": 39,\n    \"name\": \"Eritrea\",\n    \"code\": \"ER\",\n    \"capital\": \"Asmara\"\n  }, {\n    \"timezones\": [\"Africa/El_Aaiun\"],\n    \"lat\": 24.5,\n    \"lon\": -13,\n    \"name\": \"Western Sahara\",\n    \"code\": \"EH\",\n    \"capital\": \"El Aai\\u00fan\"\n  }, {\n    \"timezones\": [\"Europe/Madrid\", \"Africa/Ceuta\", \"Atlantic/Canary\"],\n    \"lat\": 40,\n    \"lon\": -4,\n    \"name\": \"Spain\",\n    \"code\": \"ES\",\n    \"capital\": \"Madrid\"\n  }, {\n    \"timezones\": [\"Europe/Tallinn\"],\n    \"lat\": 59,\n    \"lon\": 26,\n    \"name\": \"Estonia\",\n    \"code\": \"EE\",\n    \"capital\": \"Tallinn\"\n  }, {\n    \"timezones\": [\"Africa/Addis_Ababa\"],\n    \"lat\": 8,\n    \"lon\": 38,\n    \"name\": \"Ethiopia\",\n    \"code\": \"ET\",\n    \"capital\": \"Addis Ababa\"\n  }, {\n    \"timezones\": [\"Europe/Helsinki\"],\n    \"lat\": 64,\n    \"lon\": 26,\n    \"name\": \"Finland\",\n    \"code\": \"FI\",\n    \"capital\": \"Helsinki\"\n  }, {\n    \"timezones\": [\"Pacific/Fiji\"],\n    \"lat\": 18,\n    \"lon\": 175,\n    \"name\": \"Fiji\",\n    \"code\": \"FJ\",\n    \"capital\": \"Suva\"\n  }, {\n    \"timezones\": [\"Atlantic/Stanley\"],\n    \"lat\": 51.75,\n    \"lon\": -59,\n    \"name\": \"Falkland Islands\",\n    \"code\": \"FK\",\n    \"capital\": \"Stanley\"\n  }, {\n    \"timezones\": [\"Europe/Paris\"],\n    \"lat\": 46,\n    \"lon\": 2,\n    \"name\": \"France\",\n    \"code\": \"FR\",\n    \"capital\": \"Paris\"\n  }, {\n    \"timezones\": [\"Atlantic/Faroe\"],\n    \"lat\": 62,\n    \"lon\": -7,\n    \"name\": \"Faroe Islands\",\n    \"code\": \"FO\",\n    \"capital\": \"T\\u00f3rshavn\"\n  }, {\n    \"timezones\": [\"Pacific/Chuuk\", \"Pacific/Pohnpei\", \"Pacific/Kosrae\"],\n    \"lat\": 6.91666666,\n    \"lon\": 158.25,\n    \"name\": \"Micronesia\",\n    \"code\": \"FM\",\n    \"capital\": \"Palikir\"\n  }, {\n    \"timezones\": [\"Africa/Libreville\"],\n    \"lat\": 1,\n    \"lon\": 11.75,\n    \"name\": \"Gabon\",\n    \"code\": \"GA\",\n    \"capital\": \"Libreville\"\n  }, {\n    \"timezones\": [\"Europe/London\"],\n    \"lat\": 54,\n    \"lon\": -2,\n    \"name\": \"United Kingdom\",\n    \"code\": \"GB\",\n    \"capital\": \"London\"\n  }, {\n    \"timezones\": [\"Asia/Tbilisi\"],\n    \"lat\": 42,\n    \"lon\": 43.5,\n    \"name\": \"Georgia\",\n    \"code\": \"GE\",\n    \"capital\": \"Tbilisi\"\n  }, {\n    \"timezones\": [\"Europe/Guernsey\"],\n    \"lat\": 49.46666666,\n    \"lon\": -2.58333333,\n    \"name\": \"Guernsey\",\n    \"code\": \"GG\",\n    \"capital\": \"St. Peter Port\"\n  }, {\n    \"timezones\": [\"Africa/Accra\"],\n    \"lat\": 8,\n    \"lon\": -2,\n    \"name\": \"Ghana\",\n    \"code\": \"GH\",\n    \"capital\": \"Accra\"\n  }, {\n    \"timezones\": [\"Europe/Gibraltar\"],\n    \"lat\": 36.13333333,\n    \"lon\": -5.35,\n    \"name\": \"Gibraltar\",\n    \"code\": \"GI\",\n    \"capital\": \"Gibraltar\"\n  }, {\n    \"timezones\": [\"Africa/Conakry\"],\n    \"lat\": 11,\n    \"lon\": -10,\n    \"name\": \"Guinea\",\n    \"code\": \"GN\",\n    \"capital\": \"Conakry\"\n  }, {\n    \"timezones\": [\"America/Guadeloupe\"],\n    \"lat\": 16.25,\n    \"lon\": -61.583333,\n    \"name\": \"Guadeloupe\",\n    \"code\": \"GP\",\n    \"capital\": \"Basse-Terre\"\n  }, {\n    \"timezones\": [\"Africa/Banjul\"],\n    \"lat\": 13.46666666,\n    \"lon\": -16.56666666,\n    \"name\": \"Gambia\",\n    \"code\": \"GM\",\n    \"capital\": \"Banjul\"\n  }, {\n    \"timezones\": [\"Africa/Bissau\"],\n    \"lat\": 12,\n    \"lon\": -15,\n    \"name\": \"Guinea-Bissau\",\n    \"code\": \"GW\",\n    \"capital\": \"Bissau\"\n  }, {\n    \"timezones\": [\"Africa/Malabo\"],\n    \"lat\": 2,\n    \"lon\": 10,\n    \"name\": \"Equatorial Guinea\",\n    \"code\": \"GQ\",\n    \"capital\": \"Malabo\"\n  }, {\n    \"timezones\": [\"Europe/Athens\"],\n    \"lat\": 39,\n    \"lon\": 22,\n    \"name\": \"Greece\",\n    \"code\": \"GR\",\n    \"capital\": \"Athens\"\n  }, {\n    \"timezones\": [\"America/Grenada\"],\n    \"lat\": 12.11666666,\n    \"lon\": -61.66666666,\n    \"name\": \"Grenada\",\n    \"code\": \"GD\",\n    \"capital\": \"St. George's\"\n  }, {\n    \"timezones\": [\"America/Godthab\", \"America/Danmarkshavn\", \"America/Scoresbysund\", \"America/Thule\"],\n    \"lat\": 72,\n    \"lon\": -40,\n    \"name\": \"Greenland\",\n    \"code\": \"GL\",\n    \"capital\": \"Nuuk\"\n  }, {\n    \"timezones\": [\"America/Guatemala\"],\n    \"lat\": 15.5,\n    \"lon\": -90.25,\n    \"name\": \"Guatemala\",\n    \"code\": \"GT\",\n    \"capital\": \"Guatemala City\"\n  }, {\n    \"timezones\": [\"America/Cayenne\"],\n    \"lat\": 4,\n    \"lon\": -53,\n    \"name\": \"French Guiana\",\n    \"code\": \"GF\",\n    \"capital\": \"Cayenne\"\n  }, {\n    \"timezones\": [\"Pacific/Guam\"],\n    \"lat\": 13.46666666,\n    \"lon\": 144.78333333,\n    \"name\": \"Guam\",\n    \"code\": \"GU\",\n    \"capital\": \"Hag\\u00e5t\\u00f1a\"\n  }, {\n    \"timezones\": [\"America/Guyana\"],\n    \"lon\": -58.1551,\n    \"lat\": 6.8013,\n    \"name\": \"Guyana\",\n    \"code\": \"GY\",\n    \"capital\": \"Georgetown\"\n  }, {\n    \"timezones\": [\"Asia/Hong_Kong\"],\n    \"lat\": 22.267,\n    \"lon\": 114.188,\n    \"name\": \"Hong Kong\",\n    \"code\": \"HK\",\n    \"capital\": \"City of Victoria\"\n  }, {\n    \"timezones\": [\"America/Tegucigalpa\"],\n    \"lat\": 15,\n    \"lon\": -86.5,\n    \"name\": \"Honduras\",\n    \"code\": \"HN\",\n    \"capital\": \"Tegucigalpa\"\n  }, {\n    \"timezones\": [\"Europe/Zagreb\"],\n    \"lat\": 45.16666666,\n    \"lon\": 15.5,\n    \"name\": \"Croatia\",\n    \"code\": \"HR\",\n    \"capital\": \"Zagreb\"\n  }, {\n    \"timezones\": [\"America/Port-au-Prince\"],\n    \"lat\": 19,\n    \"lon\": -72.41666666,\n    \"name\": \"Haiti\",\n    \"code\": \"HT\",\n    \"capital\": \"Port-au-Prince\"\n  }, {\n    \"timezones\": [\"Europe/Budapest\"],\n    \"lat\": 47,\n    \"lon\": 20,\n    \"name\": \"Hungary\",\n    \"code\": \"HU\",\n    \"capital\": \"Budapest\"\n  }, {\n    \"timezones\": [\"Asia/Jakarta\", \"Asia/Pontianak\", \"Asia/Makassar\", \"Asia/Jayapura\"],\n    \"lat\": 5,\n    \"lon\": 120,\n    \"name\": \"Indonesia\",\n    \"code\": \"ID\",\n    \"capital\": \"Jakarta\"\n  }, {\n    \"timezones\": [\"Europe/Isle_of_Man\"],\n    \"lat\": 54.25,\n    \"lon\": -4.5,\n    \"name\": \"Isle of Man\",\n    \"code\": \"IM\",\n    \"capital\": \"Douglas\"\n  }, {\n    \"timezones\": [\"Asia/Kolkata\"],\n    \"lat\": 20,\n    \"lon\": 77,\n    \"name\": \"India\",\n    \"code\": \"IN\",\n    \"capital\": \"New Delhi\"\n  }, {\n    \"timezones\": [\"Indian/Chagos\"],\n    \"lat\": 6,\n    \"lon\": 71.5,\n    \"name\": \"British Indian Ocean Territory\",\n    \"code\": \"IO\",\n    \"capital\": \"Diego Garcia\"\n  }, {\n    \"timezones\": [\"Europe/Dublin\"],\n    \"lat\": 53,\n    \"lon\": -8,\n    \"name\": \"Ireland\",\n    \"code\": \"IE\",\n    \"capital\": \"Dublin\"\n  }, {\n    \"timezones\": [\"Asia/Tehran\"],\n    \"lat\": 32,\n    \"lon\": 53,\n    \"name\": \"Iran\",\n    \"code\": \"IR\",\n    \"capital\": \"Tehran\"\n  }, {\n    \"timezones\": [\"Asia/Baghdad\"],\n    \"lat\": 33,\n    \"lon\": 44,\n    \"name\": \"Iraq\",\n    \"code\": \"IQ\",\n    \"capital\": \"Baghdad\"\n  }, {\n    \"timezones\": [\"Atlantic/Reykjavik\"],\n    \"lat\": 65,\n    \"lon\": -18,\n    \"name\": \"Iceland\",\n    \"code\": \"IS\",\n    \"capital\": \"Reykjavik\"\n  }, {\n    \"timezones\": [\"Asia/Jerusalem\"],\n    \"lat\": 31.47,\n    \"lon\": 35.13,\n    \"name\": \"Israel\",\n    \"code\": \"IL\",\n    \"capital\": \"Jerusalem\"\n  }, {\n    \"timezones\": [\"Europe/Rome\"],\n    \"lat\": 42.83333333,\n    \"lon\": 12.83333333,\n    \"name\": \"Italy\",\n    \"code\": \"IT\",\n    \"capital\": \"Rome\"\n  }, {\n    \"timezones\": [\"America/Jamaica\"],\n    \"lat\": 18.25,\n    \"lon\": -77.5,\n    \"name\": \"Jamaica\",\n    \"code\": \"JM\",\n    \"capital\": \"Kingston\"\n  }, {\n    \"timezones\": [\"Europe/Jersey\"],\n    \"lat\": 49.25,\n    \"lon\": -2.16666666,\n    \"name\": \"Jersey\",\n    \"code\": \"JE\",\n    \"capital\": \"Saint Helier\"\n  }, {\n    \"timezones\": [\"Asia/Amman\"],\n    \"lat\": 31,\n    \"lon\": 36,\n    \"name\": \"Jordan\",\n    \"code\": \"JO\",\n    \"capital\": \"Amman\"\n  }, {\n    \"timezones\": [\"Asia/Tokyo\"],\n    \"lat\": 36,\n    \"lon\": 138,\n    \"name\": \"Japan\",\n    \"code\": \"JP\",\n    \"capital\": \"Tokyo\"\n  }, {\n    \"timezones\": [\"Asia/Almaty\", \"Asia/Qyzylorda\", \"Asia/Aqtobe\", \"Asia/Aqtau\", \"Asia/Oral\"],\n    \"lat\": 48,\n    \"lon\": 68,\n    \"name\": \"Kazakhstan\",\n    \"code\": \"KZ\",\n    \"capital\": \"Astana\"\n  }, {\n    \"timezones\": [\"Africa/Nairobi\"],\n    \"lat\": 1,\n    \"lon\": 38,\n    \"name\": \"Kenya\",\n    \"code\": \"KE\",\n    \"capital\": \"Nairobi\"\n  }, {\n    \"timezones\": [\"Asia/Bishkek\"],\n    \"lat\": 41,\n    \"lon\": 75,\n    \"name\": \"Kyrgyzstan\",\n    \"code\": \"KG\",\n    \"capital\": \"Bishkek\"\n  }, {\n    \"timezones\": [\"Asia/Phnom_Penh\"],\n    \"lat\": 13,\n    \"lon\": 105,\n    \"name\": \"Cambodia\",\n    \"code\": \"KH\",\n    \"capital\": \"Phnom Penh\"\n  }, {\n    \"timezones\": [\"Pacific/Tarawa\", \"Pacific/Enderbury\", \"Pacific/Kiritimati\"],\n    \"lat\": 1.41666666,\n    \"lon\": 173,\n    \"name\": \"Kiribati\",\n    \"code\": \"KI\",\n    \"capital\": \"South Tarawa\"\n  }, {\n    \"timezones\": [\"America/St_Kitts\"],\n    \"lat\": 17.33333333,\n    \"lon\": -62.75,\n    \"name\": \"Saint Kitts and Nevis\",\n    \"code\": \"KN\",\n    \"capital\": \"Basseterre\"\n  }, {\n    \"timezones\": [\"Asia/Seoul\"],\n    \"lat\": 37,\n    \"lon\": 127.5,\n    \"name\": \"South Korea\",\n    \"code\": \"KR\",\n    \"capital\": \"Seoul\"\n  }, {\n    \"timezones\": [\"Europe/Belgrade\"],\n    \"lat\": 42.666667,\n    \"lon\": 21.166667,\n    \"name\": \"Kosovo\",\n    \"code\": \"XK\",\n    \"capital\": \"Pristina\"\n  }, {\n    \"timezones\": [\"Asia/Kuwait\"],\n    \"lat\": 29.5,\n    \"lon\": 45.75,\n    \"name\": \"Kuwait\",\n    \"code\": \"KW\",\n    \"capital\": \"Kuwait City\"\n  }, {\n    \"timezones\": [\"Asia/Vientiane\"],\n    \"lat\": 18,\n    \"lon\": 105,\n    \"name\": \"Laos\",\n    \"code\": \"LA\",\n    \"capital\": \"Vientiane\"\n  }, {\n    \"timezones\": [\"Asia/Beirut\"],\n    \"lat\": 33.83333333,\n    \"lon\": 35.83333333,\n    \"name\": \"Lebanon\",\n    \"code\": \"LB\",\n    \"capital\": \"Beirut\"\n  }, {\n    \"timezones\": [\"Africa/Monrovia\"],\n    \"lat\": 6.5,\n    \"lon\": -9.5,\n    \"name\": \"Liberia\",\n    \"code\": \"LR\",\n    \"capital\": \"Monrovia\"\n  }, {\n    \"timezones\": [\"Africa/Tripoli\"],\n    \"lat\": 25,\n    \"lon\": 17,\n    \"name\": \"Libya\",\n    \"code\": \"LY\",\n    \"capital\": \"Tripoli\"\n  }, {\n    \"timezones\": [\"America/St_Lucia\"],\n    \"lat\": 13.88333333,\n    \"lon\": -60.96666666,\n    \"name\": \"Saint Lucia\",\n    \"code\": \"LC\",\n    \"capital\": \"Castries\"\n  }, {\n    \"timezones\": [\"Europe/Vaduz\"],\n    \"lat\": 47.26666666,\n    \"lon\": 9.53333333,\n    \"name\": \"Liechtenstein\",\n    \"code\": \"LI\",\n    \"capital\": \"Vaduz\"\n  }, {\n    \"timezones\": [\"Asia/Colombo\"],\n    \"lat\": 7,\n    \"lon\": 81,\n    \"name\": \"Sri Lanka\",\n    \"code\": \"LK\",\n    \"capital\": \"Colombo\"\n  }, {\n    \"timezones\": [\"Africa/Maseru\"],\n    \"lat\": 29.5,\n    \"lon\": 28.5,\n    \"name\": \"Lesotho\",\n    \"code\": \"LS\",\n    \"capital\": \"Maseru\"\n  }, {\n    \"timezones\": [\"Europe/Vilnius\"],\n    \"lat\": 56,\n    \"lon\": 24,\n    \"name\": \"Lithuania\",\n    \"code\": \"LT\",\n    \"capital\": \"Vilnius\"\n  }, {\n    \"timezones\": [\"Europe/Luxembourg\"],\n    \"lat\": 49.75,\n    \"lon\": 6.16666666,\n    \"name\": \"Luxembourg\",\n    \"code\": \"LU\",\n    \"capital\": \"Luxembourg\"\n  }, {\n    \"timezones\": [\"Europe/Riga\"],\n    \"lat\": 57,\n    \"lon\": 25,\n    \"name\": \"Latvia\",\n    \"code\": \"LV\",\n    \"capital\": \"Riga\"\n  }, {\n    \"timezones\": [\"Asia/Macau\"],\n    \"lat\": 22.16666666,\n    \"lon\": 113.55,\n    \"name\": \"Macau\",\n    \"code\": \"MO\",\n    \"capital\": null\n  }, {\n    \"timezones\": [\"America/Marigot\"],\n    \"lat\": 18.08333333,\n    \"lon\": -63.95,\n    \"name\": \"Saint Martin\",\n    \"code\": \"MF\",\n    \"capital\": \"Marigot\"\n  }, {\n    \"timezones\": [\"Africa/Casablanca\"],\n    \"lat\": 32,\n    \"lon\": -5,\n    \"name\": \"Morocco\",\n    \"code\": \"MA\",\n    \"capital\": \"Rabat\"\n  }, {\n    \"timezones\": [\"Europe/Monaco\"],\n    \"lat\": 43.73333333,\n    \"lon\": 7.4,\n    \"name\": \"Monaco\",\n    \"code\": \"MC\",\n    \"capital\": \"Monaco\"\n  }, {\n    \"timezones\": [\"Europe/Chisinau\"],\n    \"lat\": 47,\n    \"lon\": 29,\n    \"name\": \"Moldova\",\n    \"code\": \"MD\",\n    \"capital\": \"Chi\\u0219in\\u0103u\"\n  }, {\n    \"timezones\": [\"Indian/Antananarivo\"],\n    \"lat\": 20,\n    \"lon\": 47,\n    \"name\": \"Madagascar\",\n    \"code\": \"MG\",\n    \"capital\": \"Antananarivo\"\n  }, {\n    \"timezones\": [\"Indian/Maldives\"],\n    \"lat\": 3.25,\n    \"lon\": 73,\n    \"name\": \"Maldives\",\n    \"code\": \"MV\",\n    \"capital\": \"Mal\\u00e9\"\n  }, {\n    \"timezones\": [\"America/Mexico_City\", \"America/Cancun\", \"America/Merida\", \"America/Monterrey\", \"America/Matamoros\", \"America/Mazatlan\", \"America/Chihuahua\", \"America/Ojinaga\", \"America/Hermosillo\", \"America/Tijuana\", \"America/Bahia_Banderas\"],\n    \"lat\": 23,\n    \"lon\": -102,\n    \"name\": \"Mexico\",\n    \"code\": \"MX\",\n    \"capital\": \"Mexico City\"\n  }, {\n    \"timezones\": [\"Pacific/Majuro\", \"Pacific/Kwajalein\"],\n    \"lat\": 9,\n    \"lon\": 168,\n    \"name\": \"Marshall Islands\",\n    \"code\": \"MH\",\n    \"capital\": \"Majuro\"\n  }, {\n    \"timezones\": [\"Europe/Skopje\"],\n    \"lat\": 41.83333333,\n    \"lon\": 22,\n    \"name\": \"Macedonia\",\n    \"code\": \"MK\",\n    \"capital\": \"Skopje\"\n  }, {\n    \"timezones\": [\"Africa/Bamako\"],\n    \"lat\": 17,\n    \"lon\": -4,\n    \"name\": \"Mali\",\n    \"code\": \"ML\",\n    \"capital\": \"Bamako\"\n  }, {\n    \"timezones\": [\"Europe/Malta\"],\n    \"lat\": 35.83333333,\n    \"lon\": 14.58333333,\n    \"name\": \"Malta\",\n    \"code\": \"MT\",\n    \"capital\": \"Valletta\"\n  }, {\n    \"timezones\": [\"Asia/Rangoon\"],\n    \"lat\": 22,\n    \"lon\": 98,\n    \"name\": \"Myanmar\",\n    \"code\": \"MM\",\n    \"capital\": \"Naypyidaw\"\n  }, {\n    \"timezones\": [\"Europe/Podgorica\"],\n    \"lat\": 42.5,\n    \"lon\": 19.3,\n    \"name\": \"Montenegro\",\n    \"code\": \"ME\",\n    \"capital\": \"Podgorica\"\n  }, {\n    \"timezones\": [\"Asia/Ulaanbaatar\", \"Asia/Hovd\", \"Asia/Choibalsan\"],\n    \"lat\": 46,\n    \"lon\": 105,\n    \"name\": \"Mongolia\",\n    \"code\": \"MN\",\n    \"capital\": \"Ulan Bator\"\n  }, {\n    \"timezones\": [\"Pacific/Saipan\"],\n    \"lat\": 15.2,\n    \"lon\": 145.75,\n    \"name\": \"Northern Mariana Islands\",\n    \"code\": \"MP\",\n    \"capital\": \"Saipan\"\n  }, {\n    \"timezones\": [\"Africa/Maputo\"],\n    \"lat\": 18.25,\n    \"lon\": 35,\n    \"name\": \"Mozambique\",\n    \"code\": \"MZ\",\n    \"capital\": \"Maputo\"\n  }, {\n    \"timezones\": [\"Africa/Nouakchott\"],\n    \"lat\": 20,\n    \"lon\": -12,\n    \"name\": \"Mauritania\",\n    \"code\": \"MR\",\n    \"capital\": \"Nouakchott\"\n  }, {\n    \"timezones\": [\"America/Montserrat\"],\n    \"lat\": 16.75,\n    \"lon\": -62.2,\n    \"name\": \"Montserrat\",\n    \"code\": \"MS\",\n    \"capital\": \"Plymouth\"\n  }, {\n    \"timezones\": [\"America/Martinique\"],\n    \"lat\": 14.666667,\n    \"lon\": -61,\n    \"name\": \"Martinique\",\n    \"code\": \"MQ\",\n    \"capital\": \"Fort-de-France\"\n  }, {\n    \"timezones\": [\"Indian/Mauritius\"],\n    \"lat\": 20.28333333,\n    \"lon\": 57.55,\n    \"name\": \"Mauritius\",\n    \"code\": \"MU\",\n    \"capital\": \"Port Louis\"\n  }, {\n    \"timezones\": [\"Africa/Blantyre\"],\n    \"lat\": 13.5,\n    \"lon\": 34,\n    \"name\": \"Malawi\",\n    \"code\": \"MW\",\n    \"capital\": \"Lilongwe\"\n  }, {\n    \"timezones\": [\"Asia/Kuala_Lumpur\", \"Asia/Kuching\"],\n    \"lat\": 2.5,\n    \"lon\": 112.5,\n    \"name\": \"Malaysia\",\n    \"code\": \"MY\",\n    \"capital\": \"Kuala Lumpur\"\n  }, {\n    \"timezones\": [\"Indian/Mayotte\"],\n    \"lat\": 12.83333333,\n    \"lon\": 45.16666666,\n    \"name\": \"Mayotte\",\n    \"code\": \"YT\",\n    \"capital\": \"Mamoudzou\"\n  }, {\n    \"timezones\": [\"Africa/Windhoek\"],\n    \"lat\": 22,\n    \"lon\": 17,\n    \"name\": \"Namibia\",\n    \"code\": \"NA\",\n    \"capital\": \"Windhoek\"\n  }, {\n    \"timezones\": [\"Pacific/Noumea\"],\n    \"lat\": 21.5,\n    \"lon\": 165.5,\n    \"name\": \"New Caledonia\",\n    \"code\": \"NC\",\n    \"capital\": \"Noum\\u00e9a\"\n  }, {\n    \"timezones\": [\"Africa/Niamey\"],\n    \"lat\": 16,\n    \"lon\": 8,\n    \"name\": \"Niger\",\n    \"code\": \"NE\",\n    \"capital\": \"Niamey\"\n  }, {\n    \"timezones\": [\"Pacific/Norfolk\"],\n    \"lat\": 29.03333333,\n    \"lon\": 167.95,\n    \"name\": \"Norfolk Island\",\n    \"code\": \"NF\",\n    \"capital\": \"Kingston\"\n  }, {\n    \"timezones\": [\"Africa/Lagos\"],\n    \"lat\": 10,\n    \"lon\": 8,\n    \"name\": \"Nigeria\",\n    \"code\": \"NG\",\n    \"capital\": \"Abuja\"\n  }, {\n    \"timezones\": [\"America/Managua\"],\n    \"lat\": 13,\n    \"lon\": -85,\n    \"name\": \"Nicaragua\",\n    \"code\": \"NI\",\n    \"capital\": \"Managua\"\n  }, {\n    \"timezones\": [\"Pacific/Niue\"],\n    \"lat\": 19.03333333,\n    \"lon\": -169.86666666,\n    \"name\": \"Niue\",\n    \"code\": \"NU\",\n    \"capital\": \"Alofi\"\n  }, {\n    \"timezones\": [\"Europe/Amsterdam\"],\n    \"lat\": 52.5,\n    \"lon\": 5.75,\n    \"name\": \"Netherlands\",\n    \"code\": \"NL\",\n    \"capital\": \"Amsterdam\"\n  }, {\n    \"timezones\": [\"Europe/Oslo\"],\n    \"lat\": 62,\n    \"lon\": 10,\n    \"name\": \"Norway\",\n    \"code\": \"NO\",\n    \"capital\": \"Oslo\"\n  }, {\n    \"timezones\": [\"Asia/Kathmandu\"],\n    \"lat\": 28,\n    \"lon\": 84,\n    \"name\": \"Nepal\",\n    \"code\": \"NP\",\n    \"capital\": \"Kathmandu\"\n  }, {\n    \"timezones\": [\"Pacific/Nauru\"],\n    \"lat\": 0.53333333,\n    \"lon\": 166.91666666,\n    \"name\": \"Nauru\",\n    \"code\": \"NR\",\n    \"capital\": \"Yaren\"\n  }, {\n    \"timezones\": [\"Pacific/Auckland\", \"Pacific/Chatham\"],\n    \"lat\": 41,\n    \"lon\": 174,\n    \"name\": \"New Zealand\",\n    \"code\": \"NZ\",\n    \"capital\": \"Wellington\"\n  }, {\n    \"timezones\": [\"Asia/Muscat\"],\n    \"lat\": 21,\n    \"lon\": 57,\n    \"name\": \"Oman\",\n    \"code\": \"OM\",\n    \"capital\": \"Muscat\"\n  }, {\n    \"timezones\": [\"Asia/Karachi\"],\n    \"lat\": 30,\n    \"lon\": 70,\n    \"name\": \"Pakistan\",\n    \"code\": \"PK\",\n    \"capital\": \"Islamabad\"\n  }, {\n    \"timezones\": [\"America/Panama\"],\n    \"lat\": 9,\n    \"lon\": -80,\n    \"name\": \"Panama\",\n    \"code\": \"PA\",\n    \"capital\": \"Panama City\"\n  }, {\n    \"timezones\": [\"Pacific/Pitcairn\"],\n    \"lat\": 25.06666666,\n    \"lon\": -130.1,\n    \"name\": \"Pitcairn Islands\",\n    \"code\": \"PN\",\n    \"capital\": \"Adamstown\"\n  }, {\n    \"timezones\": [\"America/Lima\"],\n    \"lon\": -77.0428,\n    \"lat\": -12.0464,\n    \"name\": \"Peru\",\n    \"code\": \"PE\",\n    \"capital\": \"Lima\"\n  }, {\n    \"timezones\": [\"Asia/Manila\"],\n    \"lat\": 13,\n    \"lon\": 122,\n    \"name\": \"Philippines\",\n    \"code\": \"PH\",\n    \"capital\": \"Manila\"\n  }, {\n    \"timezones\": [\"Pacific/Palau\"],\n    \"lat\": 7.5,\n    \"lon\": 134.5,\n    \"name\": \"Palau\",\n    \"code\": \"PW\",\n    \"capital\": \"Ngerulmud\"\n  }, {\n    \"timezones\": [\"Pacific/Port_Moresby\", \"Pacific/Bougainville\"],\n    \"lat\": 6,\n    \"lon\": 147,\n    \"name\": \"Papua New Guinea\",\n    \"code\": \"PG\",\n    \"capital\": \"Port Moresby\"\n  }, {\n    \"timezones\": [\"Europe/Warsaw\"],\n    \"lat\": 52,\n    \"lon\": 20,\n    \"name\": \"Poland\",\n    \"code\": \"PL\",\n    \"capital\": \"Warsaw\"\n  }, {\n    \"timezones\": [\"America/Puerto_Rico\"],\n    \"lat\": 18.25,\n    \"lon\": -66.5,\n    \"name\": \"Puerto Rico\",\n    \"code\": \"PR\",\n    \"capital\": \"San Juan\"\n  }, {\n    \"timezones\": [\"Asia/Pyongyang\"],\n    \"lat\": 40,\n    \"lon\": 127,\n    \"name\": \"North Korea\",\n    \"code\": \"KP\",\n    \"capital\": \"Pyongyang\"\n  }, {\n    \"timezones\": [\"Europe/Lisbon\", \"Atlantic/Madeira\", \"Atlantic/Azores\"],\n    \"lat\": 39.5,\n    \"lon\": -8,\n    \"name\": \"Portugal\",\n    \"code\": \"PT\",\n    \"capital\": \"Lisbon\"\n  }, {\n    \"timezones\": [\"America/Asuncion\"],\n    \"lon\": -57.5759,\n    \"lat\": -25.2637,\n    \"name\": \"Paraguay\",\n    \"code\": \"PY\",\n    \"capital\": \"Asunci\\u00f3n\"\n  }, {\n    \"timezones\": [\"Asia/Gaza\", \"Asia/Hebron\"],\n    \"lat\": 31.9,\n    \"lon\": 35.2,\n    \"name\": \"Palestine\",\n    \"code\": \"PS\",\n    \"capital\": \"Ramallah\"\n  }, {\n    \"timezones\": [\"Pacific/Tahiti\", \"Pacific/Marquesas\", \"Pacific/Gambier\"],\n    \"lat\": 15,\n    \"lon\": -140,\n    \"name\": \"French Polynesia\",\n    \"code\": \"PF\",\n    \"capital\": \"Papeet\\u0113\"\n  }, {\n    \"timezones\": [\"Asia/Qatar\"],\n    \"lat\": 25.5,\n    \"lon\": 51.25,\n    \"name\": \"Qatar\",\n    \"code\": \"QA\",\n    \"capital\": \"Doha\"\n  }, {\n    \"timezones\": [\"Indian/Reunion\"],\n    \"lat\": 21.15,\n    \"lon\": 55.5,\n    \"name\": \"R\\u00e9union\",\n    \"code\": \"RE\",\n    \"capital\": \"Saint-Denis\"\n  }, {\n    \"timezones\": [\"Europe/Bucharest\"],\n    \"lat\": 46,\n    \"lon\": 25,\n    \"name\": \"Romania\",\n    \"code\": \"RO\",\n    \"capital\": \"Bucharest\"\n  }, {\n    \"timezones\": [\"Europe/Kaliningrad\", \"Europe/Moscow\", \"Europe/Simferopol\", \"Europe/Volgograd\", \"Europe/Kirov\", \"Europe/Astrakhan\", \"Europe/Samara\", \"Europe/Ulyanovsk\", \"Asia/Yekaterinburg\", \"Asia/Omsk\", \"Asia/Novosibirsk\", \"Asia/Barnaul\", \"Asia/Tomsk\", \"Asia/Novokuznetsk\", \"Asia/Krasnoyarsk\", \"Asia/Irkutsk\", \"Asia/Chita\", \"Asia/Yakutsk\", \"Asia/Khandyga\", \"Asia/Vladivostok\", \"Asia/Ust-Nera\", \"Asia/Magadan\", \"Asia/Sakhalin\", \"Asia/Srednekolymsk\", \"Asia/Kamchatka\", \"Asia/Anadyr\"],\n    \"lat\": 60,\n    \"lon\": 100,\n    \"name\": \"Russia\",\n    \"code\": \"RU\",\n    \"capital\": \"Moscow\"\n  }, {\n    \"timezones\": [\"Africa/Kigali\"],\n    \"lat\": 2,\n    \"lon\": 30,\n    \"name\": \"Rwanda\",\n    \"code\": \"RW\",\n    \"capital\": \"Kigali\"\n  }, {\n    \"timezones\": [\"Asia/Riyadh\"],\n    \"lat\": 25,\n    \"lon\": 45,\n    \"name\": \"Saudi Arabia\",\n    \"code\": \"SA\",\n    \"capital\": \"Riyadh\"\n  }, {\n    \"timezones\": [\"Africa/Khartoum\"],\n    \"lat\": 15,\n    \"lon\": 30,\n    \"name\": \"Sudan\",\n    \"code\": \"SD\",\n    \"capital\": \"Khartoum\"\n  }, {\n    \"timezones\": [\"Africa/Dakar\"],\n    \"lat\": 14,\n    \"lon\": -14,\n    \"name\": \"Senegal\",\n    \"code\": \"SN\",\n    \"capital\": \"Dakar\"\n  }, {\n    \"timezones\": [\"Asia/Singapore\"],\n    \"lat\": 1.36666666,\n    \"lon\": 103.8,\n    \"name\": \"Singapore\",\n    \"code\": \"SG\",\n    \"capital\": \"Singapore\"\n  }, {\n    \"timezones\": [\"Atlantic/South_Georgia\"],\n    \"lat\": 54.5,\n    \"lon\": -37,\n    \"name\": \"South Georgia\",\n    \"code\": \"GS\",\n    \"capital\": \"King Edward Point\"\n  }, {\n    \"timezones\": [\"Arctic/Longyearbyen\"],\n    \"lat\": 78,\n    \"lon\": 20,\n    \"name\": \"Svalbard and Jan Mayen\",\n    \"code\": \"SJ\",\n    \"capital\": \"Longyearbyen\"\n  }, {\n    \"timezones\": [\"Pacific/Guadalcanal\"],\n    \"lat\": 8,\n    \"lon\": 159,\n    \"name\": \"Solomon Islands\",\n    \"code\": \"SB\",\n    \"capital\": \"Honiara\"\n  }, {\n    \"timezones\": [\"Africa/Freetown\"],\n    \"lat\": 8.5,\n    \"lon\": -11.5,\n    \"name\": \"Sierra Leone\",\n    \"code\": \"SL\",\n    \"capital\": \"Freetown\"\n  }, {\n    \"timezones\": [\"America/El_Salvador\"],\n    \"lat\": 13.83333333,\n    \"lon\": -88.91666666,\n    \"name\": \"El Salvador\",\n    \"code\": \"SV\",\n    \"capital\": \"San Salvador\"\n  }, {\n    \"timezones\": [\"Europe/San_Marino\"],\n    \"lat\": 43.76666666,\n    \"lon\": 12.41666666,\n    \"name\": \"San Marino\",\n    \"code\": \"SM\",\n    \"capital\": \"City of San Marino\"\n  }, {\n    \"timezones\": [\"Africa/Mogadishu\"],\n    \"lat\": 10,\n    \"lon\": 49,\n    \"name\": \"Somalia\",\n    \"code\": \"SO\",\n    \"capital\": \"Mogadishu\"\n  }, {\n    \"timezones\": [\"America/Miquelon\"],\n    \"lat\": 46.83333333,\n    \"lon\": -56.33333333,\n    \"name\": \"Saint Pierre and Miquelon\",\n    \"code\": \"PM\",\n    \"capital\": \"Saint-Pierre\"\n  }, {\n    \"timezones\": [\"Europe/Belgrade\"],\n    \"lat\": 44,\n    \"lon\": 21,\n    \"name\": \"Serbia\",\n    \"code\": \"RS\",\n    \"capital\": \"Belgrade\"\n  }, {\n    \"timezones\": [\"Africa/Juba\"],\n    \"lat\": 7,\n    \"lon\": 30,\n    \"name\": \"South Sudan\",\n    \"code\": \"SS\",\n    \"capital\": \"Juba\"\n  }, {\n    \"timezones\": [\"Africa/Sao_Tome\"],\n    \"lat\": 1,\n    \"lon\": 7,\n    \"name\": \"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\",\n    \"code\": \"ST\",\n    \"capital\": \"S\\u00e3o Tom\\u00e9\"\n  }, {\n    \"timezones\": [\"America/Paramaribo\"],\n    \"lon\": -55.2038,\n    \"lat\": 5.852,\n    \"name\": \"Suriname\",\n    \"code\": \"SR\",\n    \"capital\": \"Paramaribo\"\n  }, {\n    \"timezones\": [\"Europe/Bratislava\"],\n    \"lat\": 48.66666666,\n    \"lon\": 19.5,\n    \"name\": \"Slovakia\",\n    \"code\": \"SK\",\n    \"capital\": \"Bratislava\"\n  }, {\n    \"timezones\": [\"Europe/Ljubljana\"],\n    \"lat\": 46.11666666,\n    \"lon\": 14.81666666,\n    \"name\": \"Slovenia\",\n    \"code\": \"SI\",\n    \"capital\": \"Ljubljana\"\n  }, {\n    \"timezones\": [\"Europe/Stockholm\"],\n    \"lat\": 62,\n    \"lon\": 15,\n    \"name\": \"Sweden\",\n    \"code\": \"SE\",\n    \"capital\": \"Stockholm\"\n  }, {\n    \"timezones\": [\"Africa/Mbabane\"],\n    \"lat\": 26.5,\n    \"lon\": 31.5,\n    \"name\": \"Swaziland\",\n    \"code\": \"SZ\",\n    \"capital\": \"Lobamba\"\n  }, {\n    \"timezones\": [\"America/Lower_Princes\"],\n    \"lat\": 18.033333,\n    \"lon\": -63.05,\n    \"name\": \"Sint Maarten\",\n    \"code\": \"SX\",\n    \"capital\": \"Philipsburg\"\n  }, {\n    \"timezones\": [\"Indian/Mahe\"],\n    \"lat\": 4.58333333,\n    \"lon\": 55.66666666,\n    \"name\": \"Seychelles\",\n    \"code\": \"SC\",\n    \"capital\": \"Victoria\"\n  }, {\n    \"timezones\": [\"Asia/Damascus\"],\n    \"lat\": 35,\n    \"lon\": 38,\n    \"name\": \"Syria\",\n    \"code\": \"SY\",\n    \"capital\": \"Damascus\"\n  }, {\n    \"timezones\": [\"America/Grand_Turk\"],\n    \"lat\": 21.75,\n    \"lon\": -71.58333333,\n    \"name\": \"Turks and Caicos Islands\",\n    \"code\": \"TC\",\n    \"capital\": \"Cockburn Town\"\n  }, {\n    \"timezones\": [\"Africa/Ndjamena\"],\n    \"lat\": 15,\n    \"lon\": 19,\n    \"name\": \"Chad\",\n    \"code\": \"TD\",\n    \"capital\": \"N'Djamena\"\n  }, {\n    \"timezones\": [\"Africa/Lome\"],\n    \"lat\": 8,\n    \"lon\": 1.16666666,\n    \"name\": \"Togo\",\n    \"code\": \"TG\",\n    \"capital\": \"Lom\\u00e9\"\n  }, {\n    \"timezones\": [\"Asia/Bangkok\"],\n    \"lat\": 15,\n    \"lon\": 100,\n    \"name\": \"Thailand\",\n    \"code\": \"TH\",\n    \"capital\": \"Bangkok\"\n  }, {\n    \"timezones\": [\"Asia/Dushanbe\"],\n    \"lat\": 39,\n    \"lon\": 71,\n    \"name\": \"Tajikistan\",\n    \"code\": \"TJ\",\n    \"capital\": \"Dushanbe\"\n  }, {\n    \"timezones\": [\"Pacific/Fakaofo\"],\n    \"lat\": 9,\n    \"lon\": -172,\n    \"name\": \"Tokelau\",\n    \"code\": \"TK\",\n    \"capital\": \"Fakaofo\"\n  }, {\n    \"timezones\": [\"Asia/Ashgabat\"],\n    \"lat\": 40,\n    \"lon\": 60,\n    \"name\": \"Turkmenistan\",\n    \"code\": \"TM\",\n    \"capital\": \"Ashgabat\"\n  }, {\n    \"timezones\": [\"Asia/Dili\"],\n    \"lat\": 8.83333333,\n    \"lon\": 125.91666666,\n    \"name\": \"Timor-Leste\",\n    \"code\": \"TL\",\n    \"capital\": \"Dili\"\n  }, {\n    \"timezones\": [\"Pacific/Tongatapu\"],\n    \"lat\": 20,\n    \"lon\": -175,\n    \"name\": \"Tonga\",\n    \"code\": \"TO\",\n    \"capital\": \"Nuku'alofa\"\n  }, {\n    \"timezones\": [\"America/Port_of_Spain\"],\n    \"lat\": 11,\n    \"lon\": -61,\n    \"name\": \"Trinidad and Tobago\",\n    \"code\": \"TT\",\n    \"capital\": \"Port of Spain\"\n  }, {\n    \"timezones\": [\"Africa/Tunis\"],\n    \"lat\": 34,\n    \"lon\": 9,\n    \"name\": \"Tunisia\",\n    \"code\": \"TN\",\n    \"capital\": \"Tunis\"\n  }, {\n    \"timezones\": [\"Europe/Istanbul\"],\n    \"lat\": 39,\n    \"lon\": 35,\n    \"name\": \"Turkey\",\n    \"code\": \"TR\",\n    \"capital\": \"Ankara\"\n  }, {\n    \"timezones\": [\"Pacific/Funafuti\"],\n    \"lat\": 8,\n    \"lon\": 178,\n    \"name\": \"Tuvalu\",\n    \"code\": \"TV\",\n    \"capital\": \"Funafuti\"\n  }, {\n    \"timezones\": [\"Asia/Taipei\"],\n    \"lat\": 23.5,\n    \"lon\": 121,\n    \"name\": \"Taiwan\",\n    \"code\": \"TW\",\n    \"capital\": \"Taipei\"\n  }, {\n    \"timezones\": [\"Africa/Dar_es_Salaam\"],\n    \"lat\": 6,\n    \"lon\": 35,\n    \"name\": \"Tanzania\",\n    \"code\": \"TZ\",\n    \"capital\": \"Dodoma\"\n  }, {\n    \"timezones\": [\"Africa/Kampala\"],\n    \"lat\": 1,\n    \"lon\": 32,\n    \"name\": \"Uganda\",\n    \"code\": \"UG\",\n    \"capital\": \"Kampala\"\n  }, {\n    \"timezones\": [\"Europe/Kiev\", \"Europe/Uzhgorod\", \"Europe/Zaporozhye\"],\n    \"lat\": 49,\n    \"lon\": 32,\n    \"name\": \"Ukraine\",\n    \"code\": \"UA\",\n    \"capital\": \"Kiev\"\n  }, {\n    \"timezones\": [\"Pacific/Johnston\", \"Pacific/Midway\", \"Pacific/Wake\"],\n    \"lat\": 19.2911437,\n    \"lon\": 166.618332,\n    \"name\": \"United States Minor Outlying Islands\",\n    \"code\": \"UM\",\n    \"capital\": null\n  }, {\n    \"timezones\": [\"America/Montevideo\"],\n    \"lon\": -56.1645,\n    \"lat\": -34.9011,\n    \"name\": \"Uruguay\",\n    \"code\": \"UY\",\n    \"capital\": \"Montevideo\"\n  }, {\n    \"timezones\": [\"America/New_York\", \"America/Detroit\", \"America/Kentucky/Louisville\", \"America/Kentucky/Monticello\", \"America/Indiana/Indianapolis\", \"America/Indiana/Vincennes\", \"America/Indiana/Winamac\", \"America/Indiana/Marengo\", \"America/Indiana/Petersburg\", \"America/Indiana/Vevay\", \"America/Chicago\", \"America/Indiana/Tell_City\", \"America/Indiana/Knox\", \"America/Menominee\", \"America/North_Dakota/Center\", \"America/North_Dakota/New_Salem\", \"America/North_Dakota/Beulah\", \"America/Denver\", \"America/Boise\", \"America/Phoenix\", \"America/Los_Angeles\", \"America/Anchorage\", \"America/Juneau\", \"America/Sitka\", \"America/Metlakatla\", \"America/Yakutat\", \"America/Nome\", \"America/Adak\", \"Pacific/Honolulu\"],\n    \"lat\": 38,\n    \"lon\": -97,\n    \"name\": \"United States\",\n    \"code\": \"US\",\n    \"capital\": \"Washington D.C.\"\n  }, {\n    \"timezones\": [\"Asia/Samarkand\", \"Asia/Tashkent\"],\n    \"lat\": 41,\n    \"lon\": 64,\n    \"name\": \"Uzbekistan\",\n    \"code\": \"UZ\",\n    \"capital\": \"Tashkent\"\n  }, {\n    \"timezones\": [\"Europe/Vatican\"],\n    \"lat\": 41.9,\n    \"lon\": 12.45,\n    \"name\": \"Vatican City\",\n    \"code\": \"VA\",\n    \"capital\": \"Vatican City\"\n  }, {\n    \"timezones\": [\"America/St_Vincent\"],\n    \"lat\": 13.25,\n    \"lon\": -61.2,\n    \"name\": \"Saint Vincent and the Grenadines\",\n    \"code\": \"VC\",\n    \"capital\": \"Kingstown\"\n  }, {\n    \"timezones\": [\"America/Caracas\"],\n    \"lon\": -66.9036,\n    \"lat\": 10.4806,\n    \"name\": \"Venezuela\",\n    \"code\": \"VE\",\n    \"capital\": \"Caracas\"\n  }, {\n    \"timezones\": [\"America/Tortola\"],\n    \"lat\": 18.431383,\n    \"lon\": -64.62305,\n    \"name\": \"British Virgin Islands\",\n    \"code\": \"VG\",\n    \"capital\": \"Road Town\"\n  }, {\n    \"timezones\": [\"America/St_Thomas\"],\n    \"lat\": 18.35,\n    \"lon\": -64.933333,\n    \"name\": \"United States Virgin Islands\",\n    \"code\": \"VI\",\n    \"capital\": \"Charlotte Amalie\"\n  }, {\n    \"timezones\": [\"Asia/Ho_Chi_Minh\"],\n    \"lat\": 16.16666666,\n    \"lon\": 107.83333333,\n    \"name\": \"Vietnam\",\n    \"code\": \"VN\",\n    \"capital\": \"Hanoi\"\n  }, {\n    \"timezones\": [\"Pacific/Efate\"],\n    \"lat\": 16,\n    \"lon\": 167,\n    \"name\": \"Vanuatu\",\n    \"code\": \"VU\",\n    \"capital\": \"Port Vila\"\n  }, {\n    \"timezones\": [\"Pacific/Wallis\"],\n    \"lat\": 13.3,\n    \"lon\": -176.2,\n    \"name\": \"Wallis and Futuna\",\n    \"code\": \"WF\",\n    \"capital\": \"Mata-Utu\"\n  }, {\n    \"timezones\": [\"Pacific/Apia\"],\n    \"lat\": 13.58333333,\n    \"lon\": -172.33333333,\n    \"name\": \"Samoa\",\n    \"code\": \"WS\",\n    \"capital\": \"Apia\"\n  }, {\n    \"timezones\": [\"Asia/Aden\"],\n    \"lat\": 15,\n    \"lon\": 48,\n    \"name\": \"Yemen\",\n    \"code\": \"YE\",\n    \"capital\": \"Sana'a\"\n  }, {\n    \"timezones\": [\"Africa/Johannesburg\"],\n    \"lat\": 29,\n    \"lon\": 24,\n    \"name\": \"South Africa\",\n    \"code\": \"ZA\",\n    \"capital\": \"Pretoria\"\n  }, {\n    \"timezones\": [\"Africa/Lusaka\"],\n    \"lat\": 15,\n    \"lon\": 30,\n    \"name\": \"Zambia\",\n    \"code\": \"ZM\",\n    \"capital\": \"Lusaka\"\n  }, {\n    \"timezones\": [\"Africa/Harare\"],\n    \"lat\": 20,\n    \"lon\": 30,\n    \"name\": \"Zimbabwe\",\n    \"code\": \"ZW\",\n    \"capital\": \"Harare\"\n  }];\n\n  function globalDataGraph(data) {\n    let resultCases = [];\n    let resultDates = [];\n\n    for (let i in data) {\n      resultDates.push(i);\n      resultCases.push(data[i]);\n    } // console.log(resultCases, resultDates);\n\n\n    return {\n      resultCases,\n      resultDates\n    };\n  }\n\n  function countriesListData(data) {\n    let resultCases = [];\n    let resultCountries = [];\n    let result = [];\n\n    for (let i in data) {\n      resultCountries.push(data[i].Country);\n      resultCases.push(data[i].TotalConfirmed);\n      result.push({\n        country: data[i].Country,\n        TotalConfirmed: data[i].TotalConfirmed,\n        sortable: true\n      });\n    } // console.log(resultCases, resultCountries);\n\n\n    return {\n      result,\n      resultCases,\n      resultCountries\n    };\n  }\n\n  function countryDataGraph(data, country, caseType, dateTo) {\n    let resultCases = [];\n    let resultDates = [];\n\n    if (data.length > 0) {\n      data.forEach(item => {\n        // console.log(\"item : \", caseType, item[caseType], item);\n        if (country === 'fr' || debug === false) {\n          resultCases.push(item.Cases.filter(!item.Province));\n          resultDates.push(moment(item.Date).format('YYYY/MM/DD')); // resultDates.push(moment(item[0].last_update).format('YYYY/MM/DD'));\n        } else if (country === 'us' || debug === true) {\n          if (moment(item.last_update).isAfter(dateTo)) {\n            resultCases.push(caseType === \"confirmed\" ? item.cases : item[caseType]);\n            resultDates.push(moment(item.last_update).format('YYYY/MM/DD'));\n          }\n        } else {\n          if (moment(item.Date).isAfter(dateTo)) {\n            resultCases.push(item.Cases);\n            resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          }\n        }\n      });\n\n      let resultCasesDiff = _.map(resultCases, function (e, i) {\n        return resultCases[i + 1] - e < 0 ? 0 : resultCases[i + 1] - e;\n      });\n\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      dataDiff === [] ? console.log(dataDiff) : console.log('');\n      setData(resultCasesDiff); // inversion between resultCasesDiff and resultCases for display graph of variations and not total\n\n      setDataDiff(resultCases);\n      setLabels(resultDates);\n      return {\n        resultCases,\n        resultDates,\n        resultCasesDiff\n      };\n    } else {\n      setData([]);\n      setLabels([]);\n      setDataDiff([]);\n    }\n  } // function getCovidApi() :  get data by country\n  // differents source cause pb with USA, \n  // you cans get data according Country Code, date from  and case : confirmed, deaths, recovered\n  // have to use function countryDataGraph() to clean data and have an array to fit with D3js charts react-map-smples\n\n\n  function getCovidApi(country, caseType, dateTo) {\n    if (country === \"\") {\n      countryDataGraph([], \"\", \"\", \"\");\n    } else {\n      try {\n        if (debug === false) {\n          return fetch(`https://covid19-api.org/api/timeline/${country}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          }).then(response => response.json()).then(res => {\n            countryDataGraph(res.reverse(), country, caseType, dateTo); // cleaning data for ChartJS\n          }).catch(err => alert(err));\n        } else {\n          return fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          }).then(response => response.json()).then(res => {\n            console.log(`res Fetch`, res);\n            countryDataGraph(res, country, caseType, dateTo); // cleaning data for ChartJS\n          }).catch(err => alert(err));\n        }\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n    }\n  }\n\n  ; // to set unstated.total data : {Global, Countries,..} all total data of today\n\n  const getTotal = async () => {\n    await fetch(`https://api.covid19api.com/summary`).then(res => res.json()).then(resp => setTotal(resp)).catch(err => {\n      throw err;\n    });\n  };\n\n  const getCovidCountry = async (country, caseType, dateTo) => {\n    setCovidApi((await getCovidApi(country, caseType, dateTo))); // console.log(`https://covid19-api.org/api/timeline/${country}`)\n    // console.log(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`)\n  };\n\n  const updateTotalCovid = async () => {\n    setTotal((await getTotal()));\n  }; // =================================================\n  // function matching data for the map : react map simples\n  // source (`https://api.covid19api.com/all`, {\n\n\n  function getMarkers(arr1, arr2) {\n    return _.union(_.map(arr1, function (obj1) {\n      var same = _.find(arr2, function (obj2) {\n        return obj1[\"CountryCode\"] === obj2[\"code\"];\n      });\n\n      return same ? _.extend(obj1, same) : obj1;\n    }), _.reject(arr2, function (obj2) {\n      return _.find(arr1, function (obj1) {\n        return obj2[\"code\"] === obj1[\"CountryCode\"];\n      });\n    }));\n  } //order \n\n\n  function dynamicSort(property) {\n    var sortOrder = 1;\n\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n\n    return function (b, a) {\n      /* next line works with strings and numbers, \n       * and you may want to customize it to your needs\n       */\n      var result = a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  }\n\n  function getCovidMapMarkers() {\n    fetch(`https://api.covid19api.com/summary`, {\n      method: \"GET\"\n    }).then(response => response.json()).then(res => {\n      // console.log(\"***********************\", res.Countries);\n      let resp = getMarkers(res.Countries, country_list);\n      setMarkers(resp.sort(dynamicSort(\"TotalConfirmed\"))); // console.log(resp);\n\n      return resp;\n    }).catch(err => alert(err));\n  }\n\n  function getCountriesML() {\n    try {\n      return fetch(`\"https://covid19-api.org/api/status\"`, {\n        method: \"GET\"\n      }).then(response => response.text());\n    } catch (err) {\n      console.log(err);\n      return;\n    }\n  }\n\n  ;\n\n  const updateCountriesML = async () => {\n    setCountriesML((await getCountriesML()));\n  };\n\n  return {\n    covidApi,\n    country_list,\n    data,\n    labels,\n    total,\n    country,\n    code,\n    markers,\n    countriesML,\n    setCountry,\n    setCode,\n    getTotal,\n    getCovidCountry,\n    updateTotalCovid,\n    countryDataGraph,\n    globalDataGraph,\n    countriesListData,\n    getCovidMapMarkers,\n    updateCountriesML\n  };\n};\nexport const StoreContainer = createContainer(useStore); // let country_list = { 'AF' : 'Afghanistan', 'AX' : 'Aland Islands', 'AL' : 'Albania', 'DZ' : 'Algeria', 'AS' : 'American Samoa', 'AD' : 'Andorra', 'AO' : 'Angola', 'AI' : 'Anguilla', 'AQ' : 'Antarctica', 'AG' : 'Antigua And Barbuda', 'AR' : 'Argentina', 'AM' : 'Armenia', 'AW' : 'Aruba', 'AU' : 'Australia', 'AT' : 'Austria', 'AZ' : 'Azerbaijan', 'BS' : 'Bahamas', 'BH' : 'Bahrain', 'BD' : 'Bangladesh', 'BB' : 'Barbados', 'BY' : 'Belarus', 'BE' : 'Belgium', 'BZ' : 'Belize', 'BJ' : 'Benin', 'BM' : 'Bermuda', 'BT' : 'Bhutan', 'BO' : 'Bolivia', 'BA' : 'Bosnia And Herzegovina', 'BW' : 'Botswana', 'BV' : 'Bouvet Island', 'BR' : 'Brazil', 'IO' : 'British Indian Ocean Territory', 'BN' : 'Brunei Darussalam', 'BG' : 'Bulgaria', 'BF' : 'Burkina Faso', 'BI' : 'Burundi', 'KH' : 'Cambodia', 'CM' : 'Cameroon', 'CA' : 'Canada', 'CV' : 'Cape Verde', 'KY' : 'Cayman Islands', 'CF' : 'Central African Republic', 'TD' : 'Chad', 'CL' : 'Chile', 'CN' : 'China', 'CX' : 'Christmas Island', 'CC' : 'Cocos (Keeling) Islands', 'CO' : 'Colombia', 'KM' : 'Comoros', 'CG' : 'Congo', 'CD' : 'Congo, Democratic Republic', 'CK' : 'Cook Islands', 'CR' : 'Costa Rica', 'CI' : 'Cote D\\'Ivoire', 'HR' : 'Croatia', 'CU' : 'Cuba', 'CY' : 'Cyprus', 'CZ' : 'Czech Republic', 'DK' : 'Denmark', 'DJ' : 'Djibouti', 'DM' : 'Dominica', 'DO' : 'Dominican Republic', 'EC' : 'Ecuador', 'EG' : 'Egypt', 'SV' : 'El Salvador', 'GQ' : 'Equatorial Guinea', 'ER' : 'Eritrea', 'EE' : 'Estonia', 'ET' : 'Ethiopia', 'FK' : 'Falkland Islands (Malvinas)', 'FO' : 'Faroe Islands', 'FJ' : 'Fiji', 'FI' : 'Finland', 'FR' : 'France', 'GF' : 'French Guiana', 'PF' : 'French Polynesia', 'TF' : 'French Southern Territories', 'GA' : 'Gabon', 'GM' : 'Gambia', 'GE' : 'Georgia', 'DE' : 'Germany', 'GH' : 'Ghana', 'GI' : 'Gibraltar', 'GR' : 'Greece', 'GL' : 'Greenland', 'GD' : 'Grenada', 'GP' : 'Guadeloupe', 'GU' : 'Guam', 'GT' : 'Guatemala', 'GG' : 'Guernsey', 'GN' : 'Guinea', 'GW' : 'Guinea-Bissau', 'GY' : 'Guyana', 'HT' : 'Haiti', 'HM' : 'Heard Island & Mcdonald Islands', 'VA' : 'Holy See (Vatican City State)', 'HN' : 'Honduras', 'HK' : 'Hong Kong', 'HU' : 'Hungary', 'IS' : 'Iceland', 'IN' : 'India', 'ID' : 'Indonesia', 'IR' : 'Iran, Islamic Republic Of', 'IQ' : 'Iraq', 'IE' : 'Ireland', 'IM' : 'Isle Of Man', 'IL' : 'Israel', 'IT' : 'Italy', 'JM' : 'Jamaica', 'JP' : 'Japan', 'JE' : 'Jersey', 'JO' : 'Jordan', 'KZ' : 'Kazakhstan', 'KE' : 'Kenya', 'KI' : 'Kiribati', 'KR' : 'Korea', 'KW' : 'Kuwait', 'KG' : 'Kyrgyzstan', 'LA' : 'Lao People\\'s Democratic Republic', 'LV' : 'Latvia', 'LB' : 'Lebanon', 'LS' : 'Lesotho', 'LR' : 'Liberia', 'LY' : 'Libyan Arab Jamahiriya', 'LI' : 'Liechtenstein', 'LT' : 'Lithuania', 'LU' : 'Luxembourg', 'MO' : 'Macao', 'MK' : 'Macedonia', 'MG' : 'Madagascar', 'MW' : 'Malawi', 'MY' : 'Malaysia', 'MV' : 'Maldives', 'ML' : 'Mali', 'MT' : 'Malta', 'MH' : 'Marshall Islands', 'MQ' : 'Martinique', 'MR' : 'Mauritania', 'MU' : 'Mauritius', 'YT' : 'Mayotte', 'MX' : 'Mexico', 'FM' : 'Micronesia, Federated States Of', 'MD' : 'Moldova', 'MC' : 'Monaco', 'MN' : 'Mongolia', 'ME' : 'Montenegro', 'MS' : 'Montserrat', 'MA' : 'Morocco', 'MZ' : 'Mozambique', 'MM' : 'Myanmar', 'NA' : 'Namibia', 'NR' : 'Nauru', 'NP' : 'Nepal', 'NL' : 'Netherlands', 'AN' : 'Netherlands Antilles', 'NC' : 'New Caledonia', 'NZ' : 'New Zealand', 'NI' : 'Nicaragua', 'NE' : 'Niger', 'NG' : 'Nigeria', 'NU' : 'Niue', 'NF' : 'Norfolk Island', 'MP' : 'Northern Mariana Islands', 'NO' : 'Norway', 'OM' : 'Oman', 'PK' : 'Pakistan', 'PW' : 'Palau', 'PS' : 'Palestinian Territory, Occupied', 'PA' : 'Panama', 'PG' : 'Papua New Guinea', 'PY' : 'Paraguay', 'PE' : 'Peru', 'PH' : 'Philippines', 'PN' : 'Pitcairn', 'PL' : 'Poland', 'PT' : 'Portugal', 'PR' : 'Puerto Rico', 'QA' : 'Qatar', 'RE' : 'Reunion', 'RO' : 'Romania', 'RU' : 'Russian Federation', 'RW' : 'Rwanda', 'BL' : 'Saint Barthelemy', 'SH' : 'Saint Helena', 'KN' : 'Saint Kitts And Nevis', 'LC' : 'Saint Lucia', 'MF' : 'Saint Martin', 'PM' : 'Saint Pierre And Miquelon', 'VC' : 'Saint Vincent And Grenadines', 'WS' : 'Samoa', 'SM' : 'San Marino', 'ST' : 'Sao Tome And Principe', 'SA' : 'Saudi Arabia', 'SN' : 'Senegal', 'RS' : 'Serbia', 'SC' : 'Seychelles', 'SL' : 'Sierra Leone', 'SG' : 'Singapore', 'SK' : 'Slovakia', 'SI' : 'Slovenia', 'SB' : 'Solomon Islands', 'SO' : 'Somalia', 'ZA' : 'South Africa', 'GS' : 'South Georgia And Sandwich Isl.', 'ES' : 'Spain', 'LK' : 'Sri Lanka', 'SD' : 'Sudan', 'SR' : 'Suriname', 'SJ' : 'Svalbard And Jan Mayen', 'SZ' : 'Swaziland', 'SE' : 'Sweden', 'CH' : 'Switzerland', 'SY' : 'Syrian Arab Republic', 'TW' : 'Taiwan', 'TJ' : 'Tajikistan', 'TZ' : 'Tanzania', 'TH' : 'Thailand', 'TL' : 'Timor-Leste', 'TG' : 'Togo', 'TK' : 'Tokelau', 'TO' : 'Tonga', 'TT' : 'Trinidad And Tobago', 'TN' : 'Tunisia', 'TR' : 'Turkey', 'TM' : 'Turkmenistan', 'TC' : 'Turks And Caicos Islands', 'TV' : 'Tuvalu', 'UG' : 'Uganda', 'UA' : 'Ukraine', 'AE' : 'United Arab Emirates', 'GB' : 'United Kingdom', 'US' : 'United States', 'UM' : 'United States Outlying Islands', 'UY' : 'Uruguay', 'UZ' : 'Uzbekistan', 'VU' : 'Vanuatu', 'VE' : 'Venezuela', 'VN' : 'Viet Nam', 'VG' : 'Virgin Islands, British', 'VI' : 'Virgin Islands, U.S.', 'WF' : 'Wallis And Futuna', 'EH' : 'Western Sahara', 'YE' : 'Yemen', 'ZM' : 'Zambia', 'ZW' : 'Zimbabwe' };\n// let country_list = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua &amp; Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia &amp; Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Cape Verde\", \"Cayman Islands\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cruise Ship\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kuwait\", \"Kyrgyz Republic\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre &amp; Miquelon\", \"Samoa\", \"San Marino\", \"Satellite\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"South Africa\", \"South Korea\", \"Spain\", \"Sri Lanka\", \"St Kitts &amp; Nevis\", \"St Lucia\", \"St Vincent\", \"St. Lucia\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad &amp; Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks &amp; Caicos\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"Uruguay\", \"Uzbekistan\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];","map":{"version":3,"sources":["/Users/rims/Documents/Projects/covid19/src/components/Store.tsx"],"names":["React","createContainer","moment","_","useStore","country","setCountry","useState","code","setCode","covidApi","setCovidApi","countriesML","setCountriesML","data","setData","dataDiff","setDataDiff","total","setTotal","labels","setLabels","markers","setMarkers","headers","Headers","debug","country_list","globalDataGraph","resultCases","resultDates","i","push","countriesListData","resultCountries","result","Country","TotalConfirmed","sortable","countryDataGraph","caseType","dateTo","length","forEach","item","Cases","filter","Province","Date","format","last_update","isAfter","cases","resultCasesDiff","map","e","pop","console","log","getCovidApi","fetch","method","redirect","then","response","json","res","reverse","catch","err","alert","getTotal","resp","getCovidCountry","updateTotalCovid","getMarkers","arr1","arr2","union","obj1","same","find","obj2","extend","reject","dynamicSort","property","sortOrder","substr","b","a","getCovidMapMarkers","Countries","sort","getCountriesML","text","updateCountriesML","StoreContainer"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport * as React from 'react';\nimport { createContainer } from \"unstated-next\";\nimport moment from 'moment';\nimport _ from 'lodash';\n\n// source : \"https://api.covid19api.com/\"\n// source : \"https://covidtracking.com/api/us/daily\"\n\ninterface ICountryData {\n  Cases: Number,\n  City: String,\n  CityName: String,\n  Country: String,\n  CountryName: String,\n  Date: Date,\n  Lat: String,\n  Lon: String,\n  Province: String,\n  Status: String,\n}\n\ninterface IGlobalData {\n  NewConfirmed: Number,\n  NewDeaths: Number,\n  NewRecovered: Number,\n  TotalConfirmed: Number,\n  TotalDeaths: Number,\n  TotalRecovered: Number\n}\n\ninterface ICountry {\n  Country: string,\n  CountryName: string,\n  Slug: string,\n  NewConfirmed: number,\n  TotalConfirmed: number,\n  NewDeaths: number,\n  TotalDeaths: number,\n  NewRecovered: number,\n  TotalRecovered: number,\n  Date: Date\n}\n\ninterface IDataCovid {\n  country: string,\n  cases: number,\n  deaths: number,\n  recovered: number,\n  last_update: Date\n}\n\ninterface ICountries {\n  timezones: string[],\n  latlon?: string[],\n  lat?: number,\n  lon?: number,\n  name: string,\n  code: string,\n  capital: string\n}\n\nexport const useStore = () => {\n  const [country, setCountry] = React.useState<string>(\"\");\n  const [code, setCode] = React.useState<string>(\"\");\n  const [covidApi, setCovidApi] = React.useState<Object[] | null | void | undefined>([]);\n  const [countriesML, setCountriesML] = React.useState<Object[] | any>([]);\n  const [data, setData] = React.useState<Object[] | void | null | undefined>([]);// data for graph\n  const [dataDiff, setDataDiff] = React.useState<number[] | any[] | undefined>([]);// data diff for graph\n  const [total, setTotal] = React.useState<IGlobalData[] | void | null | undefined>([]);\n  const [labels, setLabels] = React.useState<Object[] | void | null | undefined>([]);\n  const [markers, setMarkers] = React.useState<any[] | undefined>([]);\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n\n  const debug: boolean = true;\n\n  const country_list = [\n    {\n      \"timezones\": [\n        \"America/Aruba\"\n      ],\n      \"lat\": 12.5,\n      \"lon\": -69.96666666,\n      \"name\": \"Aruba\",\n      \"code\": \"AW\",\n      \"capital\": \"Oranjestad\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kabul\"\n      ],\n      \"lat\": 33,\n      \"lon\": 65,\n      \"name\": \"Afghanistan\",\n      \"code\": \"AF\",\n      \"capital\": \"Kabul\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Luanda\"\n      ],\n      \"lat\": 12.5,\n      \"lon\": 18.5,\n      \"name\": \"Angola\",\n      \"code\": \"AO\",\n      \"capital\": \"Luanda\"\n    },\n    {\n      \"timezones\": [\n        \"America/Anguilla\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": -63.16666666,\n      \"name\": \"Anguilla\",\n      \"code\": \"AI\",\n      \"capital\": \"The Valley\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Mariehamn\"\n      ],\n      \"lat\": 60.116667,\n      \"lon\": 19.9,\n      \"name\": \"\\u00c5land Islands\",\n      \"code\": \"AX\",\n      \"capital\": \"Mariehamn\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Tirane\"\n      ],\n      \"lat\": 41,\n      \"lon\": 20,\n      \"name\": \"Albania\",\n      \"code\": \"AL\",\n      \"capital\": \"Tirana\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Andorra\"\n      ],\n      \"lat\": 42.5,\n      \"lon\": 1.5,\n      \"name\": \"Andorra\",\n      \"code\": \"AD\",\n      \"capital\": \"Andorra la Vella\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dubai\"\n      ],\n      \"lat\": 24,\n      \"lon\": 54,\n      \"name\": \"United Arab Emirates\",\n      \"code\": \"AE\",\n      \"capital\": \"Abu Dhabi\"\n    },\n    {\n      \"timezones\": [\n        \"America/Argentina/Buenos_Aires\",\n        \"America/Argentina/Cordoba\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/Jujuy\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Catamarca\",\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/Mendoza\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Ushuaia\"\n      ],\n      \"lon\": -58.3816, \"lat\": -34.6037,\n      \"name\": \"Argentina\",\n      \"code\": \"AR\",\n      \"capital\": \"Buenos Aires\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Yerevan\"\n      ],\n      \"lat\": 40,\n      \"lon\": 45,\n      \"name\": \"Armenia\",\n      \"code\": \"AM\",\n      \"capital\": \"Yerevan\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Pago_Pago\"\n      ],\n      \"lat\": 14.33333333,\n      \"lon\": -170,\n      \"name\": \"American Samoa\",\n      \"code\": \"AS\",\n      \"capital\": \"Pago Pago\"\n    },\n    {\n      \"timezones\": [\n        \"Antarctica/McMurdo\",\n        \"Antarctica/Casey\",\n        \"Antarctica/Davis\",\n        \"Antarctica/DumontDUrville\",\n        \"Antarctica/Mawson\",\n        \"Antarctica/Palmer\",\n        \"Antarctica/Rothera\",\n        \"Antarctica/Syowa\",\n        \"Antarctica/Troll\",\n        \"Antarctica/Vostok\"\n      ],\n      \"lat\": 90,\n      \"lon\": 0,\n      \"name\": \"Antarctica\",\n      \"code\": \"AQ\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"Indian/Kerguelen\"\n      ],\n      \"lat\": 49.25,\n      \"lon\": 69.167,\n      \"name\": \"French Southern and Antarctic Lands\",\n      \"code\": \"TF\",\n      \"capital\": \"Port-aux-Fran\\u00e7ais\"\n    },\n    {\n      \"timezones\": [\n        \"America/Antigua\"\n      ],\n      \"lat\": 17.05,\n      \"lon\": -61.8,\n      \"name\": \"Antigua and Barbuda\",\n      \"code\": \"AG\",\n      \"capital\": \"Saint John's\"\n    },\n    {\n      \"timezones\": [\n        \"Australia/Lord_Howe\",\n        \"Antarctica/Macquarie\",\n        \"Australia/Hobart\",\n        \"Australia/Currie\",\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\",\n        \"Australia/Broken_Hill\",\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\",\n        \"Australia/Adelaide\",\n        \"Australia/Darwin\",\n        \"Australia/Perth\",\n        \"Australia/Eucla\"\n      ],\n      \"lat\": 27,\n      \"lon\": 133,\n      \"name\": \"Australia\",\n      \"code\": \"AU\",\n      \"capital\": \"Canberra\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vienna\"\n      ],\n      \"lat\": 47.33333333,\n      \"lon\": 13.33333333,\n      \"name\": \"Austria\",\n      \"code\": \"AT\",\n      \"capital\": \"Vienna\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Baku\"\n      ],\n      \"lat\": 40.5,\n      \"lon\": 47.5,\n      \"name\": \"Azerbaijan\",\n      \"code\": \"AZ\",\n      \"capital\": \"Baku\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bujumbura\"\n      ],\n      \"lat\": 3.5,\n      \"lon\": 30,\n      \"name\": \"Burundi\",\n      \"code\": \"BI\",\n      \"capital\": \"Bujumbura\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Brussels\"\n      ],\n      \"lat\": 50.83333333,\n      \"lon\": 4,\n      \"name\": \"Belgium\",\n      \"code\": \"BE\",\n      \"capital\": \"Brussels\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Porto-Novo\"\n      ],\n      \"lat\": 9.5,\n      \"lon\": 2.25,\n      \"name\": \"Benin\",\n      \"code\": \"BJ\",\n      \"capital\": \"Porto-Novo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Ouagadougou\"\n      ],\n      \"lat\": 13,\n      \"lon\": -2,\n      \"name\": \"Burkina Faso\",\n      \"code\": \"BF\",\n      \"capital\": \"Ouagadougou\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dhaka\"\n      ],\n      \"lat\": 24,\n      \"lon\": 90,\n      \"name\": \"Bangladesh\",\n      \"code\": \"BD\",\n      \"capital\": \"Dhaka\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Sofia\"\n      ],\n      \"lat\": 43,\n      \"lon\": 25,\n      \"name\": \"Bulgaria\",\n      \"code\": \"BG\",\n      \"capital\": \"Sofia\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Bahrain\"\n      ],\n      \"lat\": 26,\n      \"lon\": 50.55,\n      \"name\": \"Bahrain\",\n      \"code\": \"BH\",\n      \"capital\": \"Manama\"\n    },\n    {\n      \"timezones\": [\n        \"America/Nassau\"\n      ],\n      \"lat\": 24.25,\n      \"lon\": -76,\n      \"name\": \"Bahamas\",\n      \"code\": \"BS\",\n      \"capital\": \"Nassau\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Sarajevo\"\n      ],\n      \"lat\": 44,\n      \"lon\": 18,\n      \"name\": \"Bosnia and Herzegovina\",\n      \"code\": \"BA\",\n      \"capital\": \"Sarajevo\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Barthelemy\"\n      ],\n      \"lat\": 18.5,\n      \"lon\": -63.41666666,\n      \"name\": \"Saint Barth\\u00e9lemy\",\n      \"code\": \"BL\",\n      \"capital\": \"Gustavia\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Minsk\"\n      ],\n      \"lat\": 53,\n      \"lon\": 28,\n      \"name\": \"Belarus\",\n      \"code\": \"BY\",\n      \"capital\": \"Minsk\"\n    },\n    {\n      \"timezones\": [\n        \"America/Belize\"\n      ],\n      \"lat\": 17.25,\n      \"lon\": -88.75,\n      \"name\": \"Belize\",\n      \"code\": \"BZ\",\n      \"capital\": \"Belmopan\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Bermuda\"\n      ],\n      \"lat\": 32.33333333,\n      \"lon\": -64.75,\n      \"name\": \"Bermuda\",\n      \"code\": \"BM\",\n      \"capital\": \"Hamilton\"\n    },\n    {\n      \"timezones\": [\n        \"America/La_Paz\"\n      ],\n      \"lon\": -68.1193, \"lat\": -16.4897,\n      \"name\": \"Bolivia\",\n      \"code\": \"BO\",\n      \"capital\": \"Sucre\"\n    },\n    {\n      \"timezones\": [\n        \"America/Noronha\",\n        \"America/Belem\",\n        \"America/Fortaleza\",\n        \"America/Recife\",\n        \"America/Araguaina\",\n        \"America/Maceio\",\n        \"America/Bahia\",\n        \"America/Sao_Paulo\",\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\",\n        \"America/Santarem\",\n        \"America/Porto_Velho\",\n        \"America/Boa_Vista\",\n        \"America/Manaus\",\n        \"America/Eirunepe\",\n        \"America/Rio_Branco\"\n      ],\n      \"lat\": -34.6037,\n      \"lon\": -58.3816,\n      \"name\": \"Brazil\",\n      \"code\": \"BR\",\n      \"capital\": \"Bras\\u00edlia\"\n    },\n    {\n      \"timezones\": [\n        \"America/Barbados\"\n      ],\n      \"lat\": 13.16666666,\n      \"lon\": -59.53333333,\n      \"name\": \"Barbados\",\n      \"code\": \"BB\",\n      \"capital\": \"Bridgetown\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Brunei\"\n      ],\n      \"lat\": 4.5,\n      \"lon\": 114.66666666,\n      \"name\": \"Brunei\",\n      \"code\": \"BN\",\n      \"capital\": \"Bandar Seri Begawan\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Thimphu\"\n      ],\n      \"lat\": 27.5,\n      \"lon\": 90.5,\n      \"name\": \"Bhutan\",\n      \"code\": \"BT\",\n      \"capital\": \"Thimphu\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Oslo\"\n      ],\n      \"lat\": 54.43333333,\n      \"lon\": 3.4,\n      \"name\": \"Bouvet Island\",\n      \"code\": \"BV\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"Africa/Gaborone\"\n      ],\n      \"lat\": 22,\n      \"lon\": 24,\n      \"name\": \"Botswana\",\n      \"code\": \"BW\",\n      \"capital\": \"Gaborone\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bangui\"\n      ],\n      \"lat\": 7,\n      \"lon\": 21,\n      \"name\": \"Central African Republic\",\n      \"code\": \"CF\",\n      \"capital\": \"Bangui\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Johns\",\n        \"America/Halifax\",\n        \"America/Glace_Bay\",\n        \"America/Moncton\",\n        \"America/Goose_Bay\",\n        \"America/Blanc-Sablon\",\n        \"America/Toronto\",\n        \"America/Nipigon\",\n        \"America/Thunder_Bay\",\n        \"America/Iqaluit\",\n        \"America/Pangnirtung\",\n        \"America/Atikokan\",\n        \"America/Winnipeg\",\n        \"America/Rainy_River\",\n        \"America/Resolute\",\n        \"America/Rankin_Inlet\",\n        \"America/Regina\",\n        \"America/Swift_Current\",\n        \"America/Edmonton\",\n        \"America/Cambridge_Bay\",\n        \"America/Yellowknife\",\n        \"America/Inuvik\",\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Fort_Nelson\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"America/Dawson\"\n      ],\n      \"lat\": 60,\n      \"lon\": -95,\n      \"name\": \"Canada\",\n      \"code\": \"CA\",\n      \"capital\": \"Ottawa\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Cocos\"\n      ],\n      \"lat\": 12.5,\n      \"lon\": 96.83333333,\n      \"name\": \"Cocos (Keeling) Islands\",\n      \"code\": \"CC\",\n      \"capital\": \"West Island\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Zurich\"\n      ],\n      \"lat\": 47,\n      \"lon\": 8,\n      \"name\": \"Switzerland\",\n      \"code\": \"CH\",\n      \"capital\": \"Bern\"\n    },\n    {\n      \"timezones\": [\n        \"America/Santiago\",\n        \"Pacific/Easter\"\n      ],\n      \"lon\": -70.6693, \"lat\": -33.4489,\n      \"name\": \"Chile\",\n      \"code\": \"CL\",\n      \"capital\": \"Santiago\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Shanghai\",\n        \"Asia/Urumqi\"\n      ],\n      \"lat\": 35,\n      \"lon\": 105,\n      \"name\": \"China\",\n      \"code\": \"CN\",\n      \"capital\": \"Beijing\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Abidjan\"\n      ],\n      \"lat\": 8,\n      \"lon\": -5,\n      \"name\": \"Ivory Coast\",\n      \"code\": \"CI\",\n      \"capital\": \"Yamoussoukro\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Douala\"\n      ],\n      \"lat\": 6,\n      \"lon\": 12,\n      \"name\": \"Cameroon\",\n      \"code\": \"CM\",\n      \"capital\": \"Yaound\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Kinshasa\",\n        \"Africa/Lubumbashi\"\n      ],\n      \"lat\": 0,\n      \"lon\": 25,\n      \"name\": \"DR Congo\",\n      \"code\": \"CD\",\n      \"capital\": \"Kinshasa\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Brazzaville\"\n      ],\n      \"lat\": 1,\n      \"lon\": 15,\n      \"name\": \"Republic of the Congo\",\n      \"code\": \"CG\",\n      \"capital\": \"Brazzaville\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Rarotonga\"\n      ],\n      \"lat\": 21.23333333,\n      \"lon\": -159.76666666,\n      \"name\": \"Cook Islands\",\n      \"code\": \"CK\",\n      \"capital\": \"Avarua\"\n    },\n    {\n      \"timezones\": [\n        \"America/Bogota\"\n      ],\n      \"lon\": -74.0721, \"lat\": 4.711,\n      \"name\": \"Colombia\",\n      \"code\": \"CO\",\n      \"capital\": \"Bogot\\u00e1\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Comoro\"\n      ],\n      \"lat\": 12.16666666,\n      \"lon\": 44.25,\n      \"name\": \"Comoros\",\n      \"code\": \"KM\",\n      \"capital\": \"Moroni\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Cape_Verde\"\n      ],\n      \"lat\": 16,\n      \"lon\": -24,\n      \"name\": \"Cape Verde\",\n      \"code\": \"CV\",\n      \"capital\": \"Praia\"\n    },\n    {\n      \"timezones\": [\n        \"America/Costa_Rica\"\n      ],\n      \"lat\": 10,\n      \"lon\": -84,\n      \"name\": \"Costa Rica\",\n      \"code\": \"CR\",\n      \"capital\": \"San Jos\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"America/Havana\"\n      ],\n      \"lat\": 21.5,\n      \"lon\": -80,\n      \"name\": \"Cuba\",\n      \"code\": \"CU\",\n      \"capital\": \"Havana\"\n    },\n    {\n      \"timezones\": [\n        \"America/Curacao\"\n      ],\n      \"lat\": 12.116667,\n      \"lon\": -68.933333,\n      \"name\": \"Cura\\u00e7ao\",\n      \"code\": \"CW\",\n      \"capital\": \"Willemstad\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Christmas\"\n      ],\n      \"lat\": 10.5,\n      \"lon\": 105.66666666,\n      \"name\": \"Christmas Island\",\n      \"code\": \"CX\",\n      \"capital\": \"Flying Fish Cove\"\n    },\n    {\n      \"timezones\": [\n        \"America/Cayman\"\n      ],\n      \"lat\": 19.5,\n      \"lon\": -80.5,\n      \"name\": \"Cayman Islands\",\n      \"code\": \"KY\",\n      \"capital\": \"George Town\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Nicosia\"\n      ],\n      \"lat\": 35,\n      \"lon\": 33,\n      \"name\": \"Cyprus\",\n      \"code\": \"CY\",\n      \"capital\": \"Nicosia\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Prague\"\n      ],\n      \"lat\": 49.75,\n      \"lon\": 15.5,\n      \"name\": \"Czech Republic\",\n      \"code\": \"CZ\",\n      \"capital\": \"Prague\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Berlin\",\n        \"Europe/Busingen\"\n      ],\n      \"lat\": 51,\n      \"lon\": 9,\n      \"name\": \"Germany\",\n      \"code\": \"DE\",\n      \"capital\": \"Berlin\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Djibouti\"\n      ],\n      \"lat\": 11.5,\n      \"lon\": 43,\n      \"name\": \"Djibouti\",\n      \"code\": \"DJ\",\n      \"capital\": \"Djibouti\"\n    },\n    {\n      \"timezones\": [\n        \"America/Dominica\"\n      ],\n      \"lat\": 15.41666666,\n      \"lon\": -61.33333333,\n      \"name\": \"Dominica\",\n      \"code\": \"DM\",\n      \"capital\": \"Roseau\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Copenhagen\"\n      ],\n      \"lat\": 56,\n      \"lon\": 10,\n      \"name\": \"Denmark\",\n      \"code\": \"DK\",\n      \"capital\": \"Copenhagen\"\n    },\n    {\n      \"timezones\": [\n        \"America/Santo_Domingo\"\n      ],\n      \"lat\": 19,\n      \"lon\": -70.66666666,\n      \"name\": \"Dominican Republic\",\n      \"code\": \"DO\",\n      \"capital\": \"Santo Domingo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Algiers\"\n      ],\n      \"lat\": 28,\n      \"lon\": 3,\n      \"name\": \"Algeria\",\n      \"code\": \"DZ\",\n      \"capital\": \"Algiers\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guayaquil\",\n        \"Pacific/Galapagos\"\n      ],\n      \"lon\": -78.4678, \"lat\": -0.1807,\n      \"name\": \"Ecuador\",\n      \"code\": \"EC\",\n      \"capital\": \"Quito\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Cairo\"\n      ],\n      \"lat\": 27,\n      \"lon\": 30,\n      \"name\": \"Egypt\",\n      \"code\": \"EG\",\n      \"capital\": \"Cairo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Asmara\"\n      ],\n      \"lat\": 15,\n      \"lon\": 39,\n      \"name\": \"Eritrea\",\n      \"code\": \"ER\",\n      \"capital\": \"Asmara\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/El_Aaiun\"\n      ],\n      \"lat\": 24.5,\n      \"lon\": -13,\n      \"name\": \"Western Sahara\",\n      \"code\": \"EH\",\n      \"capital\": \"El Aai\\u00fan\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Madrid\",\n        \"Africa/Ceuta\",\n        \"Atlantic/Canary\"\n      ],\n      \"lat\": 40,\n      \"lon\": -4,\n      \"name\": \"Spain\",\n      \"code\": \"ES\",\n      \"capital\": \"Madrid\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Tallinn\"\n      ],\n      \"lat\": 59,\n      \"lon\": 26,\n      \"name\": \"Estonia\",\n      \"code\": \"EE\",\n      \"capital\": \"Tallinn\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Addis_Ababa\"\n      ],\n      \"lat\": 8,\n      \"lon\": 38,\n      \"name\": \"Ethiopia\",\n      \"code\": \"ET\",\n      \"capital\": \"Addis Ababa\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Helsinki\"\n      ],\n      \"lat\": 64,\n      \"lon\": 26,\n      \"name\": \"Finland\",\n      \"code\": \"FI\",\n      \"capital\": \"Helsinki\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Fiji\"\n      ],\n      \"lat\": 18,\n      \"lon\": 175,\n      \"name\": \"Fiji\",\n      \"code\": \"FJ\",\n      \"capital\": \"Suva\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Stanley\"\n      ],\n      \"lat\": 51.75,\n      \"lon\": -59,\n      \"name\": \"Falkland Islands\",\n      \"code\": \"FK\",\n      \"capital\": \"Stanley\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Paris\"\n      ],\n      \"lat\": 46,\n      \"lon\": 2,\n      \"name\": \"France\",\n      \"code\": \"FR\",\n      \"capital\": \"Paris\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Faroe\"\n      ],\n      \"lat\": 62,\n      \"lon\": -7,\n      \"name\": \"Faroe Islands\",\n      \"code\": \"FO\",\n      \"capital\": \"T\\u00f3rshavn\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Chuuk\",\n        \"Pacific/Pohnpei\",\n        \"Pacific/Kosrae\"\n      ],\n      \"lat\": 6.91666666,\n      \"lon\": 158.25,\n      \"name\": \"Micronesia\",\n      \"code\": \"FM\",\n      \"capital\": \"Palikir\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Libreville\"\n      ],\n      \"lat\": 1,\n      \"lon\": 11.75,\n      \"name\": \"Gabon\",\n      \"code\": \"GA\",\n      \"capital\": \"Libreville\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/London\"\n      ],\n      \"lat\": 54,\n      \"lon\": -2,\n      \"name\": \"United Kingdom\",\n      \"code\": \"GB\",\n      \"capital\": \"London\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Tbilisi\"\n      ],\n      \"lat\": 42,\n      \"lon\": 43.5,\n      \"name\": \"Georgia\",\n      \"code\": \"GE\",\n      \"capital\": \"Tbilisi\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Guernsey\"\n      ],\n      \"lat\": 49.46666666,\n      \"lon\": -2.58333333,\n      \"name\": \"Guernsey\",\n      \"code\": \"GG\",\n      \"capital\": \"St. Peter Port\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Accra\"\n      ],\n      \"lat\": 8,\n      \"lon\": -2,\n      \"name\": \"Ghana\",\n      \"code\": \"GH\",\n      \"capital\": \"Accra\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Gibraltar\"\n      ],\n      \"lat\": 36.13333333,\n      \"lon\": -5.35,\n      \"name\": \"Gibraltar\",\n      \"code\": \"GI\",\n      \"capital\": \"Gibraltar\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Conakry\"\n      ],\n      \"lat\": 11,\n      \"lon\": -10,\n      \"name\": \"Guinea\",\n      \"code\": \"GN\",\n      \"capital\": \"Conakry\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guadeloupe\"\n      ],\n      \"lat\": 16.25,\n      \"lon\": -61.583333,\n      \"name\": \"Guadeloupe\",\n      \"code\": \"GP\",\n      \"capital\": \"Basse-Terre\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Banjul\"\n      ],\n      \"lat\": 13.46666666,\n      \"lon\": -16.56666666,\n      \"name\": \"Gambia\",\n      \"code\": \"GM\",\n      \"capital\": \"Banjul\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bissau\"\n      ],\n      \"lat\": 12,\n      \"lon\": -15,\n      \"name\": \"Guinea-Bissau\",\n      \"code\": \"GW\",\n      \"capital\": \"Bissau\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Malabo\"\n      ],\n      \"lat\": 2,\n      \"lon\": 10,\n      \"name\": \"Equatorial Guinea\",\n      \"code\": \"GQ\",\n      \"capital\": \"Malabo\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Athens\"\n      ],\n      \"lat\": 39,\n      \"lon\": 22,\n      \"name\": \"Greece\",\n      \"code\": \"GR\",\n      \"capital\": \"Athens\"\n    },\n    {\n      \"timezones\": [\n        \"America/Grenada\"\n      ],\n      \"lat\": 12.11666666,\n      \"lon\": -61.66666666,\n      \"name\": \"Grenada\",\n      \"code\": \"GD\",\n      \"capital\": \"St. George's\"\n    },\n    {\n      \"timezones\": [\n        \"America/Godthab\",\n        \"America/Danmarkshavn\",\n        \"America/Scoresbysund\",\n        \"America/Thule\"\n      ],\n      \"lat\": 72,\n      \"lon\": -40,\n      \"name\": \"Greenland\",\n      \"code\": \"GL\",\n      \"capital\": \"Nuuk\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guatemala\"\n      ],\n      \"lat\": 15.5,\n      \"lon\": -90.25,\n      \"name\": \"Guatemala\",\n      \"code\": \"GT\",\n      \"capital\": \"Guatemala City\"\n    },\n    {\n      \"timezones\": [\n        \"America/Cayenne\"\n      ],\n      \"lat\": 4,\n      \"lon\": -53,\n      \"name\": \"French Guiana\",\n      \"code\": \"GF\",\n      \"capital\": \"Cayenne\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Guam\"\n      ],\n      \"lat\": 13.46666666,\n      \"lon\": 144.78333333,\n      \"name\": \"Guam\",\n      \"code\": \"GU\",\n      \"capital\": \"Hag\\u00e5t\\u00f1a\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guyana\"\n      ],\n      \"lon\": -58.1551, \"lat\": 6.8013,\n      \"name\": \"Guyana\",\n      \"code\": \"GY\",\n      \"capital\": \"Georgetown\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Hong_Kong\"\n      ],\n      \"lat\": 22.267,\n      \"lon\": 114.188,\n      \"name\": \"Hong Kong\",\n      \"code\": \"HK\",\n      \"capital\": \"City of Victoria\"\n    },\n    {\n      \"timezones\": [\n        \"America/Tegucigalpa\"\n      ],\n      \"lat\": 15,\n      \"lon\": -86.5,\n      \"name\": \"Honduras\",\n      \"code\": \"HN\",\n      \"capital\": \"Tegucigalpa\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Zagreb\"\n      ],\n      \"lat\": 45.16666666,\n      \"lon\": 15.5,\n      \"name\": \"Croatia\",\n      \"code\": \"HR\",\n      \"capital\": \"Zagreb\"\n    },\n    {\n      \"timezones\": [\n        \"America/Port-au-Prince\"\n      ],\n      \"lat\": 19,\n      \"lon\": -72.41666666,\n      \"name\": \"Haiti\",\n      \"code\": \"HT\",\n      \"capital\": \"Port-au-Prince\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Budapest\"\n      ],\n      \"lat\": 47,\n      \"lon\": 20,\n      \"name\": \"Hungary\",\n      \"code\": \"HU\",\n      \"capital\": \"Budapest\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Jakarta\",\n        \"Asia/Pontianak\",\n        \"Asia/Makassar\",\n        \"Asia/Jayapura\"\n      ],\n      \"lat\": 5,\n      \"lon\": 120,\n      \"name\": \"Indonesia\",\n      \"code\": \"ID\",\n      \"capital\": \"Jakarta\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Isle_of_Man\"\n      ],\n      \"lat\": 54.25,\n      \"lon\": -4.5,\n      \"name\": \"Isle of Man\",\n      \"code\": \"IM\",\n      \"capital\": \"Douglas\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kolkata\"\n      ],\n      \"lat\": 20,\n      \"lon\": 77,\n      \"name\": \"India\",\n      \"code\": \"IN\",\n      \"capital\": \"New Delhi\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Chagos\"\n      ],\n      \"lat\": 6,\n      \"lon\": 71.5,\n      \"name\": \"British Indian Ocean Territory\",\n      \"code\": \"IO\",\n      \"capital\": \"Diego Garcia\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Dublin\"\n      ],\n      \"lat\": 53,\n      \"lon\": -8,\n      \"name\": \"Ireland\",\n      \"code\": \"IE\",\n      \"capital\": \"Dublin\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Tehran\"\n      ],\n      \"lat\": 32,\n      \"lon\": 53,\n      \"name\": \"Iran\",\n      \"code\": \"IR\",\n      \"capital\": \"Tehran\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Baghdad\"\n      ],\n      \"lat\": 33,\n      \"lon\": 44,\n      \"name\": \"Iraq\",\n      \"code\": \"IQ\",\n      \"capital\": \"Baghdad\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Reykjavik\"\n      ],\n      \"lat\": 65,\n      \"lon\": -18,\n      \"name\": \"Iceland\",\n      \"code\": \"IS\",\n      \"capital\": \"Reykjavik\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Jerusalem\"\n      ],\n      \"lat\": 31.47,\n      \"lon\": 35.13,\n      \"name\": \"Israel\",\n      \"code\": \"IL\",\n      \"capital\": \"Jerusalem\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Rome\"\n      ],\n      \"lat\": 42.83333333,\n      \"lon\": 12.83333333,\n      \"name\": \"Italy\",\n      \"code\": \"IT\",\n      \"capital\": \"Rome\"\n    },\n    {\n      \"timezones\": [\n        \"America/Jamaica\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": -77.5,\n      \"name\": \"Jamaica\",\n      \"code\": \"JM\",\n      \"capital\": \"Kingston\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Jersey\"\n      ],\n      \"lat\": 49.25,\n      \"lon\": -2.16666666,\n      \"name\": \"Jersey\",\n      \"code\": \"JE\",\n      \"capital\": \"Saint Helier\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Amman\"\n      ],\n      \"lat\": 31,\n      \"lon\": 36,\n      \"name\": \"Jordan\",\n      \"code\": \"JO\",\n      \"capital\": \"Amman\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Tokyo\"\n      ],\n      \"lat\": 36,\n      \"lon\": 138,\n      \"name\": \"Japan\",\n      \"code\": \"JP\",\n      \"capital\": \"Tokyo\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Almaty\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Aqtobe\",\n        \"Asia/Aqtau\",\n        \"Asia/Oral\"\n      ],\n      \"lat\": 48,\n      \"lon\": 68,\n      \"name\": \"Kazakhstan\",\n      \"code\": \"KZ\",\n      \"capital\": \"Astana\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Nairobi\"\n      ],\n      \"lat\": 1,\n      \"lon\": 38,\n      \"name\": \"Kenya\",\n      \"code\": \"KE\",\n      \"capital\": \"Nairobi\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Bishkek\"\n      ],\n      \"lat\": 41,\n      \"lon\": 75,\n      \"name\": \"Kyrgyzstan\",\n      \"code\": \"KG\",\n      \"capital\": \"Bishkek\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Phnom_Penh\"\n      ],\n      \"lat\": 13,\n      \"lon\": 105,\n      \"name\": \"Cambodia\",\n      \"code\": \"KH\",\n      \"capital\": \"Phnom Penh\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Tarawa\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Kiritimati\"\n      ],\n      \"lat\": 1.41666666,\n      \"lon\": 173,\n      \"name\": \"Kiribati\",\n      \"code\": \"KI\",\n      \"capital\": \"South Tarawa\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Kitts\"\n      ],\n      \"lat\": 17.33333333,\n      \"lon\": -62.75,\n      \"name\": \"Saint Kitts and Nevis\",\n      \"code\": \"KN\",\n      \"capital\": \"Basseterre\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Seoul\"\n      ],\n      \"lat\": 37,\n      \"lon\": 127.5,\n      \"name\": \"South Korea\",\n      \"code\": \"KR\",\n      \"capital\": \"Seoul\"\n    },\n    {\n      \"timezones\": [\"Europe/Belgrade\"],\n      \"lat\": 42.666667,\n      \"lon\": 21.166667,\n      \"name\": \"Kosovo\",\n      \"code\": \"XK\",\n      \"capital\": \"Pristina\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kuwait\"\n      ],\n      \"lat\": 29.5,\n      \"lon\": 45.75,\n      \"name\": \"Kuwait\",\n      \"code\": \"KW\",\n      \"capital\": \"Kuwait City\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Vientiane\"\n      ],\n      \"lat\": 18,\n      \"lon\": 105,\n      \"name\": \"Laos\",\n      \"code\": \"LA\",\n      \"capital\": \"Vientiane\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Beirut\"\n      ],\n      \"lat\": 33.83333333,\n      \"lon\": 35.83333333,\n      \"name\": \"Lebanon\",\n      \"code\": \"LB\",\n      \"capital\": \"Beirut\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Monrovia\"\n      ],\n      \"lat\": 6.5,\n      \"lon\": -9.5,\n      \"name\": \"Liberia\",\n      \"code\": \"LR\",\n      \"capital\": \"Monrovia\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Tripoli\"\n      ],\n      \"lat\": 25,\n      \"lon\": 17,\n      \"name\": \"Libya\",\n      \"code\": \"LY\",\n      \"capital\": \"Tripoli\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Lucia\"\n      ],\n      \"lat\": 13.88333333,\n      \"lon\": -60.96666666,\n      \"name\": \"Saint Lucia\",\n      \"code\": \"LC\",\n      \"capital\": \"Castries\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vaduz\"\n      ],\n      \"lat\": 47.26666666,\n      \"lon\": 9.53333333,\n      \"name\": \"Liechtenstein\",\n      \"code\": \"LI\",\n      \"capital\": \"Vaduz\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Colombo\"\n      ],\n      \"lat\": 7,\n      \"lon\": 81,\n      \"name\": \"Sri Lanka\",\n      \"code\": \"LK\",\n      \"capital\": \"Colombo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Maseru\"\n      ],\n      \"lat\": 29.5,\n      \"lon\": 28.5,\n      \"name\": \"Lesotho\",\n      \"code\": \"LS\",\n      \"capital\": \"Maseru\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vilnius\"\n      ],\n      \"lat\": 56,\n      \"lon\": 24,\n      \"name\": \"Lithuania\",\n      \"code\": \"LT\",\n      \"capital\": \"Vilnius\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Luxembourg\"\n      ],\n      \"lat\": 49.75,\n      \"lon\": 6.16666666,\n      \"name\": \"Luxembourg\",\n      \"code\": \"LU\",\n      \"capital\": \"Luxembourg\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Riga\"\n      ],\n      \"lat\": 57,\n      \"lon\": 25,\n      \"name\": \"Latvia\",\n      \"code\": \"LV\",\n      \"capital\": \"Riga\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Macau\"\n      ],\n      \"lat\": 22.16666666,\n      \"lon\": 113.55,\n      \"name\": \"Macau\",\n      \"code\": \"MO\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"America/Marigot\"\n      ],\n      \"lat\": 18.08333333,\n      \"lon\": -63.95,\n      \"name\": \"Saint Martin\",\n      \"code\": \"MF\",\n      \"capital\": \"Marigot\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Casablanca\"\n      ],\n      \"lat\": 32,\n      \"lon\": -5,\n      \"name\": \"Morocco\",\n      \"code\": \"MA\",\n      \"capital\": \"Rabat\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Monaco\"\n      ],\n      \"lat\": 43.73333333,\n      \"lon\": 7.4,\n      \"name\": \"Monaco\",\n      \"code\": \"MC\",\n      \"capital\": \"Monaco\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Chisinau\"\n      ],\n      \"lat\": 47,\n      \"lon\": 29,\n      \"name\": \"Moldova\",\n      \"code\": \"MD\",\n      \"capital\": \"Chi\\u0219in\\u0103u\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Antananarivo\"\n      ],\n      \"lat\": 20,\n      \"lon\": 47,\n      \"name\": \"Madagascar\",\n      \"code\": \"MG\",\n      \"capital\": \"Antananarivo\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Maldives\"\n      ],\n      \"lat\": 3.25,\n      \"lon\": 73,\n      \"name\": \"Maldives\",\n      \"code\": \"MV\",\n      \"capital\": \"Mal\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"America/Mexico_City\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Monterrey\",\n        \"America/Matamoros\",\n        \"America/Mazatlan\",\n        \"America/Chihuahua\",\n        \"America/Ojinaga\",\n        \"America/Hermosillo\",\n        \"America/Tijuana\",\n        \"America/Bahia_Banderas\"\n      ],\n      \"lat\": 23,\n      \"lon\": -102,\n      \"name\": \"Mexico\",\n      \"code\": \"MX\",\n      \"capital\": \"Mexico City\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Majuro\",\n        \"Pacific/Kwajalein\"\n      ],\n      \"lat\": 9,\n      \"lon\": 168,\n      \"name\": \"Marshall Islands\",\n      \"code\": \"MH\",\n      \"capital\": \"Majuro\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Skopje\"\n      ],\n      \"lat\": 41.83333333,\n      \"lon\": 22,\n      \"name\": \"Macedonia\",\n      \"code\": \"MK\",\n      \"capital\": \"Skopje\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bamako\"\n      ],\n      \"lat\": 17,\n      \"lon\": -4,\n      \"name\": \"Mali\",\n      \"code\": \"ML\",\n      \"capital\": \"Bamako\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Malta\"\n      ],\n      \"lat\": 35.83333333,\n      \"lon\": 14.58333333,\n      \"name\": \"Malta\",\n      \"code\": \"MT\",\n      \"capital\": \"Valletta\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Rangoon\"\n      ],\n      \"lat\": 22,\n      \"lon\": 98,\n      \"name\": \"Myanmar\",\n      \"code\": \"MM\",\n      \"capital\": \"Naypyidaw\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Podgorica\"\n      ],\n      \"lat\": 42.5,\n      \"lon\": 19.3,\n      \"name\": \"Montenegro\",\n      \"code\": \"ME\",\n      \"capital\": \"Podgorica\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Ulaanbaatar\",\n        \"Asia/Hovd\",\n        \"Asia/Choibalsan\"\n      ],\n      \"lat\": 46,\n      \"lon\": 105,\n      \"name\": \"Mongolia\",\n      \"code\": \"MN\",\n      \"capital\": \"Ulan Bator\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Saipan\"\n      ],\n      \"lat\": 15.2,\n      \"lon\": 145.75,\n      \"name\": \"Northern Mariana Islands\",\n      \"code\": \"MP\",\n      \"capital\": \"Saipan\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Maputo\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": 35,\n      \"name\": \"Mozambique\",\n      \"code\": \"MZ\",\n      \"capital\": \"Maputo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Nouakchott\"\n      ],\n      \"lat\": 20,\n      \"lon\": -12,\n      \"name\": \"Mauritania\",\n      \"code\": \"MR\",\n      \"capital\": \"Nouakchott\"\n    },\n    {\n      \"timezones\": [\n        \"America/Montserrat\"\n      ],\n      \"lat\": 16.75,\n      \"lon\": -62.2,\n      \"name\": \"Montserrat\",\n      \"code\": \"MS\",\n      \"capital\": \"Plymouth\"\n    },\n    {\n      \"timezones\": [\n        \"America/Martinique\"\n      ],\n      \"lat\": 14.666667,\n      \"lon\": -61,\n      \"name\": \"Martinique\",\n      \"code\": \"MQ\",\n      \"capital\": \"Fort-de-France\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Mauritius\"\n      ],\n      \"lat\": 20.28333333,\n      \"lon\": 57.55,\n      \"name\": \"Mauritius\",\n      \"code\": \"MU\",\n      \"capital\": \"Port Louis\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Blantyre\"\n      ],\n      \"lat\": 13.5,\n      \"lon\": 34,\n      \"name\": \"Malawi\",\n      \"code\": \"MW\",\n      \"capital\": \"Lilongwe\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\"\n      ],\n      \"lat\": 2.5,\n      \"lon\": 112.5,\n      \"name\": \"Malaysia\",\n      \"code\": \"MY\",\n      \"capital\": \"Kuala Lumpur\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Mayotte\"\n      ],\n      \"lat\": 12.83333333,\n      \"lon\": 45.16666666,\n      \"name\": \"Mayotte\",\n      \"code\": \"YT\",\n      \"capital\": \"Mamoudzou\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Windhoek\"\n      ],\n      \"lat\": 22,\n      \"lon\": 17,\n      \"name\": \"Namibia\",\n      \"code\": \"NA\",\n      \"capital\": \"Windhoek\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Noumea\"\n      ],\n      \"lat\": 21.5,\n      \"lon\": 165.5,\n      \"name\": \"New Caledonia\",\n      \"code\": \"NC\",\n      \"capital\": \"Noum\\u00e9a\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Niamey\"\n      ],\n      \"lat\": 16,\n      \"lon\": 8,\n      \"name\": \"Niger\",\n      \"code\": \"NE\",\n      \"capital\": \"Niamey\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Norfolk\"\n      ],\n      \"lat\": 29.03333333,\n      \"lon\": 167.95,\n      \"name\": \"Norfolk Island\",\n      \"code\": \"NF\",\n      \"capital\": \"Kingston\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Lagos\"\n      ],\n      \"lat\": 10,\n      \"lon\": 8,\n      \"name\": \"Nigeria\",\n      \"code\": \"NG\",\n      \"capital\": \"Abuja\"\n    },\n    {\n      \"timezones\": [\n        \"America/Managua\"\n      ],\n      \"lat\": 13,\n      \"lon\": -85,\n      \"name\": \"Nicaragua\",\n      \"code\": \"NI\",\n      \"capital\": \"Managua\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Niue\"\n      ],\n      \"lat\": 19.03333333,\n      \"lon\": -169.86666666,\n      \"name\": \"Niue\",\n      \"code\": \"NU\",\n      \"capital\": \"Alofi\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Amsterdam\"\n      ],\n      \"lat\": 52.5,\n      \"lon\": 5.75,\n      \"name\": \"Netherlands\",\n      \"code\": \"NL\",\n      \"capital\": \"Amsterdam\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Oslo\"\n      ],\n      \"lat\": 62,\n      \"lon\": 10,\n      \"name\": \"Norway\",\n      \"code\": \"NO\",\n      \"capital\": \"Oslo\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kathmandu\"\n      ],\n      \"lat\": 28,\n      \"lon\": 84,\n      \"name\": \"Nepal\",\n      \"code\": \"NP\",\n      \"capital\": \"Kathmandu\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Nauru\"\n      ],\n      \"lat\": 0.53333333,\n      \"lon\": 166.91666666,\n      \"name\": \"Nauru\",\n      \"code\": \"NR\",\n      \"capital\": \"Yaren\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Auckland\",\n        \"Pacific/Chatham\"\n      ],\n      \"lat\": 41,\n      \"lon\": 174,\n      \"name\": \"New Zealand\",\n      \"code\": \"NZ\",\n      \"capital\": \"Wellington\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Muscat\"\n      ],\n      \"lat\": 21,\n      \"lon\": 57,\n      \"name\": \"Oman\",\n      \"code\": \"OM\",\n      \"capital\": \"Muscat\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Karachi\"\n      ],\n      \"lat\": 30,\n      \"lon\": 70,\n      \"name\": \"Pakistan\",\n      \"code\": \"PK\",\n      \"capital\": \"Islamabad\"\n    },\n    {\n      \"timezones\": [\n        \"America/Panama\"\n      ],\n      \"lat\": 9,\n      \"lon\": -80,\n      \"name\": \"Panama\",\n      \"code\": \"PA\",\n      \"capital\": \"Panama City\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Pitcairn\"\n      ],\n      \"lat\": 25.06666666,\n      \"lon\": -130.1,\n      \"name\": \"Pitcairn Islands\",\n      \"code\": \"PN\",\n      \"capital\": \"Adamstown\"\n    },\n    {\n      \"timezones\": [\n        \"America/Lima\"\n      ],\n      \"lon\": -77.0428, \"lat\": -12.0464,\n      \"name\": \"Peru\",\n      \"code\": \"PE\",\n      \"capital\": \"Lima\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Manila\"\n      ],\n      \"lat\": 13,\n      \"lon\": 122,\n      \"name\": \"Philippines\",\n      \"code\": \"PH\",\n      \"capital\": \"Manila\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Palau\"\n      ],\n      \"lat\": 7.5,\n      \"lon\": 134.5,\n      \"name\": \"Palau\",\n      \"code\": \"PW\",\n      \"capital\": \"Ngerulmud\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Bougainville\"\n      ],\n      \"lat\": 6,\n      \"lon\": 147,\n      \"name\": \"Papua New Guinea\",\n      \"code\": \"PG\",\n      \"capital\": \"Port Moresby\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Warsaw\"\n      ],\n      \"lat\": 52,\n      \"lon\": 20,\n      \"name\": \"Poland\",\n      \"code\": \"PL\",\n      \"capital\": \"Warsaw\"\n    },\n    {\n      \"timezones\": [\n        \"America/Puerto_Rico\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": -66.5,\n      \"name\": \"Puerto Rico\",\n      \"code\": \"PR\",\n      \"capital\": \"San Juan\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Pyongyang\"\n      ],\n      \"lat\": 40,\n      \"lon\": 127,\n      \"name\": \"North Korea\",\n      \"code\": \"KP\",\n      \"capital\": \"Pyongyang\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Lisbon\",\n        \"Atlantic/Madeira\",\n        \"Atlantic/Azores\"\n      ],\n      \"lat\": 39.5,\n      \"lon\": -8,\n      \"name\": \"Portugal\",\n      \"code\": \"PT\",\n      \"capital\": \"Lisbon\"\n    },\n    {\n      \"timezones\": [\n        \"America/Asuncion\"\n      ],\n      \"lon\": -57.5759, \"lat\": -25.2637,\n      \"name\": \"Paraguay\",\n      \"code\": \"PY\",\n      \"capital\": \"Asunci\\u00f3n\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Gaza\",\n        \"Asia/Hebron\"\n      ],\n      \"lat\": 31.9,\n      \"lon\": 35.2,\n      \"name\": \"Palestine\",\n      \"code\": \"PS\",\n      \"capital\": \"Ramallah\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Tahiti\",\n        \"Pacific/Marquesas\",\n        \"Pacific/Gambier\"\n      ],\n      \"lat\": 15,\n      \"lon\": -140,\n      \"name\": \"French Polynesia\",\n      \"code\": \"PF\",\n      \"capital\": \"Papeet\\u0113\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Qatar\"\n      ],\n      \"lat\": 25.5,\n      \"lon\": 51.25,\n      \"name\": \"Qatar\",\n      \"code\": \"QA\",\n      \"capital\": \"Doha\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Reunion\"\n      ],\n      \"lat\": 21.15,\n      \"lon\": 55.5,\n      \"name\": \"R\\u00e9union\",\n      \"code\": \"RE\",\n      \"capital\": \"Saint-Denis\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Bucharest\"\n      ],\n      \"lat\": 46,\n      \"lon\": 25,\n      \"name\": \"Romania\",\n      \"code\": \"RO\",\n      \"capital\": \"Bucharest\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Kaliningrad\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Kirov\",\n        \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n        \"Europe/Ulyanovsk\",\n        \"Asia/Yekaterinburg\",\n        \"Asia/Omsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Barnaul\",\n        \"Asia/Tomsk\",\n        \"Asia/Novokuznetsk\",\n        \"Asia/Krasnoyarsk\",\n        \"Asia/Irkutsk\",\n        \"Asia/Chita\",\n        \"Asia/Yakutsk\",\n        \"Asia/Khandyga\",\n        \"Asia/Vladivostok\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Magadan\",\n        \"Asia/Sakhalin\",\n        \"Asia/Srednekolymsk\",\n        \"Asia/Kamchatka\",\n        \"Asia/Anadyr\"\n      ],\n      \"lat\": 60,\n      \"lon\": 100,\n      \"name\": \"Russia\",\n      \"code\": \"RU\",\n      \"capital\": \"Moscow\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Kigali\"\n      ],\n      \"lat\": 2,\n      \"lon\": 30,\n      \"name\": \"Rwanda\",\n      \"code\": \"RW\",\n      \"capital\": \"Kigali\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Riyadh\"\n      ],\n      \"lat\": 25,\n      \"lon\": 45,\n      \"name\": \"Saudi Arabia\",\n      \"code\": \"SA\",\n      \"capital\": \"Riyadh\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Khartoum\"\n      ],\n      \"lat\": 15,\n      \"lon\": 30,\n      \"name\": \"Sudan\",\n      \"code\": \"SD\",\n      \"capital\": \"Khartoum\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Dakar\"\n      ],\n      \"lat\": 14,\n      \"lon\": -14,\n      \"name\": \"Senegal\",\n      \"code\": \"SN\",\n      \"capital\": \"Dakar\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Singapore\"\n      ],\n      \"lat\": 1.36666666,\n      \"lon\": 103.8,\n      \"name\": \"Singapore\",\n      \"code\": \"SG\",\n      \"capital\": \"Singapore\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/South_Georgia\"\n      ],\n      \"lat\": 54.5,\n      \"lon\": -37,\n      \"name\": \"South Georgia\",\n      \"code\": \"GS\",\n      \"capital\": \"King Edward Point\"\n    },\n    {\n      \"timezones\": [\n        \"Arctic/Longyearbyen\"\n      ],\n      \"lat\": 78,\n      \"lon\": 20,\n      \"name\": \"Svalbard and Jan Mayen\",\n      \"code\": \"SJ\",\n      \"capital\": \"Longyearbyen\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Guadalcanal\"\n      ],\n      \"lat\": 8,\n      \"lon\": 159,\n      \"name\": \"Solomon Islands\",\n      \"code\": \"SB\",\n      \"capital\": \"Honiara\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Freetown\"\n      ],\n      \"lat\": 8.5,\n      \"lon\": -11.5,\n      \"name\": \"Sierra Leone\",\n      \"code\": \"SL\",\n      \"capital\": \"Freetown\"\n    },\n    {\n      \"timezones\": [\n        \"America/El_Salvador\"\n      ],\n      \"lat\": 13.83333333,\n      \"lon\": -88.91666666,\n      \"name\": \"El Salvador\",\n      \"code\": \"SV\",\n      \"capital\": \"San Salvador\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/San_Marino\"\n      ],\n      \"lat\": 43.76666666,\n      \"lon\": 12.41666666,\n      \"name\": \"San Marino\",\n      \"code\": \"SM\",\n      \"capital\": \"City of San Marino\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Mogadishu\"\n      ],\n      \"lat\": 10,\n      \"lon\": 49,\n      \"name\": \"Somalia\",\n      \"code\": \"SO\",\n      \"capital\": \"Mogadishu\"\n    },\n    {\n      \"timezones\": [\n        \"America/Miquelon\"\n      ],\n      \"lat\": 46.83333333,\n      \"lon\": -56.33333333,\n      \"name\": \"Saint Pierre and Miquelon\",\n      \"code\": \"PM\",\n      \"capital\": \"Saint-Pierre\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Belgrade\"\n      ],\n      \"lat\": 44,\n      \"lon\": 21,\n      \"name\": \"Serbia\",\n      \"code\": \"RS\",\n      \"capital\": \"Belgrade\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Juba\"\n      ],\n      \"lat\": 7,\n      \"lon\": 30,\n      \"name\": \"South Sudan\",\n      \"code\": \"SS\",\n      \"capital\": \"Juba\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Sao_Tome\"\n      ],\n      \"lat\": 1,\n      \"lon\": 7,\n      \"name\": \"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\",\n      \"code\": \"ST\",\n      \"capital\": \"S\\u00e3o Tom\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"America/Paramaribo\"\n      ],\n      \"lon\": -55.2038, \"lat\": 5.852,\n      \"name\": \"Suriname\",\n      \"code\": \"SR\",\n      \"capital\": \"Paramaribo\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Bratislava\"\n      ],\n      \"lat\": 48.66666666,\n      \"lon\": 19.5,\n      \"name\": \"Slovakia\",\n      \"code\": \"SK\",\n      \"capital\": \"Bratislava\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Ljubljana\"\n      ],\n      \"lat\": 46.11666666,\n      \"lon\": 14.81666666,\n      \"name\": \"Slovenia\",\n      \"code\": \"SI\",\n      \"capital\": \"Ljubljana\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Stockholm\"\n      ],\n      \"lat\": 62,\n      \"lon\": 15,\n      \"name\": \"Sweden\",\n      \"code\": \"SE\",\n      \"capital\": \"Stockholm\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Mbabane\"\n      ],\n      \"lat\": 26.5,\n      \"lon\": 31.5,\n      \"name\": \"Swaziland\",\n      \"code\": \"SZ\",\n      \"capital\": \"Lobamba\"\n    },\n    {\n      \"timezones\": [\n        \"America/Lower_Princes\"\n      ],\n      \"lat\": 18.033333,\n      \"lon\": -63.05,\n      \"name\": \"Sint Maarten\",\n      \"code\": \"SX\",\n      \"capital\": \"Philipsburg\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Mahe\"\n      ],\n      \"lat\": 4.58333333,\n      \"lon\": 55.66666666,\n      \"name\": \"Seychelles\",\n      \"code\": \"SC\",\n      \"capital\": \"Victoria\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Damascus\"\n      ],\n      \"lat\": 35,\n      \"lon\": 38,\n      \"name\": \"Syria\",\n      \"code\": \"SY\",\n      \"capital\": \"Damascus\"\n    },\n    {\n      \"timezones\": [\n        \"America/Grand_Turk\"\n      ],\n      \"lat\": 21.75,\n      \"lon\": -71.58333333,\n      \"name\": \"Turks and Caicos Islands\",\n      \"code\": \"TC\",\n      \"capital\": \"Cockburn Town\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Ndjamena\"\n      ],\n      \"lat\": 15,\n      \"lon\": 19,\n      \"name\": \"Chad\",\n      \"code\": \"TD\",\n      \"capital\": \"N'Djamena\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Lome\"\n      ],\n      \"lat\": 8,\n      \"lon\": 1.16666666,\n      \"name\": \"Togo\",\n      \"code\": \"TG\",\n      \"capital\": \"Lom\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Bangkok\"\n      ],\n      \"lat\": 15,\n      \"lon\": 100,\n      \"name\": \"Thailand\",\n      \"code\": \"TH\",\n      \"capital\": \"Bangkok\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dushanbe\"\n      ],\n      \"lat\": 39,\n      \"lon\": 71,\n      \"name\": \"Tajikistan\",\n      \"code\": \"TJ\",\n      \"capital\": \"Dushanbe\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Fakaofo\"\n      ],\n      \"lat\": 9,\n      \"lon\": -172,\n      \"name\": \"Tokelau\",\n      \"code\": \"TK\",\n      \"capital\": \"Fakaofo\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Ashgabat\"\n      ],\n      \"lat\": 40,\n      \"lon\": 60,\n      \"name\": \"Turkmenistan\",\n      \"code\": \"TM\",\n      \"capital\": \"Ashgabat\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dili\"\n      ],\n      \"lat\": 8.83333333,\n      \"lon\": 125.91666666,\n      \"name\": \"Timor-Leste\",\n      \"code\": \"TL\",\n      \"capital\": \"Dili\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Tongatapu\"\n      ],\n      \"lat\": 20,\n      \"lon\": -175,\n      \"name\": \"Tonga\",\n      \"code\": \"TO\",\n      \"capital\": \"Nuku'alofa\"\n    },\n    {\n      \"timezones\": [\n        \"America/Port_of_Spain\"\n      ],\n      \"lat\": 11,\n      \"lon\": -61,\n      \"name\": \"Trinidad and Tobago\",\n      \"code\": \"TT\",\n      \"capital\": \"Port of Spain\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Tunis\"\n      ],\n      \"lat\": 34,\n      \"lon\": 9,\n      \"name\": \"Tunisia\",\n      \"code\": \"TN\",\n      \"capital\": \"Tunis\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Istanbul\"\n      ],\n      \"lat\": 39,\n      \"lon\": 35,\n      \"name\": \"Turkey\",\n      \"code\": \"TR\",\n      \"capital\": \"Ankara\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Funafuti\"\n      ],\n      \"lat\": 8,\n      \"lon\": 178,\n      \"name\": \"Tuvalu\",\n      \"code\": \"TV\",\n      \"capital\": \"Funafuti\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Taipei\"\n      ],\n      \"lat\": 23.5,\n      \"lon\": 121,\n      \"name\": \"Taiwan\",\n      \"code\": \"TW\",\n      \"capital\": \"Taipei\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Dar_es_Salaam\"\n      ],\n      \"lat\": 6,\n      \"lon\": 35,\n      \"name\": \"Tanzania\",\n      \"code\": \"TZ\",\n      \"capital\": \"Dodoma\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Kampala\"\n      ],\n      \"lat\": 1,\n      \"lon\": 32,\n      \"name\": \"Uganda\",\n      \"code\": \"UG\",\n      \"capital\": \"Kampala\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Kiev\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Zaporozhye\"\n      ],\n      \"lat\": 49,\n      \"lon\": 32,\n      \"name\": \"Ukraine\",\n      \"code\": \"UA\",\n      \"capital\": \"Kiev\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Johnston\",\n        \"Pacific/Midway\",\n        \"Pacific/Wake\"\n      ],\n      \"lat\": 19.2911437,\n      \"lon\": 166.618332,\n      \"name\": \"United States Minor Outlying Islands\",\n      \"code\": \"UM\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"America/Montevideo\"\n      ],\n      \"lon\": -56.1645, \"lat\": -34.9011,\n      \"name\": \"Uruguay\",\n      \"code\": \"UY\",\n      \"capital\": \"Montevideo\"\n    },\n    {\n      \"timezones\": [\n        \"America/New_York\",\n        \"America/Detroit\",\n        \"America/Kentucky/Louisville\",\n        \"America/Kentucky/Monticello\",\n        \"America/Indiana/Indianapolis\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vevay\",\n        \"America/Chicago\",\n        \"America/Indiana/Tell_City\",\n        \"America/Indiana/Knox\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/North_Dakota/Beulah\",\n        \"America/Denver\",\n        \"America/Boise\",\n        \"America/Phoenix\",\n        \"America/Los_Angeles\",\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Sitka\",\n        \"America/Metlakatla\",\n        \"America/Yakutat\",\n        \"America/Nome\",\n        \"America/Adak\",\n        \"Pacific/Honolulu\"\n      ],\n      \"lat\": 38,\n      \"lon\": -97,\n      \"name\": \"United States\",\n      \"code\": \"US\",\n      \"capital\": \"Washington D.C.\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\"\n      ],\n      \"lat\": 41,\n      \"lon\": 64,\n      \"name\": \"Uzbekistan\",\n      \"code\": \"UZ\",\n      \"capital\": \"Tashkent\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vatican\"\n      ],\n      \"lat\": 41.9,\n      \"lon\": 12.45,\n      \"name\": \"Vatican City\",\n      \"code\": \"VA\",\n      \"capital\": \"Vatican City\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Vincent\"\n      ],\n      \"lat\": 13.25,\n      \"lon\": -61.2,\n      \"name\": \"Saint Vincent and the Grenadines\",\n      \"code\": \"VC\",\n      \"capital\": \"Kingstown\"\n    },\n    {\n      \"timezones\": [\n        \"America/Caracas\"\n      ],\n      \"lon\": -66.9036, \"lat\": 10.4806,\n      \"name\": \"Venezuela\",\n      \"code\": \"VE\",\n      \"capital\": \"Caracas\"\n    },\n    {\n      \"timezones\": [\n        \"America/Tortola\"\n      ],\n      \"lat\": 18.431383,\n      \"lon\": -64.62305,\n      \"name\": \"British Virgin Islands\",\n      \"code\": \"VG\",\n      \"capital\": \"Road Town\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Thomas\"\n      ],\n      \"lat\": 18.35,\n      \"lon\": -64.933333,\n      \"name\": \"United States Virgin Islands\",\n      \"code\": \"VI\",\n      \"capital\": \"Charlotte Amalie\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Ho_Chi_Minh\"\n      ],\n      \"lat\": 16.16666666,\n      \"lon\": 107.83333333,\n      \"name\": \"Vietnam\",\n      \"code\": \"VN\",\n      \"capital\": \"Hanoi\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Efate\"\n      ],\n      \"lat\": 16,\n      \"lon\": 167,\n      \"name\": \"Vanuatu\",\n      \"code\": \"VU\",\n      \"capital\": \"Port Vila\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Wallis\"\n      ],\n      \"lat\": 13.3,\n      \"lon\": -176.2,\n      \"name\": \"Wallis and Futuna\",\n      \"code\": \"WF\",\n      \"capital\": \"Mata-Utu\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Apia\"\n      ],\n      \"lat\": 13.58333333,\n      \"lon\": -172.33333333,\n      \"name\": \"Samoa\",\n      \"code\": \"WS\",\n      \"capital\": \"Apia\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Aden\"\n      ],\n      \"lat\": 15,\n      \"lon\": 48,\n      \"name\": \"Yemen\",\n      \"code\": \"YE\",\n      \"capital\": \"Sana'a\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Johannesburg\"\n      ],\n      \"lat\": 29,\n      \"lon\": 24,\n      \"name\": \"South Africa\",\n      \"code\": \"ZA\",\n      \"capital\": \"Pretoria\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Lusaka\"\n      ],\n      \"lat\": 15,\n      \"lon\": 30,\n      \"name\": \"Zambia\",\n      \"code\": \"ZM\",\n      \"capital\": \"Lusaka\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Harare\"\n      ],\n      \"lat\": 20,\n      \"lon\": 30,\n      \"name\": \"Zimbabwe\",\n      \"code\": \"ZW\",\n      \"capital\": \"Harare\"\n    }\n  ]\n\n  function globalDataGraph(data: any) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    for (let i in data) {\n      resultDates.push(i);\n      resultCases.push(data[i]);\n    }\n    // console.log(resultCases, resultDates);\n    return ({ resultCases, resultDates });\n  }\n\n  function countriesListData(data: ICountry[]) {\n    let resultCases: any[] = []\n    let resultCountries: any[] = []\n    let result: any[] = []\n    for (let i in data) {\n      resultCountries.push(data[i].Country);\n      resultCases.push(data[i].TotalConfirmed);\n      result.push({\n        country: data[i].Country, TotalConfirmed: data[i].TotalConfirmed,\n        sortable: true,\n      })\n    }\n    // console.log(resultCases, resultCountries);\n    return ({ result, resultCases, resultCountries });\n  }\n\n  function countryDataGraph(data: IDataCovid[] | ICountry[], country: string, caseType: string, dateTo: string) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    if (data.length > 0) {\n      data.forEach((item: any) => {\n        // console.log(\"item : \", caseType, item[caseType], item);\n        if (country === 'fr' || debug === false) {\n          resultCases.push(item.Cases.filter(!item.Province));\n          resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          // resultDates.push(moment(item[0].last_update).format('YYYY/MM/DD'));\n        } else if (country === 'us' || debug === true) {\n          if ((moment(item.last_update).isAfter(dateTo))) {\n            resultCases.push(caseType === \"confirmed\" ? item.cases : item[caseType]);\n            resultDates.push(moment(item.last_update).format('YYYY/MM/DD'));\n          }\n        } else {\n          if ((moment(item.Date).isAfter(dateTo))) {\n            resultCases.push(item.Cases);\n            resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          }\n        }\n      })\n      let resultCasesDiff: any[] = _.map(resultCases, function (e: any, i: any) {\n        return (resultCases[i + 1] - e) < 0 ? 0 : (resultCases[i + 1] - e)\n      });\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      dataDiff === [] ? console.log(dataDiff) : console.log('');\n      setData(resultCasesDiff);// inversion between resultCasesDiff and resultCases for display graph of variations and not total\n      setDataDiff(resultCases);\n      setLabels(resultDates);\n      return ({ resultCases, resultDates, resultCasesDiff });\n    } else {\n      setData([]);\n      setLabels([]);\n      setDataDiff([]);\n\n    }\n  }\n\n  // function getCovidApi() :  get data by country\n  // differents source cause pb with USA, \n  // you cans get data according Country Code, date from  and case : confirmed, deaths, recovered\n  // have to use function countryDataGraph() to clean data and have an array to fit with D3js charts react-map-smples\n  function getCovidApi(country: string, caseType: string, dateTo: string) {\n    if (country === \"\") {\n      countryDataGraph([], \"\", \"\", \"\");\n    } else {\n      try {\n        if (debug === false) {\n          return fetch(`https://covid19-api.org/api/timeline/${country}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          })\n            .then((response: any) => response.json()).then((res) => {\n              countryDataGraph(res.reverse(), country, caseType, dateTo);// cleaning data for ChartJS\n            }).catch(err => alert(err));\n        } else {\n          return fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          })\n            .then((response: any) => response.json()).then((res) => {\n              console.log(`res Fetch`, res)\n              countryDataGraph(res, country, caseType, dateTo);// cleaning data for ChartJS\n            }).catch(err => alert(err));\n        }\n      } catch (err) {\n        console.log(err)\n        return;\n      }\n    }\n  };\n\n\n  // to set unstated.total data : {Global, Countries,..} all total data of today\n  const getTotal = async () => {\n    await fetch(`https://api.covid19api.com/summary`)\n      .then(res => res.json())\n      .then(resp => setTotal(resp))\n      .catch((err) => { throw (err) })\n  }\n\n  const getCovidCountry = async (country: string, caseType: string, dateTo: string) => {\n    setCovidApi(await getCovidApi(country, caseType, dateTo));\n    // console.log(`https://covid19-api.org/api/timeline/${country}`)\n    // console.log(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`)\n  }\n\n\n  const updateTotalCovid = async () => {\n    setTotal(await getTotal());\n  }\n\n  // =================================================\n\n  // function matching data for the map : react map simples\n  // source (`https://api.covid19api.com/all`, {\n  function getMarkers(arr1: any, arr2: any) {\n    return _.union(\n      _.map(arr1, function (obj1) {\n        var same = _.find(arr2, function (obj2) {\n          return obj1[\"CountryCode\"] === obj2[\"code\"];\n        });\n        return same ? _.extend(obj1, same) : obj1;\n      }),\n      _.reject(arr2, function (obj2) {\n        return _.find(arr1, function (obj1) {\n          return obj2[\"code\"] === obj1[\"CountryCode\"];\n        });\n      })\n    );\n  }\n\n  //order \n  function dynamicSort(property: any) {\n    var sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return function (b: any, a: any) {\n      /* next line works with strings and numbers, \n       * and you may want to customize it to your needs\n       */\n      var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n      return result * sortOrder;\n    }\n  }\n  function getCovidMapMarkers() {\n    fetch(`https://api.covid19api.com/summary`, {\n      method: \"GET\",\n    }).then((response: any) => response.json()).then((res) => {\n      // console.log(\"***********************\", res.Countries);\n      let resp = getMarkers(res.Countries, country_list);\n      setMarkers(resp.sort(dynamicSort(\"TotalConfirmed\")));\n      // console.log(resp);\n      return (resp);\n    }).catch(err => alert(err));\n  }\n\n  function getCountriesML() {\n    try {\n      return fetch(`\"https://covid19-api.org/api/status\"`, {\n        method: \"GET\",\n      }).then((response: any) => response.text())\n    } catch (err) {\n      console.log(err)\n      return;\n    }\n  };\n\n  const updateCountriesML = async () => {\n    setCountriesML(await getCountriesML());\n  }\n\n  return {\n    covidApi,\n    country_list,\n    data,\n    labels,\n    total,\n    country,\n    code,\n    markers,\n    countriesML,\n    setCountry,\n    setCode,\n    getTotal,\n    getCovidCountry,\n    updateTotalCovid,\n    countryDataGraph,\n    globalDataGraph,\n    countriesListData,\n    getCovidMapMarkers,\n    updateCountriesML,\n  };\n}\nexport const StoreContainer = createContainer(useStore)\n\n// let country_list = { 'AF' : 'Afghanistan', 'AX' : 'Aland Islands', 'AL' : 'Albania', 'DZ' : 'Algeria', 'AS' : 'American Samoa', 'AD' : 'Andorra', 'AO' : 'Angola', 'AI' : 'Anguilla', 'AQ' : 'Antarctica', 'AG' : 'Antigua And Barbuda', 'AR' : 'Argentina', 'AM' : 'Armenia', 'AW' : 'Aruba', 'AU' : 'Australia', 'AT' : 'Austria', 'AZ' : 'Azerbaijan', 'BS' : 'Bahamas', 'BH' : 'Bahrain', 'BD' : 'Bangladesh', 'BB' : 'Barbados', 'BY' : 'Belarus', 'BE' : 'Belgium', 'BZ' : 'Belize', 'BJ' : 'Benin', 'BM' : 'Bermuda', 'BT' : 'Bhutan', 'BO' : 'Bolivia', 'BA' : 'Bosnia And Herzegovina', 'BW' : 'Botswana', 'BV' : 'Bouvet Island', 'BR' : 'Brazil', 'IO' : 'British Indian Ocean Territory', 'BN' : 'Brunei Darussalam', 'BG' : 'Bulgaria', 'BF' : 'Burkina Faso', 'BI' : 'Burundi', 'KH' : 'Cambodia', 'CM' : 'Cameroon', 'CA' : 'Canada', 'CV' : 'Cape Verde', 'KY' : 'Cayman Islands', 'CF' : 'Central African Republic', 'TD' : 'Chad', 'CL' : 'Chile', 'CN' : 'China', 'CX' : 'Christmas Island', 'CC' : 'Cocos (Keeling) Islands', 'CO' : 'Colombia', 'KM' : 'Comoros', 'CG' : 'Congo', 'CD' : 'Congo, Democratic Republic', 'CK' : 'Cook Islands', 'CR' : 'Costa Rica', 'CI' : 'Cote D\\'Ivoire', 'HR' : 'Croatia', 'CU' : 'Cuba', 'CY' : 'Cyprus', 'CZ' : 'Czech Republic', 'DK' : 'Denmark', 'DJ' : 'Djibouti', 'DM' : 'Dominica', 'DO' : 'Dominican Republic', 'EC' : 'Ecuador', 'EG' : 'Egypt', 'SV' : 'El Salvador', 'GQ' : 'Equatorial Guinea', 'ER' : 'Eritrea', 'EE' : 'Estonia', 'ET' : 'Ethiopia', 'FK' : 'Falkland Islands (Malvinas)', 'FO' : 'Faroe Islands', 'FJ' : 'Fiji', 'FI' : 'Finland', 'FR' : 'France', 'GF' : 'French Guiana', 'PF' : 'French Polynesia', 'TF' : 'French Southern Territories', 'GA' : 'Gabon', 'GM' : 'Gambia', 'GE' : 'Georgia', 'DE' : 'Germany', 'GH' : 'Ghana', 'GI' : 'Gibraltar', 'GR' : 'Greece', 'GL' : 'Greenland', 'GD' : 'Grenada', 'GP' : 'Guadeloupe', 'GU' : 'Guam', 'GT' : 'Guatemala', 'GG' : 'Guernsey', 'GN' : 'Guinea', 'GW' : 'Guinea-Bissau', 'GY' : 'Guyana', 'HT' : 'Haiti', 'HM' : 'Heard Island & Mcdonald Islands', 'VA' : 'Holy See (Vatican City State)', 'HN' : 'Honduras', 'HK' : 'Hong Kong', 'HU' : 'Hungary', 'IS' : 'Iceland', 'IN' : 'India', 'ID' : 'Indonesia', 'IR' : 'Iran, Islamic Republic Of', 'IQ' : 'Iraq', 'IE' : 'Ireland', 'IM' : 'Isle Of Man', 'IL' : 'Israel', 'IT' : 'Italy', 'JM' : 'Jamaica', 'JP' : 'Japan', 'JE' : 'Jersey', 'JO' : 'Jordan', 'KZ' : 'Kazakhstan', 'KE' : 'Kenya', 'KI' : 'Kiribati', 'KR' : 'Korea', 'KW' : 'Kuwait', 'KG' : 'Kyrgyzstan', 'LA' : 'Lao People\\'s Democratic Republic', 'LV' : 'Latvia', 'LB' : 'Lebanon', 'LS' : 'Lesotho', 'LR' : 'Liberia', 'LY' : 'Libyan Arab Jamahiriya', 'LI' : 'Liechtenstein', 'LT' : 'Lithuania', 'LU' : 'Luxembourg', 'MO' : 'Macao', 'MK' : 'Macedonia', 'MG' : 'Madagascar', 'MW' : 'Malawi', 'MY' : 'Malaysia', 'MV' : 'Maldives', 'ML' : 'Mali', 'MT' : 'Malta', 'MH' : 'Marshall Islands', 'MQ' : 'Martinique', 'MR' : 'Mauritania', 'MU' : 'Mauritius', 'YT' : 'Mayotte', 'MX' : 'Mexico', 'FM' : 'Micronesia, Federated States Of', 'MD' : 'Moldova', 'MC' : 'Monaco', 'MN' : 'Mongolia', 'ME' : 'Montenegro', 'MS' : 'Montserrat', 'MA' : 'Morocco', 'MZ' : 'Mozambique', 'MM' : 'Myanmar', 'NA' : 'Namibia', 'NR' : 'Nauru', 'NP' : 'Nepal', 'NL' : 'Netherlands', 'AN' : 'Netherlands Antilles', 'NC' : 'New Caledonia', 'NZ' : 'New Zealand', 'NI' : 'Nicaragua', 'NE' : 'Niger', 'NG' : 'Nigeria', 'NU' : 'Niue', 'NF' : 'Norfolk Island', 'MP' : 'Northern Mariana Islands', 'NO' : 'Norway', 'OM' : 'Oman', 'PK' : 'Pakistan', 'PW' : 'Palau', 'PS' : 'Palestinian Territory, Occupied', 'PA' : 'Panama', 'PG' : 'Papua New Guinea', 'PY' : 'Paraguay', 'PE' : 'Peru', 'PH' : 'Philippines', 'PN' : 'Pitcairn', 'PL' : 'Poland', 'PT' : 'Portugal', 'PR' : 'Puerto Rico', 'QA' : 'Qatar', 'RE' : 'Reunion', 'RO' : 'Romania', 'RU' : 'Russian Federation', 'RW' : 'Rwanda', 'BL' : 'Saint Barthelemy', 'SH' : 'Saint Helena', 'KN' : 'Saint Kitts And Nevis', 'LC' : 'Saint Lucia', 'MF' : 'Saint Martin', 'PM' : 'Saint Pierre And Miquelon', 'VC' : 'Saint Vincent And Grenadines', 'WS' : 'Samoa', 'SM' : 'San Marino', 'ST' : 'Sao Tome And Principe', 'SA' : 'Saudi Arabia', 'SN' : 'Senegal', 'RS' : 'Serbia', 'SC' : 'Seychelles', 'SL' : 'Sierra Leone', 'SG' : 'Singapore', 'SK' : 'Slovakia', 'SI' : 'Slovenia', 'SB' : 'Solomon Islands', 'SO' : 'Somalia', 'ZA' : 'South Africa', 'GS' : 'South Georgia And Sandwich Isl.', 'ES' : 'Spain', 'LK' : 'Sri Lanka', 'SD' : 'Sudan', 'SR' : 'Suriname', 'SJ' : 'Svalbard And Jan Mayen', 'SZ' : 'Swaziland', 'SE' : 'Sweden', 'CH' : 'Switzerland', 'SY' : 'Syrian Arab Republic', 'TW' : 'Taiwan', 'TJ' : 'Tajikistan', 'TZ' : 'Tanzania', 'TH' : 'Thailand', 'TL' : 'Timor-Leste', 'TG' : 'Togo', 'TK' : 'Tokelau', 'TO' : 'Tonga', 'TT' : 'Trinidad And Tobago', 'TN' : 'Tunisia', 'TR' : 'Turkey', 'TM' : 'Turkmenistan', 'TC' : 'Turks And Caicos Islands', 'TV' : 'Tuvalu', 'UG' : 'Uganda', 'UA' : 'Ukraine', 'AE' : 'United Arab Emirates', 'GB' : 'United Kingdom', 'US' : 'United States', 'UM' : 'United States Outlying Islands', 'UY' : 'Uruguay', 'UZ' : 'Uzbekistan', 'VU' : 'Vanuatu', 'VE' : 'Venezuela', 'VN' : 'Viet Nam', 'VG' : 'Virgin Islands, British', 'VI' : 'Virgin Islands, U.S.', 'WF' : 'Wallis And Futuna', 'EH' : 'Western Sahara', 'YE' : 'Yemen', 'ZM' : 'Zambia', 'ZW' : 'Zimbabwe' };\n\n\n// let country_list = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua &amp; Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia &amp; Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Cape Verde\", \"Cayman Islands\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cruise Ship\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kuwait\", \"Kyrgyz Republic\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre &amp; Miquelon\", \"Samoa\", \"San Marino\", \"Satellite\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"South Africa\", \"South Korea\", \"Spain\", \"Sri Lanka\", \"St Kitts &amp; Nevis\", \"St Lucia\", \"St Vincent\", \"St. Lucia\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad &amp; Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks &amp; Caicos\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"Uruguay\", \"Uzbekistan\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\n\n"]},"metadata":{},"sourceType":"module"}