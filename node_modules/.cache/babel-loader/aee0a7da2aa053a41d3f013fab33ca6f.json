{"ast":null,"code":"import _slicedToArray from\"/Users/rims/Documents/Projects/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{StoreContainer}from'../Store';import _ from'lodash';import{ComposableMap,Geographies,Geography,Marker,ZoomableGroup}from\"react-simple-maps\";var geoUrl=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";var MapChart=function MapChart(props){var unstated=StoreContainer.useContainer();var _React$useState=React.useState(unstated.total),_React$useState2=_slicedToArray(_React$useState,2),data=_React$useState2[0],setData=_React$useState2[1];var _React$useState3=React.useState(700000),_React$useState4=_slicedToArray(_React$useState3,2),maxMarkers=_React$useState4[0],setMaxMarkers=_React$useState4[1];var myMarkers=[];function mapDataCountries(data){if(data.Countries){data.Countries.map(function(item){return myMarkers.push({name:item.Country,markerOffset:0,lon:0,lat:0});});}// console.log(myMarkers)\nreturn myMarkers;}React.useEffect(function(){setData(unstated.getCovidMapMarkers());if(data)mapDataCountries(data);// eslint-disable-next-line\n},[data,unstated.code]);React.useEffect(function(){console.log(unstated.markers);if(unstated.markers!==undefined)setMaxMarkers(unstated.markers[9]?unstated.markers[9].TotalConfirmed:700000);// eslint-disable-next-line\n},[unstated.markers]);return/*#__PURE__*/React.createElement(ComposableMap,{projectionConfig:{rotate:[-10,0,0],scale:200}// style={{ marginTop: '-5em' }}\n},/*#__PURE__*/React.createElement(ZoomableGroup,{zoom:1},/*#__PURE__*/React.createElement(Geographies,{geography:geoUrl},function(_ref){var geographies=_ref.geographies;return geographies.map(function(geo){return/*#__PURE__*/React.createElement(Geography,{key:geo.rsmKey,geography:geo,fill:\"#DDD\",stroke:\"#FFF\",onMouseEnter:function onMouseEnter(){var _geo$properties=geo.properties,NAME=_geo$properties.NAME,POP_EST=_geo$properties.POP_EST,ISO_A2=_geo$properties.ISO_A2;var country=_.find(unstated.markers,{CountryCode:ISO_A2});if(country){// cases = country.TotalConfirmed;\nprops.setTooltipContent({Country:NAME,Population:POP_EST,NewConfirmed:country.NewConfirmed,TotalConfirmed:country.TotalConfirmed,NewDeaths:country.NewDeaths,TotalDeaths:country.TotalDeaths,NewRecovered:country.NewRecovered,TotalRecovered:country.TotalRecovered,data:country});}else{props.setTooltipContent({Country:NAME});}},onMouseLeave:function onMouseLeave(){props.setTooltipContent(\"\");},onClick:function onClick(){var _geo$properties2=geo.properties,NAME=_geo$properties2.NAME,ISO_A2=_geo$properties2.ISO_A2;unstated.setCode(ISO_A2.toLowerCase());unstated.setCountry(NAME.toLowerCase());// console.log(\"mapCharts : code \", unstated.code);\n},style:{default:{fill:\"#D6D6DA\",outline:\"none\"},hover:{fill:\"#F53\",outline:\"none\"},pressed:{fill:\"#E42\",outline:\"none\"}}});});}),unstated.markers?_.filter(unstated.markers,function(o){return o.CountryCode===unstated.code||o.TotalConfirmed>maxMarkers;}).map(function(item){return/*#__PURE__*/React.createElement(Marker,{key:item.name,coordinates:[item.lon,item.lat]},item.CountryCode.toLowerCase()===unstated.code.toLowerCase()?/*#__PURE__*/React.createElement(\"g\",{fill:\"none\",stroke:\"#ff0000\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",transform:\"translate(-12, -35)\"},/*#__PURE__*/React.createElement(\"circle\",{cx:\"12\",cy:\"10\",r:\"3\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\"})):/*#__PURE__*/React.createElement(React.Fragment,null,item.TotalConfirmed>maxMarkers?/*#__PURE__*/React.createElement(\"g\",{fill:\"none\",stroke:\"#ffc107\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",transform:\"translate(-12, -6)\"},/*#__PURE__*/React.createElement(\"circle\",{cx:\"12\",cy:\"8\",r:\"1\"})):\"\"),item.CountryCode.toLowerCase()===unstated.code.toLowerCase()?/*#__PURE__*/React.createElement(\"text\",{textAnchor:\"middle\",style:{fill:\"red\",fontWeight:\"bold\",textShadow:\"1px 1px 1px black\",fontSize:\"15px\",cursor:\"default\",zIndex:-10}},item.CountryCode,\" : \",item.TotalConfirmed,\" cases\"):/*#__PURE__*/React.createElement(\"text\",{textAnchor:\"middle\",style:{fill:\"orange\",textShadow:\"1px 1px 1px black\",fontWeight:\"bold\",fontSize:\"10px\",cursor:\"default\",zIndex:-10},onMouseEnter:function onMouseEnter(){var country=_.find(unstated.markers,{CountryCode:item.CountryCode});if(country){// cases = country.TotalConfirmed;\nprops.setTooltipContent({Country:item.Country,Population:'',NewConfirmed:country.NewConfirmed,TotalConfirmed:country.TotalConfirmed,NewDeaths:country.NewDeaths,TotalDeaths:country.TotalDeaths,NewRecovered:country.NewRecovered,TotalRecovered:country.TotalRecovered,data:country});}else{props.setTooltipContent({Country:item.Country});}},onMouseLeave:function onMouseLeave(){props.setTooltipContent(\"\");},onClick:function onClick(){unstated.setCode(item.CountryCode.toLowerCase());unstated.setCountry(item.Country.toLowerCase());// console.log(\"mapCharts : code \", unstated.code);\n}},item.TotalConfirmed>maxMarkers?\"\".concat(item.CountryCode,\" \").concat(item.TotalConfirmed):\"\"));}):\"\"));};export default MapChart;","map":{"version":3,"sources":["/Users/rims/Documents/Projects/covid19/src/components/Map/MapChart.tsx"],"names":["React","StoreContainer","_","ComposableMap","Geographies","Geography","Marker","ZoomableGroup","geoUrl","MapChart","props","unstated","useContainer","useState","total","data","setData","maxMarkers","setMaxMarkers","myMarkers","mapDataCountries","Countries","map","item","push","name","Country","markerOffset","lon","lat","useEffect","getCovidMapMarkers","code","console","log","markers","undefined","TotalConfirmed","rotate","scale","geographies","geo","rsmKey","properties","NAME","POP_EST","ISO_A2","country","find","CountryCode","setTooltipContent","Population","NewConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","setCode","toLowerCase","setCountry","default","fill","outline","hover","pressed","filter","o","fontWeight","textShadow","fontSize","cursor","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StoreContainer } from '../Store';\nimport _ from 'lodash';\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup\n} from \"react-simple-maps\";\n\ninterface IMarkers {\n  markerOffset: number,\n  name: string,\n  lon: number,\n  lat: number\n}\nconst geoUrl: string =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = (props: any) => {\n  const unstated = StoreContainer.useContainer();\n  const [data, setData] = React.useState<any>(unstated.total);\n  const [maxMarkers, setMaxMarkers] = React.useState<number>(700000);\n  const myMarkers: IMarkers[] = []\n\n  function mapDataCountries(data: any) {\n    if (data.Countries) {\n      data.Countries.map((item: any) => myMarkers.push({ name: item.Country, markerOffset: 0, lon: 0, lat: 0 }))\n    }\n    // console.log(myMarkers)\n    return myMarkers;\n  }\n  React.useEffect(() => {\n    setData(unstated.getCovidMapMarkers());\n    if (data)\n      mapDataCountries(data);\n    // eslint-disable-next-line\n  }, [data, unstated.code])\n\n  React.useEffect(() => {\n    console.log(unstated.markers)\n    if (unstated.markers !== undefined)\n      setMaxMarkers(unstated.markers[9] ? unstated.markers[9].TotalConfirmed : 700000);\n    // eslint-disable-next-line\n  }, [unstated.markers])\n\n  return (\n    <ComposableMap\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 200\n      }}\n    // style={{ marginTop: '-5em' }}\n    >\n      <ZoomableGroup zoom={1}>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill=\"#DDD\"\n                stroke=\"#FFF\"\n                onMouseEnter={() => {\n                  let { NAME, POP_EST, ISO_A2 } = geo.properties;\n                  let country: object | any = _.find((unstated.markers), { CountryCode: ISO_A2 });\n                  if (country) {\n                    // cases = country.TotalConfirmed;\n                    props.setTooltipContent({\n                      Country: NAME,\n                      Population: POP_EST,\n                      NewConfirmed: country.NewConfirmed,\n                      TotalConfirmed: country.TotalConfirmed,\n                      NewDeaths: country.NewDeaths,\n                      TotalDeaths: country.TotalDeaths,\n                      NewRecovered: country.NewRecovered,\n                      TotalRecovered: country.TotalRecovered,\n                      data: country\n                    });\n                  } else {\n                    props.setTooltipContent({ Country: NAME });\n                  }\n                }}\n                onMouseLeave={() => {\n                  props.setTooltipContent(\"\");\n                }}\n                onClick={() => {\n                  let { NAME, ISO_A2 } = geo.properties;\n                  unstated.setCode(ISO_A2.toLowerCase());\n                  unstated.setCountry(NAME.toLowerCase());\n                  // console.log(\"mapCharts : code \", unstated.code);\n                }}\n\n                style={{\n                  default: {\n                    fill: \"#D6D6DA\",\n                    outline: \"none\"\n                  },\n                  hover: {\n                    fill: \"#F53\",\n                    outline: \"none\"\n                  },\n                  pressed: {\n                    fill: \"#E42\",\n                    outline: \"none\"\n                  }\n                }}\n              />\n            ))\n          }\n        </Geographies>\n        {unstated.markers ?\n          (_.filter(unstated.markers, (o: any) => o.CountryCode === unstated.code || o.TotalConfirmed > maxMarkers))\n            .map((item: any) => (\n              <Marker key={item.name} coordinates={[item.lon, item.lat]}>\n                {item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ?\n                  <g\n                    fill=\"none\"\n                    stroke=\"#ff0000\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    transform=\"translate(-12, -35)\"\n                  >\n                    <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                    <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                  </g> :\n                  <>\n                    {\n                      item.TotalConfirmed > maxMarkers ?\n                        <g\n                          fill=\"none\"\n                          stroke=\"#ffc107\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          transform=\"translate(-12, -6)\"\n                        >\n                          <circle cx=\"12\" cy=\"8\" r=\"1\" />\n                        </g>\n                        : \"\"}\n                  </>\n                }\n\n                {item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ?\n                  <text\n                    textAnchor=\"middle\"\n                    style={{ fill: \"red\", fontWeight: \"bold\", textShadow: \"1px 1px 1px black\", fontSize: \"15px\" , cursor: \"default\", zIndex:-10}}\n                  >\n                    {item.CountryCode} : {item.TotalConfirmed} cases\n                </text>\n                  : <text\n                    textAnchor=\"middle\"\n                    style={{ fill: \"orange\", textShadow: \"1px 1px 1px black\", fontWeight: \"bold\", fontSize: \"10px\", cursor: \"default\", zIndex:-10 }}\n                    onMouseEnter={() => {\n                      let country: object | any = _.find((unstated.markers), { CountryCode: item.CountryCode });\n                      if (country) {\n                        // cases = country.TotalConfirmed;\n                        props.setTooltipContent({\n                          Country: item.Country,\n                          Population: '',\n                          NewConfirmed: country.NewConfirmed,\n                          TotalConfirmed: country.TotalConfirmed,\n                          NewDeaths: country.NewDeaths,\n                          TotalDeaths: country.TotalDeaths,\n                          NewRecovered: country.NewRecovered,\n                          TotalRecovered: country.TotalRecovered,\n                          data: country\n                        });\n                      } else {\n                        props.setTooltipContent({ Country: item.Country });\n                      }\n                    }}\n                    onMouseLeave={() => {\n                      props.setTooltipContent(\"\");\n                    }}\n                    onClick={() => {\n                      unstated.setCode(item.CountryCode.toLowerCase());\n                      unstated.setCountry(item.Country.toLowerCase());\n                      // console.log(\"mapCharts : code \", unstated.code);\n                    }}\n                  >\n                    {\n                      item.TotalConfirmed > maxMarkers ? `${item.CountryCode} ${item.TotalConfirmed}` : \"\"}\n                  </text>\n                }\n              </Marker >\n            )) : \"\"\n        }\n      </ZoomableGroup>\n    </ComposableMap >\n  );\n};\n\nexport default MapChart;\n\n"]},"metadata":{},"sourceType":"module"}