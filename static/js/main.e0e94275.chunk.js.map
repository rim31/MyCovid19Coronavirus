{"version":3,"sources":["components/Map/countries.ts","components/Store.tsx","components/modules/SearchBar.tsx","components/Layout.tsx","components/Charts/BarChart.tsx","components/modules/TableCasesData.tsx","components/modules/Flag.js","components/modules/ListCountries.tsx","components/Charts/Dashboard.tsx","components/Map/MapChart.tsx","components/Pages/MapComponent.tsx","components/Charts/LinearChart.tsx","components/Charts/SelectCase.tsx","components/Charts/SelectPeriod.tsx","components/Pages/HomeComponent.tsx","components/modules/SortCountries.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["country_list","StoreContainer","createContainer","React","country","setCountry","code","setCode","covidApi","setCovidApi","countriesML","setCountriesML","data","setData","dataDiff","setDataDiff","total","setTotal","labels","setLabels","markers","setMarkers","headers","Headers","countryDataGraph","caseType","dateTo","resultCases","resultDates","length","forEach","item","Province","push","Cases","moment","Date","format","last_update","isAfter","cases","resultCasesDiff","_","map","e","i","pop","getCovidApi","fetch","method","redirect","then","response","json","res","catch","err","alert","console","log","getTotal","a","resp","getCovidCountry","updateTotalCovid","getCountriesML","text","globalDataGraph","countriesListData","resultCountries","result","Country","TotalConfirmed","sortable","getCovidMapMarkers","arr1","arr2","Countries","union","obj1","same","find","obj2","extend","reject","sort","property","sortOrder","substr","b","dynamicSort","updateCountriesML","SearchBar","unstated","useContainer","Autocomplete","id","options","autoHighlight","getOptionLabel","option","name","renderOption","Fragment","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","onChange","values","renderInput","params","TextField","style","backgroundColor","borderRadius","width","label","variant","size","inputProps","value","WhiteTextTypography","withStyles","root","color","Typography","Copyright","align","Link","href","getFullYear","Layout","props","className","display","flexWrap","justifyContent","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","textDecoration","paddingLeft","to","fontWeight","children","Box","pt","bottom","position","right","BarChart","labelsCountry","datasets","dataCountry","legend","title","fontColor","useEffect","TableCasesData","countries","isEmpty","useState","setResult","temp","filter","CountryCode","fontSize","NewConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","Flag","ListCountries","handleClick","event","currentTarget","dataset","key","order","hasOwnProperty","varA","varB","comparison","compareValues","flexDirection","overflow","whiteSpace","textOverflow","maxWidth","onClick","data-name","data-code","Dashboard","Global","confirmedAverage","deathsAverage","recoveredAverage","content","Population","toFixed","zIndex","marginBottom","padding","MapChart","maxMarkers","setMaxMarkers","myMarkers","markerOffset","lon","lat","mapDataCountries","undefined","projectionConfig","rotate","scale","zoom","geography","geographies","geo","rsmKey","fill","stroke","onMouseEnter","properties","NAME","POP_EST","ISO_A2","setTooltipContent","onMouseLeave","default","outline","hover","pressed","o","coordinates","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","textAnchor","textShadow","cursor","HomeComponent","date","setDate","X","setX","Y","setY","setContent","getAll","infos","setGraph","LinearChart","hoverBackgroundColor","scales","yAxes","ticks","xAxes","SelectCase","InputLabel","Select","labelId","defaultValue","setCases","target","MenuItem","SelectPeriod","period","setPeriod","setDates","subtract","setCountries","dates","countrySelect","getCovidData","toLowerCase","includes","tmp","SortCountries","top","margin","NotFound","App","Provider","exact","path","component","MapComponent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e0e94275.chunk.js","sourcesContent":["export const country_list = [\n  {\n    \"timezones\": [\n      \"America/Aruba\"\n    ],\n    \"lat\": 12.5,\n    \"lon\": -69.96666666,\n    \"name\": \"Aruba\",\n    \"code\": \"AW\",\n    \"capital\": \"Oranjestad\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Kabul\"\n    ],\n    \"lat\": 33,\n    \"lon\": 65,\n    \"name\": \"Afghanistan\",\n    \"code\": \"AF\",\n    \"capital\": \"Kabul\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Luanda\"\n    ],\n    \"lat\": 12.5,\n    \"lon\": 18.5,\n    \"name\": \"Angola\",\n    \"code\": \"AO\",\n    \"capital\": \"Luanda\"\n  },\n  {\n    \"timezones\": [\n      \"America/Anguilla\"\n    ],\n    \"lat\": 18.25,\n    \"lon\": -63.16666666,\n    \"name\": \"Anguilla\",\n    \"code\": \"AI\",\n    \"capital\": \"The Valley\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Mariehamn\"\n    ],\n    \"lat\": 60.116667,\n    \"lon\": 19.9,\n    \"name\": \"\\u00c5land Islands\",\n    \"code\": \"AX\",\n    \"capital\": \"Mariehamn\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Tirane\"\n    ],\n    \"lat\": 41,\n    \"lon\": 20,\n    \"name\": \"Albania\",\n    \"code\": \"AL\",\n    \"capital\": \"Tirana\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Andorra\"\n    ],\n    \"lat\": 42.5,\n    \"lon\": 1.5,\n    \"name\": \"Andorra\",\n    \"code\": \"AD\",\n    \"capital\": \"Andorra la Vella\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Dubai\"\n    ],\n    \"lat\": 24,\n    \"lon\": 54,\n    \"name\": \"United Arab Emirates\",\n    \"code\": \"AE\",\n    \"capital\": \"Abu Dhabi\"\n  },\n  {\n    \"timezones\": [\n      \"America/Argentina/Buenos_Aires\",\n      \"America/Argentina/Cordoba\",\n      \"America/Argentina/Salta\",\n      \"America/Argentina/Jujuy\",\n      \"America/Argentina/Tucuman\",\n      \"America/Argentina/Catamarca\",\n      \"America/Argentina/La_Rioja\",\n      \"America/Argentina/San_Juan\",\n      \"America/Argentina/Mendoza\",\n      \"America/Argentina/San_Luis\",\n      \"America/Argentina/Rio_Gallegos\",\n      \"America/Argentina/Ushuaia\"\n    ],\n    \"lon\": -58.3816, \"lat\": -34.6037,\n    \"name\": \"Argentina\",\n    \"code\": \"AR\",\n    \"capital\": \"Buenos Aires\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Yerevan\"\n    ],\n    \"lat\": 40,\n    \"lon\": 45,\n    \"name\": \"Armenia\",\n    \"code\": \"AM\",\n    \"capital\": \"Yerevan\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Pago_Pago\"\n    ],\n    \"lat\": 14.33333333,\n    \"lon\": -170,\n    \"name\": \"American Samoa\",\n    \"code\": \"AS\",\n    \"capital\": \"Pago Pago\"\n  },\n  {\n    \"timezones\": [\n      \"Antarctica/McMurdo\",\n      \"Antarctica/Casey\",\n      \"Antarctica/Davis\",\n      \"Antarctica/DumontDUrville\",\n      \"Antarctica/Mawson\",\n      \"Antarctica/Palmer\",\n      \"Antarctica/Rothera\",\n      \"Antarctica/Syowa\",\n      \"Antarctica/Troll\",\n      \"Antarctica/Vostok\"\n    ],\n    \"lat\": 90,\n    \"lon\": 0,\n    \"name\": \"Antarctica\",\n    \"code\": \"AQ\",\n    \"capital\": null\n  },\n  {\n    \"timezones\": [\n      \"Indian/Kerguelen\"\n    ],\n    \"lat\": 49.25,\n    \"lon\": 69.167,\n    \"name\": \"French Southern and Antarctic Lands\",\n    \"code\": \"TF\",\n    \"capital\": \"Port-aux-Fran\\u00e7ais\"\n  },\n  {\n    \"timezones\": [\n      \"America/Antigua\"\n    ],\n    \"lat\": 17.05,\n    \"lon\": -61.8,\n    \"name\": \"Antigua and Barbuda\",\n    \"code\": \"AG\",\n    \"capital\": \"Saint John's\"\n  },\n  {\n    \"timezones\": [\n      \"Australia/Lord_Howe\",\n      \"Antarctica/Macquarie\",\n      \"Australia/Hobart\",\n      \"Australia/Currie\",\n      \"Australia/Melbourne\",\n      \"Australia/Sydney\",\n      \"Australia/Broken_Hill\",\n      \"Australia/Brisbane\",\n      \"Australia/Lindeman\",\n      \"Australia/Adelaide\",\n      \"Australia/Darwin\",\n      \"Australia/Perth\",\n      \"Australia/Eucla\"\n    ],\n    \"lat\": 27,\n    \"lon\": 133,\n    \"name\": \"Australia\",\n    \"code\": \"AU\",\n    \"capital\": \"Canberra\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Vienna\"\n    ],\n    \"lat\": 47.33333333,\n    \"lon\": 13.33333333,\n    \"name\": \"Austria\",\n    \"code\": \"AT\",\n    \"capital\": \"Vienna\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Baku\"\n    ],\n    \"lat\": 40.5,\n    \"lon\": 47.5,\n    \"name\": \"Azerbaijan\",\n    \"code\": \"AZ\",\n    \"capital\": \"Baku\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Bujumbura\"\n    ],\n    \"lat\": 3.5,\n    \"lon\": 30,\n    \"name\": \"Burundi\",\n    \"code\": \"BI\",\n    \"capital\": \"Bujumbura\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Brussels\"\n    ],\n    \"lat\": 50.83333333,\n    \"lon\": 4,\n    \"name\": \"Belgium\",\n    \"code\": \"BE\",\n    \"capital\": \"Brussels\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Porto-Novo\"\n    ],\n    \"lat\": 9.5,\n    \"lon\": 2.25,\n    \"name\": \"Benin\",\n    \"code\": \"BJ\",\n    \"capital\": \"Porto-Novo\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Ouagadougou\"\n    ],\n    \"lat\": 13,\n    \"lon\": -2,\n    \"name\": \"Burkina Faso\",\n    \"code\": \"BF\",\n    \"capital\": \"Ouagadougou\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Dhaka\"\n    ],\n    \"lat\": 24,\n    \"lon\": 90,\n    \"name\": \"Bangladesh\",\n    \"code\": \"BD\",\n    \"capital\": \"Dhaka\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Sofia\"\n    ],\n    \"lat\": 43,\n    \"lon\": 25,\n    \"name\": \"Bulgaria\",\n    \"code\": \"BG\",\n    \"capital\": \"Sofia\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Bahrain\"\n    ],\n    \"lat\": 26,\n    \"lon\": 50.55,\n    \"name\": \"Bahrain\",\n    \"code\": \"BH\",\n    \"capital\": \"Manama\"\n  },\n  {\n    \"timezones\": [\n      \"America/Nassau\"\n    ],\n    \"lat\": 24.25,\n    \"lon\": -76,\n    \"name\": \"Bahamas\",\n    \"code\": \"BS\",\n    \"capital\": \"Nassau\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Sarajevo\"\n    ],\n    \"lat\": 44,\n    \"lon\": 18,\n    \"name\": \"Bosnia and Herzegovina\",\n    \"code\": \"BA\",\n    \"capital\": \"Sarajevo\"\n  },\n  {\n    \"timezones\": [\n      \"America/St_Barthelemy\"\n    ],\n    \"lat\": 18.5,\n    \"lon\": -63.41666666,\n    \"name\": \"Saint Barth\\u00e9lemy\",\n    \"code\": \"BL\",\n    \"capital\": \"Gustavia\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Minsk\"\n    ],\n    \"lat\": 53,\n    \"lon\": 28,\n    \"name\": \"Belarus\",\n    \"code\": \"BY\",\n    \"capital\": \"Minsk\"\n  },\n  {\n    \"timezones\": [\n      \"America/Belize\"\n    ],\n    \"lat\": 17.25,\n    \"lon\": -88.75,\n    \"name\": \"Belize\",\n    \"code\": \"BZ\",\n    \"capital\": \"Belmopan\"\n  },\n  {\n    \"timezones\": [\n      \"Atlantic/Bermuda\"\n    ],\n    \"lat\": 32.33333333,\n    \"lon\": -64.75,\n    \"name\": \"Bermuda\",\n    \"code\": \"BM\",\n    \"capital\": \"Hamilton\"\n  },\n  {\n    \"timezones\": [\n      \"America/La_Paz\"\n    ],\n    \"lon\": -68.1193, \"lat\": -16.4897,\n    \"name\": \"Bolivia\",\n    \"code\": \"BO\",\n    \"capital\": \"Sucre\"\n  },\n  {\n    \"timezones\": [\n      \"America/Noronha\",\n      \"America/Belem\",\n      \"America/Fortaleza\",\n      \"America/Recife\",\n      \"America/Araguaina\",\n      \"America/Maceio\",\n      \"America/Bahia\",\n      \"America/Sao_Paulo\",\n      \"America/Campo_Grande\",\n      \"America/Cuiaba\",\n      \"America/Santarem\",\n      \"America/Porto_Velho\",\n      \"America/Boa_Vista\",\n      \"America/Manaus\",\n      \"America/Eirunepe\",\n      \"America/Rio_Branco\"\n    ],\n    \"lat\": -34.6037,\n    \"lon\": -58.3816,\n    \"name\": \"Brazil\",\n    \"code\": \"BR\",\n    \"capital\": \"Bras\\u00edlia\"\n  },\n  {\n    \"timezones\": [\n      \"America/Barbados\"\n    ],\n    \"lat\": 13.16666666,\n    \"lon\": -59.53333333,\n    \"name\": \"Barbados\",\n    \"code\": \"BB\",\n    \"capital\": \"Bridgetown\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Brunei\"\n    ],\n    \"lat\": 4.5,\n    \"lon\": 114.66666666,\n    \"name\": \"Brunei\",\n    \"code\": \"BN\",\n    \"capital\": \"Bandar Seri Begawan\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Thimphu\"\n    ],\n    \"lat\": 27.5,\n    \"lon\": 90.5,\n    \"name\": \"Bhutan\",\n    \"code\": \"BT\",\n    \"capital\": \"Thimphu\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Oslo\"\n    ],\n    \"lat\": 54.43333333,\n    \"lon\": 3.4,\n    \"name\": \"Bouvet Island\",\n    \"code\": \"BV\",\n    \"capital\": null\n  },\n  {\n    \"timezones\": [\n      \"Africa/Gaborone\"\n    ],\n    \"lat\": 22,\n    \"lon\": 24,\n    \"name\": \"Botswana\",\n    \"code\": \"BW\",\n    \"capital\": \"Gaborone\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Bangui\"\n    ],\n    \"lat\": 7,\n    \"lon\": 21,\n    \"name\": \"Central African Republic\",\n    \"code\": \"CF\",\n    \"capital\": \"Bangui\"\n  },\n  {\n    \"timezones\": [\n      \"America/St_Johns\",\n      \"America/Halifax\",\n      \"America/Glace_Bay\",\n      \"America/Moncton\",\n      \"America/Goose_Bay\",\n      \"America/Blanc-Sablon\",\n      \"America/Toronto\",\n      \"America/Nipigon\",\n      \"America/Thunder_Bay\",\n      \"America/Iqaluit\",\n      \"America/Pangnirtung\",\n      \"America/Atikokan\",\n      \"America/Winnipeg\",\n      \"America/Rainy_River\",\n      \"America/Resolute\",\n      \"America/Rankin_Inlet\",\n      \"America/Regina\",\n      \"America/Swift_Current\",\n      \"America/Edmonton\",\n      \"America/Cambridge_Bay\",\n      \"America/Yellowknife\",\n      \"America/Inuvik\",\n      \"America/Creston\",\n      \"America/Dawson_Creek\",\n      \"America/Fort_Nelson\",\n      \"America/Vancouver\",\n      \"America/Whitehorse\",\n      \"America/Dawson\"\n    ],\n    \"lat\": 60,\n    \"lon\": -95,\n    \"name\": \"Canada\",\n    \"code\": \"CA\",\n    \"capital\": \"Ottawa\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Cocos\"\n    ],\n    \"lat\": 12.5,\n    \"lon\": 96.83333333,\n    \"name\": \"Cocos (Keeling) Islands\",\n    \"code\": \"CC\",\n    \"capital\": \"West Island\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Zurich\"\n    ],\n    \"lat\": 47,\n    \"lon\": 8,\n    \"name\": \"Switzerland\",\n    \"code\": \"CH\",\n    \"capital\": \"Bern\"\n  },\n  {\n    \"timezones\": [\n      \"America/Santiago\",\n      \"Pacific/Easter\"\n    ],\n    \"lon\": -70.6693, \"lat\": -33.4489,\n    \"name\": \"Chile\",\n    \"code\": \"CL\",\n    \"capital\": \"Santiago\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Shanghai\",\n      \"Asia/Urumqi\"\n    ],\n    \"lat\": 35,\n    \"lon\": 105,\n    \"name\": \"China\",\n    \"code\": \"CN\",\n    \"capital\": \"Beijing\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Abidjan\"\n    ],\n    \"lat\": 8,\n    \"lon\": -5,\n    \"name\": \"Ivory Coast\",\n    \"code\": \"CI\",\n    \"capital\": \"Yamoussoukro\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Douala\"\n    ],\n    \"lat\": 6,\n    \"lon\": 12,\n    \"name\": \"Cameroon\",\n    \"code\": \"CM\",\n    \"capital\": \"Yaound\\u00e9\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Kinshasa\",\n      \"Africa/Lubumbashi\"\n    ],\n    \"lat\": 0,\n    \"lon\": 25,\n    \"name\": \"DR Congo\",\n    \"code\": \"CD\",\n    \"capital\": \"Kinshasa\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Brazzaville\"\n    ],\n    \"lat\": 1,\n    \"lon\": 15,\n    \"name\": \"Republic of the Congo\",\n    \"code\": \"CG\",\n    \"capital\": \"Brazzaville\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Rarotonga\"\n    ],\n    \"lat\": 21.23333333,\n    \"lon\": -159.76666666,\n    \"name\": \"Cook Islands\",\n    \"code\": \"CK\",\n    \"capital\": \"Avarua\"\n  },\n  {\n    \"timezones\": [\n      \"America/Bogota\"\n    ],\n    \"lon\": -74.0721, \"lat\": 4.711,\n    \"name\": \"Colombia\",\n    \"code\": \"CO\",\n    \"capital\": \"Bogot\\u00e1\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Comoro\"\n    ],\n    \"lat\": 12.16666666,\n    \"lon\": 44.25,\n    \"name\": \"Comoros\",\n    \"code\": \"KM\",\n    \"capital\": \"Moroni\"\n  },\n  {\n    \"timezones\": [\n      \"Atlantic/Cape_Verde\"\n    ],\n    \"lat\": 16,\n    \"lon\": -24,\n    \"name\": \"Cape Verde\",\n    \"code\": \"CV\",\n    \"capital\": \"Praia\"\n  },\n  {\n    \"timezones\": [\n      \"America/Costa_Rica\"\n    ],\n    \"lat\": 10,\n    \"lon\": -84,\n    \"name\": \"Costa Rica\",\n    \"code\": \"CR\",\n    \"capital\": \"San Jos\\u00e9\"\n  },\n  {\n    \"timezones\": [\n      \"America/Havana\"\n    ],\n    \"lat\": 21.5,\n    \"lon\": -80,\n    \"name\": \"Cuba\",\n    \"code\": \"CU\",\n    \"capital\": \"Havana\"\n  },\n  {\n    \"timezones\": [\n      \"America/Curacao\"\n    ],\n    \"lat\": 12.116667,\n    \"lon\": -68.933333,\n    \"name\": \"Cura\\u00e7ao\",\n    \"code\": \"CW\",\n    \"capital\": \"Willemstad\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Christmas\"\n    ],\n    \"lat\": 10.5,\n    \"lon\": 105.66666666,\n    \"name\": \"Christmas Island\",\n    \"code\": \"CX\",\n    \"capital\": \"Flying Fish Cove\"\n  },\n  {\n    \"timezones\": [\n      \"America/Cayman\"\n    ],\n    \"lat\": 19.5,\n    \"lon\": -80.5,\n    \"name\": \"Cayman Islands\",\n    \"code\": \"KY\",\n    \"capital\": \"George Town\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Nicosia\"\n    ],\n    \"lat\": 35,\n    \"lon\": 33,\n    \"name\": \"Cyprus\",\n    \"code\": \"CY\",\n    \"capital\": \"Nicosia\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Prague\"\n    ],\n    \"lat\": 49.75,\n    \"lon\": 15.5,\n    \"name\": \"Czech Republic\",\n    \"code\": \"CZ\",\n    \"capital\": \"Prague\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Berlin\",\n      \"Europe/Busingen\"\n    ],\n    \"lat\": 51,\n    \"lon\": 9,\n    \"name\": \"Germany\",\n    \"code\": \"DE\",\n    \"capital\": \"Berlin\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Djibouti\"\n    ],\n    \"lat\": 11.5,\n    \"lon\": 43,\n    \"name\": \"Djibouti\",\n    \"code\": \"DJ\",\n    \"capital\": \"Djibouti\"\n  },\n  {\n    \"timezones\": [\n      \"America/Dominica\"\n    ],\n    \"lat\": 15.41666666,\n    \"lon\": -61.33333333,\n    \"name\": \"Dominica\",\n    \"code\": \"DM\",\n    \"capital\": \"Roseau\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Copenhagen\"\n    ],\n    \"lat\": 56,\n    \"lon\": 10,\n    \"name\": \"Denmark\",\n    \"code\": \"DK\",\n    \"capital\": \"Copenhagen\"\n  },\n  {\n    \"timezones\": [\n      \"America/Santo_Domingo\"\n    ],\n    \"lat\": 19,\n    \"lon\": -70.66666666,\n    \"name\": \"Dominican Republic\",\n    \"code\": \"DO\",\n    \"capital\": \"Santo Domingo\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Algiers\"\n    ],\n    \"lat\": 28,\n    \"lon\": 3,\n    \"name\": \"Algeria\",\n    \"code\": \"DZ\",\n    \"capital\": \"Algiers\"\n  },\n  {\n    \"timezones\": [\n      \"America/Guayaquil\",\n      \"Pacific/Galapagos\"\n    ],\n    \"lon\": -78.4678, \"lat\": -0.1807,\n    \"name\": \"Ecuador\",\n    \"code\": \"EC\",\n    \"capital\": \"Quito\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Cairo\"\n    ],\n    \"lat\": 27,\n    \"lon\": 30,\n    \"name\": \"Egypt\",\n    \"code\": \"EG\",\n    \"capital\": \"Cairo\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Asmara\"\n    ],\n    \"lat\": 15,\n    \"lon\": 39,\n    \"name\": \"Eritrea\",\n    \"code\": \"ER\",\n    \"capital\": \"Asmara\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/El_Aaiun\"\n    ],\n    \"lat\": 24.5,\n    \"lon\": -13,\n    \"name\": \"Western Sahara\",\n    \"code\": \"EH\",\n    \"capital\": \"El Aai\\u00fan\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Madrid\",\n      \"Africa/Ceuta\",\n      \"Atlantic/Canary\"\n    ],\n    \"lat\": 40,\n    \"lon\": -4,\n    \"name\": \"Spain\",\n    \"code\": \"ES\",\n    \"capital\": \"Madrid\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Tallinn\"\n    ],\n    \"lat\": 59,\n    \"lon\": 26,\n    \"name\": \"Estonia\",\n    \"code\": \"EE\",\n    \"capital\": \"Tallinn\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Addis_Ababa\"\n    ],\n    \"lat\": 8,\n    \"lon\": 38,\n    \"name\": \"Ethiopia\",\n    \"code\": \"ET\",\n    \"capital\": \"Addis Ababa\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Helsinki\"\n    ],\n    \"lat\": 64,\n    \"lon\": 26,\n    \"name\": \"Finland\",\n    \"code\": \"FI\",\n    \"capital\": \"Helsinki\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Fiji\"\n    ],\n    \"lat\": 18,\n    \"lon\": 175,\n    \"name\": \"Fiji\",\n    \"code\": \"FJ\",\n    \"capital\": \"Suva\"\n  },\n  {\n    \"timezones\": [\n      \"Atlantic/Stanley\"\n    ],\n    \"lat\": 51.75,\n    \"lon\": -59,\n    \"name\": \"Falkland Islands\",\n    \"code\": \"FK\",\n    \"capital\": \"Stanley\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Paris\"\n    ],\n    \"lat\": 46,\n    \"lon\": 2,\n    \"name\": \"France\",\n    \"code\": \"FR\",\n    \"capital\": \"Paris\"\n  },\n  {\n    \"timezones\": [\n      \"Atlantic/Faroe\"\n    ],\n    \"lat\": 62,\n    \"lon\": -7,\n    \"name\": \"Faroe Islands\",\n    \"code\": \"FO\",\n    \"capital\": \"T\\u00f3rshavn\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Chuuk\",\n      \"Pacific/Pohnpei\",\n      \"Pacific/Kosrae\"\n    ],\n    \"lat\": 6.91666666,\n    \"lon\": 158.25,\n    \"name\": \"Micronesia\",\n    \"code\": \"FM\",\n    \"capital\": \"Palikir\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Libreville\"\n    ],\n    \"lat\": 1,\n    \"lon\": 11.75,\n    \"name\": \"Gabon\",\n    \"code\": \"GA\",\n    \"capital\": \"Libreville\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/London\"\n    ],\n    \"lat\": 54,\n    \"lon\": -2,\n    \"name\": \"United Kingdom\",\n    \"code\": \"GB\",\n    \"capital\": \"London\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Tbilisi\"\n    ],\n    \"lat\": 42,\n    \"lon\": 43.5,\n    \"name\": \"Georgia\",\n    \"code\": \"GE\",\n    \"capital\": \"Tbilisi\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Guernsey\"\n    ],\n    \"lat\": 49.46666666,\n    \"lon\": -2.58333333,\n    \"name\": \"Guernsey\",\n    \"code\": \"GG\",\n    \"capital\": \"St. Peter Port\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Accra\"\n    ],\n    \"lat\": 8,\n    \"lon\": -2,\n    \"name\": \"Ghana\",\n    \"code\": \"GH\",\n    \"capital\": \"Accra\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Gibraltar\"\n    ],\n    \"lat\": 36.13333333,\n    \"lon\": -5.35,\n    \"name\": \"Gibraltar\",\n    \"code\": \"GI\",\n    \"capital\": \"Gibraltar\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Conakry\"\n    ],\n    \"lat\": 11,\n    \"lon\": -10,\n    \"name\": \"Guinea\",\n    \"code\": \"GN\",\n    \"capital\": \"Conakry\"\n  },\n  {\n    \"timezones\": [\n      \"America/Guadeloupe\"\n    ],\n    \"lat\": 16.25,\n    \"lon\": -61.583333,\n    \"name\": \"Guadeloupe\",\n    \"code\": \"GP\",\n    \"capital\": \"Basse-Terre\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Banjul\"\n    ],\n    \"lat\": 13.46666666,\n    \"lon\": -16.56666666,\n    \"name\": \"Gambia\",\n    \"code\": \"GM\",\n    \"capital\": \"Banjul\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Bissau\"\n    ],\n    \"lat\": 12,\n    \"lon\": -15,\n    \"name\": \"Guinea-Bissau\",\n    \"code\": \"GW\",\n    \"capital\": \"Bissau\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Malabo\"\n    ],\n    \"lat\": 2,\n    \"lon\": 10,\n    \"name\": \"Equatorial Guinea\",\n    \"code\": \"GQ\",\n    \"capital\": \"Malabo\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Athens\"\n    ],\n    \"lat\": 39,\n    \"lon\": 22,\n    \"name\": \"Greece\",\n    \"code\": \"GR\",\n    \"capital\": \"Athens\"\n  },\n  {\n    \"timezones\": [\n      \"America/Grenada\"\n    ],\n    \"lat\": 12.11666666,\n    \"lon\": -61.66666666,\n    \"name\": \"Grenada\",\n    \"code\": \"GD\",\n    \"capital\": \"St. George's\"\n  },\n  {\n    \"timezones\": [\n      \"America/Godthab\",\n      \"America/Danmarkshavn\",\n      \"America/Scoresbysund\",\n      \"America/Thule\"\n    ],\n    \"lat\": 72,\n    \"lon\": -40,\n    \"name\": \"Greenland\",\n    \"code\": \"GL\",\n    \"capital\": \"Nuuk\"\n  },\n  {\n    \"timezones\": [\n      \"America/Guatemala\"\n    ],\n    \"lat\": 15.5,\n    \"lon\": -90.25,\n    \"name\": \"Guatemala\",\n    \"code\": \"GT\",\n    \"capital\": \"Guatemala City\"\n  },\n  {\n    \"timezones\": [\n      \"America/Cayenne\"\n    ],\n    \"lat\": 4,\n    \"lon\": -53,\n    \"name\": \"French Guiana\",\n    \"code\": \"GF\",\n    \"capital\": \"Cayenne\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Guam\"\n    ],\n    \"lat\": 13.46666666,\n    \"lon\": 144.78333333,\n    \"name\": \"Guam\",\n    \"code\": \"GU\",\n    \"capital\": \"Hag\\u00e5t\\u00f1a\"\n  },\n  {\n    \"timezones\": [\n      \"America/Guyana\"\n    ],\n    \"lon\": -58.1551, \"lat\": 6.8013,\n    \"name\": \"Guyana\",\n    \"code\": \"GY\",\n    \"capital\": \"Georgetown\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Hong_Kong\"\n    ],\n    \"lat\": 22.267,\n    \"lon\": 114.188,\n    \"name\": \"Hong Kong\",\n    \"code\": \"HK\",\n    \"capital\": \"City of Victoria\"\n  },\n  {\n    \"timezones\": [\n      \"America/Tegucigalpa\"\n    ],\n    \"lat\": 15,\n    \"lon\": -86.5,\n    \"name\": \"Honduras\",\n    \"code\": \"HN\",\n    \"capital\": \"Tegucigalpa\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Zagreb\"\n    ],\n    \"lat\": 45.16666666,\n    \"lon\": 15.5,\n    \"name\": \"Croatia\",\n    \"code\": \"HR\",\n    \"capital\": \"Zagreb\"\n  },\n  {\n    \"timezones\": [\n      \"America/Port-au-Prince\"\n    ],\n    \"lat\": 19,\n    \"lon\": -72.41666666,\n    \"name\": \"Haiti\",\n    \"code\": \"HT\",\n    \"capital\": \"Port-au-Prince\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Budapest\"\n    ],\n    \"lat\": 47,\n    \"lon\": 20,\n    \"name\": \"Hungary\",\n    \"code\": \"HU\",\n    \"capital\": \"Budapest\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Jakarta\",\n      \"Asia/Pontianak\",\n      \"Asia/Makassar\",\n      \"Asia/Jayapura\"\n    ],\n    \"lat\": 5,\n    \"lon\": 120,\n    \"name\": \"Indonesia\",\n    \"code\": \"ID\",\n    \"capital\": \"Jakarta\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Isle_of_Man\"\n    ],\n    \"lat\": 54.25,\n    \"lon\": -4.5,\n    \"name\": \"Isle of Man\",\n    \"code\": \"IM\",\n    \"capital\": \"Douglas\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Kolkata\"\n    ],\n    \"lat\": 20,\n    \"lon\": 77,\n    \"name\": \"India\",\n    \"code\": \"IN\",\n    \"capital\": \"New Delhi\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Chagos\"\n    ],\n    \"lat\": 6,\n    \"lon\": 71.5,\n    \"name\": \"British Indian Ocean Territory\",\n    \"code\": \"IO\",\n    \"capital\": \"Diego Garcia\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Dublin\"\n    ],\n    \"lat\": 53,\n    \"lon\": -8,\n    \"name\": \"Ireland\",\n    \"code\": \"IE\",\n    \"capital\": \"Dublin\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Tehran\"\n    ],\n    \"lat\": 32,\n    \"lon\": 53,\n    \"name\": \"Iran\",\n    \"code\": \"IR\",\n    \"capital\": \"Tehran\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Baghdad\"\n    ],\n    \"lat\": 33,\n    \"lon\": 44,\n    \"name\": \"Iraq\",\n    \"code\": \"IQ\",\n    \"capital\": \"Baghdad\"\n  },\n  {\n    \"timezones\": [\n      \"Atlantic/Reykjavik\"\n    ],\n    \"lat\": 65,\n    \"lon\": -18,\n    \"name\": \"Iceland\",\n    \"code\": \"IS\",\n    \"capital\": \"Reykjavik\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Jerusalem\"\n    ],\n    \"lat\": 31.47,\n    \"lon\": 35.13,\n    \"name\": \"Israel\",\n    \"code\": \"IL\",\n    \"capital\": \"Jerusalem\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Rome\"\n    ],\n    \"lat\": 42.83333333,\n    \"lon\": 12.83333333,\n    \"name\": \"Italy\",\n    \"code\": \"IT\",\n    \"capital\": \"Rome\"\n  },\n  {\n    \"timezones\": [\n      \"America/Jamaica\"\n    ],\n    \"lat\": 18.25,\n    \"lon\": -77.5,\n    \"name\": \"Jamaica\",\n    \"code\": \"JM\",\n    \"capital\": \"Kingston\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Jersey\"\n    ],\n    \"lat\": 49.25,\n    \"lon\": -2.16666666,\n    \"name\": \"Jersey\",\n    \"code\": \"JE\",\n    \"capital\": \"Saint Helier\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Amman\"\n    ],\n    \"lat\": 31,\n    \"lon\": 36,\n    \"name\": \"Jordan\",\n    \"code\": \"JO\",\n    \"capital\": \"Amman\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Tokyo\"\n    ],\n    \"lat\": 36,\n    \"lon\": 138,\n    \"name\": \"Japan\",\n    \"code\": \"JP\",\n    \"capital\": \"Tokyo\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Almaty\",\n      \"Asia/Qyzylorda\",\n      \"Asia/Aqtobe\",\n      \"Asia/Aqtau\",\n      \"Asia/Oral\"\n    ],\n    \"lat\": 48,\n    \"lon\": 68,\n    \"name\": \"Kazakhstan\",\n    \"code\": \"KZ\",\n    \"capital\": \"Astana\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Nairobi\"\n    ],\n    \"lat\": 1,\n    \"lon\": 38,\n    \"name\": \"Kenya\",\n    \"code\": \"KE\",\n    \"capital\": \"Nairobi\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Bishkek\"\n    ],\n    \"lat\": 41,\n    \"lon\": 75,\n    \"name\": \"Kyrgyzstan\",\n    \"code\": \"KG\",\n    \"capital\": \"Bishkek\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Phnom_Penh\"\n    ],\n    \"lat\": 13,\n    \"lon\": 105,\n    \"name\": \"Cambodia\",\n    \"code\": \"KH\",\n    \"capital\": \"Phnom Penh\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Tarawa\",\n      \"Pacific/Enderbury\",\n      \"Pacific/Kiritimati\"\n    ],\n    \"lat\": 1.41666666,\n    \"lon\": 173,\n    \"name\": \"Kiribati\",\n    \"code\": \"KI\",\n    \"capital\": \"South Tarawa\"\n  },\n  {\n    \"timezones\": [\n      \"America/St_Kitts\"\n    ],\n    \"lat\": 17.33333333,\n    \"lon\": -62.75,\n    \"name\": \"Saint Kitts and Nevis\",\n    \"code\": \"KN\",\n    \"capital\": \"Basseterre\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Seoul\"\n    ],\n    \"lat\": 37,\n    \"lon\": 127.5,\n    \"name\": \"South Korea\",\n    \"code\": \"KR\",\n    \"capital\": \"Seoul\"\n  },\n  {\n    \"timezones\": [\"Europe/Belgrade\"],\n    \"lat\": 42.666667,\n    \"lon\": 21.166667,\n    \"name\": \"Kosovo\",\n    \"code\": \"XK\",\n    \"capital\": \"Pristina\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Kuwait\"\n    ],\n    \"lat\": 29.5,\n    \"lon\": 45.75,\n    \"name\": \"Kuwait\",\n    \"code\": \"KW\",\n    \"capital\": \"Kuwait City\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Vientiane\"\n    ],\n    \"lat\": 18,\n    \"lon\": 105,\n    \"name\": \"Laos\",\n    \"code\": \"LA\",\n    \"capital\": \"Vientiane\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Beirut\"\n    ],\n    \"lat\": 33.83333333,\n    \"lon\": 35.83333333,\n    \"name\": \"Lebanon\",\n    \"code\": \"LB\",\n    \"capital\": \"Beirut\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Monrovia\"\n    ],\n    \"lat\": 6.5,\n    \"lon\": -9.5,\n    \"name\": \"Liberia\",\n    \"code\": \"LR\",\n    \"capital\": \"Monrovia\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Tripoli\"\n    ],\n    \"lat\": 25,\n    \"lon\": 17,\n    \"name\": \"Libya\",\n    \"code\": \"LY\",\n    \"capital\": \"Tripoli\"\n  },\n  {\n    \"timezones\": [\n      \"America/St_Lucia\"\n    ],\n    \"lat\": 13.88333333,\n    \"lon\": -60.96666666,\n    \"name\": \"Saint Lucia\",\n    \"code\": \"LC\",\n    \"capital\": \"Castries\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Vaduz\"\n    ],\n    \"lat\": 47.26666666,\n    \"lon\": 9.53333333,\n    \"name\": \"Liechtenstein\",\n    \"code\": \"LI\",\n    \"capital\": \"Vaduz\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Colombo\"\n    ],\n    \"lat\": 7,\n    \"lon\": 81,\n    \"name\": \"Sri Lanka\",\n    \"code\": \"LK\",\n    \"capital\": \"Colombo\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Maseru\"\n    ],\n    \"lat\": 29.5,\n    \"lon\": 28.5,\n    \"name\": \"Lesotho\",\n    \"code\": \"LS\",\n    \"capital\": \"Maseru\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Vilnius\"\n    ],\n    \"lat\": 56,\n    \"lon\": 24,\n    \"name\": \"Lithuania\",\n    \"code\": \"LT\",\n    \"capital\": \"Vilnius\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Luxembourg\"\n    ],\n    \"lat\": 49.75,\n    \"lon\": 6.16666666,\n    \"name\": \"Luxembourg\",\n    \"code\": \"LU\",\n    \"capital\": \"Luxembourg\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Riga\"\n    ],\n    \"lat\": 57,\n    \"lon\": 25,\n    \"name\": \"Latvia\",\n    \"code\": \"LV\",\n    \"capital\": \"Riga\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Macau\"\n    ],\n    \"lat\": 22.16666666,\n    \"lon\": 113.55,\n    \"name\": \"Macau\",\n    \"code\": \"MO\",\n    \"capital\": null\n  },\n  {\n    \"timezones\": [\n      \"America/Marigot\"\n    ],\n    \"lat\": 18.08333333,\n    \"lon\": -63.95,\n    \"name\": \"Saint Martin\",\n    \"code\": \"MF\",\n    \"capital\": \"Marigot\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Casablanca\"\n    ],\n    \"lat\": 32,\n    \"lon\": -5,\n    \"name\": \"Morocco\",\n    \"code\": \"MA\",\n    \"capital\": \"Rabat\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Monaco\"\n    ],\n    \"lat\": 43.73333333,\n    \"lon\": 7.4,\n    \"name\": \"Monaco\",\n    \"code\": \"MC\",\n    \"capital\": \"Monaco\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Chisinau\"\n    ],\n    \"lat\": 47,\n    \"lon\": 29,\n    \"name\": \"Moldova\",\n    \"code\": \"MD\",\n    \"capital\": \"Chi\\u0219in\\u0103u\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Antananarivo\"\n    ],\n    \"lat\": 20,\n    \"lon\": 47,\n    \"name\": \"Madagascar\",\n    \"code\": \"MG\",\n    \"capital\": \"Antananarivo\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Maldives\"\n    ],\n    \"lat\": 3.25,\n    \"lon\": 73,\n    \"name\": \"Maldives\",\n    \"code\": \"MV\",\n    \"capital\": \"Mal\\u00e9\"\n  },\n  {\n    \"timezones\": [\n      \"America/Mexico_City\",\n      \"America/Cancun\",\n      \"America/Merida\",\n      \"America/Monterrey\",\n      \"America/Matamoros\",\n      \"America/Mazatlan\",\n      \"America/Chihuahua\",\n      \"America/Ojinaga\",\n      \"America/Hermosillo\",\n      \"America/Tijuana\",\n      \"America/Bahia_Banderas\"\n    ],\n    \"lat\": 23,\n    \"lon\": -102,\n    \"name\": \"Mexico\",\n    \"code\": \"MX\",\n    \"capital\": \"Mexico City\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Majuro\",\n      \"Pacific/Kwajalein\"\n    ],\n    \"lat\": 9,\n    \"lon\": 168,\n    \"name\": \"Marshall Islands\",\n    \"code\": \"MH\",\n    \"capital\": \"Majuro\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Skopje\"\n    ],\n    \"lat\": 41.83333333,\n    \"lon\": 22,\n    \"name\": \"Macedonia\",\n    \"code\": \"MK\",\n    \"capital\": \"Skopje\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Bamako\"\n    ],\n    \"lat\": 17,\n    \"lon\": -4,\n    \"name\": \"Mali\",\n    \"code\": \"ML\",\n    \"capital\": \"Bamako\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Malta\"\n    ],\n    \"lat\": 35.83333333,\n    \"lon\": 14.58333333,\n    \"name\": \"Malta\",\n    \"code\": \"MT\",\n    \"capital\": \"Valletta\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Rangoon\"\n    ],\n    \"lat\": 22,\n    \"lon\": 98,\n    \"name\": \"Myanmar\",\n    \"code\": \"MM\",\n    \"capital\": \"Naypyidaw\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Podgorica\"\n    ],\n    \"lat\": 42.5,\n    \"lon\": 19.3,\n    \"name\": \"Montenegro\",\n    \"code\": \"ME\",\n    \"capital\": \"Podgorica\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Ulaanbaatar\",\n      \"Asia/Hovd\",\n      \"Asia/Choibalsan\"\n    ],\n    \"lat\": 46,\n    \"lon\": 105,\n    \"name\": \"Mongolia\",\n    \"code\": \"MN\",\n    \"capital\": \"Ulan Bator\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Saipan\"\n    ],\n    \"lat\": 15.2,\n    \"lon\": 145.75,\n    \"name\": \"Northern Mariana Islands\",\n    \"code\": \"MP\",\n    \"capital\": \"Saipan\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Maputo\"\n    ],\n    \"lat\": 18.25,\n    \"lon\": 35,\n    \"name\": \"Mozambique\",\n    \"code\": \"MZ\",\n    \"capital\": \"Maputo\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Nouakchott\"\n    ],\n    \"lat\": 20,\n    \"lon\": -12,\n    \"name\": \"Mauritania\",\n    \"code\": \"MR\",\n    \"capital\": \"Nouakchott\"\n  },\n  {\n    \"timezones\": [\n      \"America/Montserrat\"\n    ],\n    \"lat\": 16.75,\n    \"lon\": -62.2,\n    \"name\": \"Montserrat\",\n    \"code\": \"MS\",\n    \"capital\": \"Plymouth\"\n  },\n  {\n    \"timezones\": [\n      \"America/Martinique\"\n    ],\n    \"lat\": 14.666667,\n    \"lon\": -61,\n    \"name\": \"Martinique\",\n    \"code\": \"MQ\",\n    \"capital\": \"Fort-de-France\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Mauritius\"\n    ],\n    \"lat\": 20.28333333,\n    \"lon\": 57.55,\n    \"name\": \"Mauritius\",\n    \"code\": \"MU\",\n    \"capital\": \"Port Louis\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Blantyre\"\n    ],\n    \"lat\": 13.5,\n    \"lon\": 34,\n    \"name\": \"Malawi\",\n    \"code\": \"MW\",\n    \"capital\": \"Lilongwe\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Kuala_Lumpur\",\n      \"Asia/Kuching\"\n    ],\n    \"lat\": 2.5,\n    \"lon\": 112.5,\n    \"name\": \"Malaysia\",\n    \"code\": \"MY\",\n    \"capital\": \"Kuala Lumpur\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Mayotte\"\n    ],\n    \"lat\": 12.83333333,\n    \"lon\": 45.16666666,\n    \"name\": \"Mayotte\",\n    \"code\": \"YT\",\n    \"capital\": \"Mamoudzou\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Windhoek\"\n    ],\n    \"lat\": 22,\n    \"lon\": 17,\n    \"name\": \"Namibia\",\n    \"code\": \"NA\",\n    \"capital\": \"Windhoek\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Noumea\"\n    ],\n    \"lat\": 21.5,\n    \"lon\": 165.5,\n    \"name\": \"New Caledonia\",\n    \"code\": \"NC\",\n    \"capital\": \"Noum\\u00e9a\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Niamey\"\n    ],\n    \"lat\": 16,\n    \"lon\": 8,\n    \"name\": \"Niger\",\n    \"code\": \"NE\",\n    \"capital\": \"Niamey\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Norfolk\"\n    ],\n    \"lat\": 29.03333333,\n    \"lon\": 167.95,\n    \"name\": \"Norfolk Island\",\n    \"code\": \"NF\",\n    \"capital\": \"Kingston\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Lagos\"\n    ],\n    \"lat\": 10,\n    \"lon\": 8,\n    \"name\": \"Nigeria\",\n    \"code\": \"NG\",\n    \"capital\": \"Abuja\"\n  },\n  {\n    \"timezones\": [\n      \"America/Managua\"\n    ],\n    \"lat\": 13,\n    \"lon\": -85,\n    \"name\": \"Nicaragua\",\n    \"code\": \"NI\",\n    \"capital\": \"Managua\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Niue\"\n    ],\n    \"lat\": 19.03333333,\n    \"lon\": -169.86666666,\n    \"name\": \"Niue\",\n    \"code\": \"NU\",\n    \"capital\": \"Alofi\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Amsterdam\"\n    ],\n    \"lat\": 52.5,\n    \"lon\": 5.75,\n    \"name\": \"Netherlands\",\n    \"code\": \"NL\",\n    \"capital\": \"Amsterdam\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Oslo\"\n    ],\n    \"lat\": 62,\n    \"lon\": 10,\n    \"name\": \"Norway\",\n    \"code\": \"NO\",\n    \"capital\": \"Oslo\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Kathmandu\"\n    ],\n    \"lat\": 28,\n    \"lon\": 84,\n    \"name\": \"Nepal\",\n    \"code\": \"NP\",\n    \"capital\": \"Kathmandu\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Nauru\"\n    ],\n    \"lat\": 0.53333333,\n    \"lon\": 166.91666666,\n    \"name\": \"Nauru\",\n    \"code\": \"NR\",\n    \"capital\": \"Yaren\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Auckland\",\n      \"Pacific/Chatham\"\n    ],\n    \"lat\": 41,\n    \"lon\": 174,\n    \"name\": \"New Zealand\",\n    \"code\": \"NZ\",\n    \"capital\": \"Wellington\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Muscat\"\n    ],\n    \"lat\": 21,\n    \"lon\": 57,\n    \"name\": \"Oman\",\n    \"code\": \"OM\",\n    \"capital\": \"Muscat\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Karachi\"\n    ],\n    \"lat\": 30,\n    \"lon\": 70,\n    \"name\": \"Pakistan\",\n    \"code\": \"PK\",\n    \"capital\": \"Islamabad\"\n  },\n  {\n    \"timezones\": [\n      \"America/Panama\"\n    ],\n    \"lat\": 9,\n    \"lon\": -80,\n    \"name\": \"Panama\",\n    \"code\": \"PA\",\n    \"capital\": \"Panama City\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Pitcairn\"\n    ],\n    \"lat\": 25.06666666,\n    \"lon\": -130.1,\n    \"name\": \"Pitcairn Islands\",\n    \"code\": \"PN\",\n    \"capital\": \"Adamstown\"\n  },\n  {\n    \"timezones\": [\n      \"America/Lima\"\n    ],\n    \"lon\": -77.0428, \"lat\": -12.0464,\n    \"name\": \"Peru\",\n    \"code\": \"PE\",\n    \"capital\": \"Lima\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Manila\"\n    ],\n    \"lat\": 13,\n    \"lon\": 122,\n    \"name\": \"Philippines\",\n    \"code\": \"PH\",\n    \"capital\": \"Manila\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Palau\"\n    ],\n    \"lat\": 7.5,\n    \"lon\": 134.5,\n    \"name\": \"Palau\",\n    \"code\": \"PW\",\n    \"capital\": \"Ngerulmud\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Port_Moresby\",\n      \"Pacific/Bougainville\"\n    ],\n    \"lat\": 6,\n    \"lon\": 147,\n    \"name\": \"Papua New Guinea\",\n    \"code\": \"PG\",\n    \"capital\": \"Port Moresby\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Warsaw\"\n    ],\n    \"lat\": 52,\n    \"lon\": 20,\n    \"name\": \"Poland\",\n    \"code\": \"PL\",\n    \"capital\": \"Warsaw\"\n  },\n  {\n    \"timezones\": [\n      \"America/Puerto_Rico\"\n    ],\n    \"lat\": 18.25,\n    \"lon\": -66.5,\n    \"name\": \"Puerto Rico\",\n    \"code\": \"PR\",\n    \"capital\": \"San Juan\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Pyongyang\"\n    ],\n    \"lat\": 40,\n    \"lon\": 127,\n    \"name\": \"North Korea\",\n    \"code\": \"KP\",\n    \"capital\": \"Pyongyang\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Lisbon\",\n      \"Atlantic/Madeira\",\n      \"Atlantic/Azores\"\n    ],\n    \"lat\": 39.5,\n    \"lon\": -8,\n    \"name\": \"Portugal\",\n    \"code\": \"PT\",\n    \"capital\": \"Lisbon\"\n  },\n  {\n    \"timezones\": [\n      \"America/Asuncion\"\n    ],\n    \"lon\": -57.5759, \"lat\": -25.2637,\n    \"name\": \"Paraguay\",\n    \"code\": \"PY\",\n    \"capital\": \"Asunci\\u00f3n\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Gaza\",\n      \"Asia/Hebron\"\n    ],\n    \"lat\": 31.9,\n    \"lon\": 35.2,\n    \"name\": \"Palestine\",\n    \"code\": \"PS\",\n    \"capital\": \"Ramallah\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Tahiti\",\n      \"Pacific/Marquesas\",\n      \"Pacific/Gambier\"\n    ],\n    \"lat\": 15,\n    \"lon\": -140,\n    \"name\": \"French Polynesia\",\n    \"code\": \"PF\",\n    \"capital\": \"Papeet\\u0113\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Qatar\"\n    ],\n    \"lat\": 25.5,\n    \"lon\": 51.25,\n    \"name\": \"Qatar\",\n    \"code\": \"QA\",\n    \"capital\": \"Doha\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Reunion\"\n    ],\n    \"lat\": 21.15,\n    \"lon\": 55.5,\n    \"name\": \"R\\u00e9union\",\n    \"code\": \"RE\",\n    \"capital\": \"Saint-Denis\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Bucharest\"\n    ],\n    \"lat\": 46,\n    \"lon\": 25,\n    \"name\": \"Romania\",\n    \"code\": \"RO\",\n    \"capital\": \"Bucharest\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Kaliningrad\",\n      \"Europe/Moscow\",\n      \"Europe/Simferopol\",\n      \"Europe/Volgograd\",\n      \"Europe/Kirov\",\n      \"Europe/Astrakhan\",\n      \"Europe/Samara\",\n      \"Europe/Ulyanovsk\",\n      \"Asia/Yekaterinburg\",\n      \"Asia/Omsk\",\n      \"Asia/Novosibirsk\",\n      \"Asia/Barnaul\",\n      \"Asia/Tomsk\",\n      \"Asia/Novokuznetsk\",\n      \"Asia/Krasnoyarsk\",\n      \"Asia/Irkutsk\",\n      \"Asia/Chita\",\n      \"Asia/Yakutsk\",\n      \"Asia/Khandyga\",\n      \"Asia/Vladivostok\",\n      \"Asia/Ust-Nera\",\n      \"Asia/Magadan\",\n      \"Asia/Sakhalin\",\n      \"Asia/Srednekolymsk\",\n      \"Asia/Kamchatka\",\n      \"Asia/Anadyr\"\n    ],\n    \"lat\": 60,\n    \"lon\": 100,\n    \"name\": \"Russia\",\n    \"code\": \"RU\",\n    \"capital\": \"Moscow\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Kigali\"\n    ],\n    \"lat\": 2,\n    \"lon\": 30,\n    \"name\": \"Rwanda\",\n    \"code\": \"RW\",\n    \"capital\": \"Kigali\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Riyadh\"\n    ],\n    \"lat\": 25,\n    \"lon\": 45,\n    \"name\": \"Saudi Arabia\",\n    \"code\": \"SA\",\n    \"capital\": \"Riyadh\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Khartoum\"\n    ],\n    \"lat\": 15,\n    \"lon\": 30,\n    \"name\": \"Sudan\",\n    \"code\": \"SD\",\n    \"capital\": \"Khartoum\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Dakar\"\n    ],\n    \"lat\": 14,\n    \"lon\": -14,\n    \"name\": \"Senegal\",\n    \"code\": \"SN\",\n    \"capital\": \"Dakar\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Singapore\"\n    ],\n    \"lat\": 1.36666666,\n    \"lon\": 103.8,\n    \"name\": \"Singapore\",\n    \"code\": \"SG\",\n    \"capital\": \"Singapore\"\n  },\n  {\n    \"timezones\": [\n      \"Atlantic/South_Georgia\"\n    ],\n    \"lat\": 54.5,\n    \"lon\": -37,\n    \"name\": \"South Georgia\",\n    \"code\": \"GS\",\n    \"capital\": \"King Edward Point\"\n  },\n  {\n    \"timezones\": [\n      \"Arctic/Longyearbyen\"\n    ],\n    \"lat\": 78,\n    \"lon\": 20,\n    \"name\": \"Svalbard and Jan Mayen\",\n    \"code\": \"SJ\",\n    \"capital\": \"Longyearbyen\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Guadalcanal\"\n    ],\n    \"lat\": 8,\n    \"lon\": 159,\n    \"name\": \"Solomon Islands\",\n    \"code\": \"SB\",\n    \"capital\": \"Honiara\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Freetown\"\n    ],\n    \"lat\": 8.5,\n    \"lon\": -11.5,\n    \"name\": \"Sierra Leone\",\n    \"code\": \"SL\",\n    \"capital\": \"Freetown\"\n  },\n  {\n    \"timezones\": [\n      \"America/El_Salvador\"\n    ],\n    \"lat\": 13.83333333,\n    \"lon\": -88.91666666,\n    \"name\": \"El Salvador\",\n    \"code\": \"SV\",\n    \"capital\": \"San Salvador\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/San_Marino\"\n    ],\n    \"lat\": 43.76666666,\n    \"lon\": 12.41666666,\n    \"name\": \"San Marino\",\n    \"code\": \"SM\",\n    \"capital\": \"City of San Marino\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Mogadishu\"\n    ],\n    \"lat\": 10,\n    \"lon\": 49,\n    \"name\": \"Somalia\",\n    \"code\": \"SO\",\n    \"capital\": \"Mogadishu\"\n  },\n  {\n    \"timezones\": [\n      \"America/Miquelon\"\n    ],\n    \"lat\": 46.83333333,\n    \"lon\": -56.33333333,\n    \"name\": \"Saint Pierre and Miquelon\",\n    \"code\": \"PM\",\n    \"capital\": \"Saint-Pierre\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Belgrade\"\n    ],\n    \"lat\": 44,\n    \"lon\": 21,\n    \"name\": \"Serbia\",\n    \"code\": \"RS\",\n    \"capital\": \"Belgrade\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Juba\"\n    ],\n    \"lat\": 7,\n    \"lon\": 30,\n    \"name\": \"South Sudan\",\n    \"code\": \"SS\",\n    \"capital\": \"Juba\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Sao_Tome\"\n    ],\n    \"lat\": 1,\n    \"lon\": 7,\n    \"name\": \"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\",\n    \"code\": \"ST\",\n    \"capital\": \"S\\u00e3o Tom\\u00e9\"\n  },\n  {\n    \"timezones\": [\n      \"America/Paramaribo\"\n    ],\n    \"lon\": -55.2038, \"lat\": 5.852,\n    \"name\": \"Suriname\",\n    \"code\": \"SR\",\n    \"capital\": \"Paramaribo\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Bratislava\"\n    ],\n    \"lat\": 48.66666666,\n    \"lon\": 19.5,\n    \"name\": \"Slovakia\",\n    \"code\": \"SK\",\n    \"capital\": \"Bratislava\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Ljubljana\"\n    ],\n    \"lat\": 46.11666666,\n    \"lon\": 14.81666666,\n    \"name\": \"Slovenia\",\n    \"code\": \"SI\",\n    \"capital\": \"Ljubljana\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Stockholm\"\n    ],\n    \"lat\": 62,\n    \"lon\": 15,\n    \"name\": \"Sweden\",\n    \"code\": \"SE\",\n    \"capital\": \"Stockholm\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Mbabane\"\n    ],\n    \"lat\": 26.5,\n    \"lon\": 31.5,\n    \"name\": \"Swaziland\",\n    \"code\": \"SZ\",\n    \"capital\": \"Lobamba\"\n  },\n  {\n    \"timezones\": [\n      \"America/Lower_Princes\"\n    ],\n    \"lat\": 18.033333,\n    \"lon\": -63.05,\n    \"name\": \"Sint Maarten\",\n    \"code\": \"SX\",\n    \"capital\": \"Philipsburg\"\n  },\n  {\n    \"timezones\": [\n      \"Indian/Mahe\"\n    ],\n    \"lat\": 4.58333333,\n    \"lon\": 55.66666666,\n    \"name\": \"Seychelles\",\n    \"code\": \"SC\",\n    \"capital\": \"Victoria\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Damascus\"\n    ],\n    \"lat\": 35,\n    \"lon\": 38,\n    \"name\": \"Syria\",\n    \"code\": \"SY\",\n    \"capital\": \"Damascus\"\n  },\n  {\n    \"timezones\": [\n      \"America/Grand_Turk\"\n    ],\n    \"lat\": 21.75,\n    \"lon\": -71.58333333,\n    \"name\": \"Turks and Caicos Islands\",\n    \"code\": \"TC\",\n    \"capital\": \"Cockburn Town\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Ndjamena\"\n    ],\n    \"lat\": 15,\n    \"lon\": 19,\n    \"name\": \"Chad\",\n    \"code\": \"TD\",\n    \"capital\": \"N'Djamena\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Lome\"\n    ],\n    \"lat\": 8,\n    \"lon\": 1.16666666,\n    \"name\": \"Togo\",\n    \"code\": \"TG\",\n    \"capital\": \"Lom\\u00e9\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Bangkok\"\n    ],\n    \"lat\": 15,\n    \"lon\": 100,\n    \"name\": \"Thailand\",\n    \"code\": \"TH\",\n    \"capital\": \"Bangkok\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Dushanbe\"\n    ],\n    \"lat\": 39,\n    \"lon\": 71,\n    \"name\": \"Tajikistan\",\n    \"code\": \"TJ\",\n    \"capital\": \"Dushanbe\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Fakaofo\"\n    ],\n    \"lat\": 9,\n    \"lon\": -172,\n    \"name\": \"Tokelau\",\n    \"code\": \"TK\",\n    \"capital\": \"Fakaofo\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Ashgabat\"\n    ],\n    \"lat\": 40,\n    \"lon\": 60,\n    \"name\": \"Turkmenistan\",\n    \"code\": \"TM\",\n    \"capital\": \"Ashgabat\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Dili\"\n    ],\n    \"lat\": 8.83333333,\n    \"lon\": 125.91666666,\n    \"name\": \"Timor-Leste\",\n    \"code\": \"TL\",\n    \"capital\": \"Dili\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Tongatapu\"\n    ],\n    \"lat\": 20,\n    \"lon\": -175,\n    \"name\": \"Tonga\",\n    \"code\": \"TO\",\n    \"capital\": \"Nuku'alofa\"\n  },\n  {\n    \"timezones\": [\n      \"America/Port_of_Spain\"\n    ],\n    \"lat\": 11,\n    \"lon\": -61,\n    \"name\": \"Trinidad and Tobago\",\n    \"code\": \"TT\",\n    \"capital\": \"Port of Spain\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Tunis\"\n    ],\n    \"lat\": 34,\n    \"lon\": 9,\n    \"name\": \"Tunisia\",\n    \"code\": \"TN\",\n    \"capital\": \"Tunis\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Istanbul\"\n    ],\n    \"lat\": 39,\n    \"lon\": 35,\n    \"name\": \"Turkey\",\n    \"code\": \"TR\",\n    \"capital\": \"Ankara\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Funafuti\"\n    ],\n    \"lat\": 8,\n    \"lon\": 178,\n    \"name\": \"Tuvalu\",\n    \"code\": \"TV\",\n    \"capital\": \"Funafuti\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Taipei\"\n    ],\n    \"lat\": 23.5,\n    \"lon\": 121,\n    \"name\": \"Taiwan\",\n    \"code\": \"TW\",\n    \"capital\": \"Taipei\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Dar_es_Salaam\"\n    ],\n    \"lat\": 6,\n    \"lon\": 35,\n    \"name\": \"Tanzania\",\n    \"code\": \"TZ\",\n    \"capital\": \"Dodoma\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Kampala\"\n    ],\n    \"lat\": 1,\n    \"lon\": 32,\n    \"name\": \"Uganda\",\n    \"code\": \"UG\",\n    \"capital\": \"Kampala\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Kiev\",\n      \"Europe/Uzhgorod\",\n      \"Europe/Zaporozhye\"\n    ],\n    \"lat\": 49,\n    \"lon\": 32,\n    \"name\": \"Ukraine\",\n    \"code\": \"UA\",\n    \"capital\": \"Kiev\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Johnston\",\n      \"Pacific/Midway\",\n      \"Pacific/Wake\"\n    ],\n    \"lat\": 19.2911437,\n    \"lon\": 166.618332,\n    \"name\": \"United States Minor Outlying Islands\",\n    \"code\": \"UM\",\n    \"capital\": null\n  },\n  {\n    \"timezones\": [\n      \"America/Montevideo\"\n    ],\n    \"lon\": -56.1645, \"lat\": -34.9011,\n    \"name\": \"Uruguay\",\n    \"code\": \"UY\",\n    \"capital\": \"Montevideo\"\n  },\n  {\n    \"timezones\": [\n      \"America/New_York\",\n      \"America/Detroit\",\n      \"America/Kentucky/Louisville\",\n      \"America/Kentucky/Monticello\",\n      \"America/Indiana/Indianapolis\",\n      \"America/Indiana/Vincennes\",\n      \"America/Indiana/Winamac\",\n      \"America/Indiana/Marengo\",\n      \"America/Indiana/Petersburg\",\n      \"America/Indiana/Vevay\",\n      \"America/Chicago\",\n      \"America/Indiana/Tell_City\",\n      \"America/Indiana/Knox\",\n      \"America/Menominee\",\n      \"America/North_Dakota/Center\",\n      \"America/North_Dakota/New_Salem\",\n      \"America/North_Dakota/Beulah\",\n      \"America/Denver\",\n      \"America/Boise\",\n      \"America/Phoenix\",\n      \"America/Los_Angeles\",\n      \"America/Anchorage\",\n      \"America/Juneau\",\n      \"America/Sitka\",\n      \"America/Metlakatla\",\n      \"America/Yakutat\",\n      \"America/Nome\",\n      \"America/Adak\",\n      \"Pacific/Honolulu\"\n    ],\n    \"lat\": 38,\n    \"lon\": -97,\n    \"name\": \"United States\",\n    \"code\": \"US\",\n    \"capital\": \"Washington D.C.\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Samarkand\",\n      \"Asia/Tashkent\"\n    ],\n    \"lat\": 41,\n    \"lon\": 64,\n    \"name\": \"Uzbekistan\",\n    \"code\": \"UZ\",\n    \"capital\": \"Tashkent\"\n  },\n  {\n    \"timezones\": [\n      \"Europe/Vatican\"\n    ],\n    \"lat\": 41.9,\n    \"lon\": 12.45,\n    \"name\": \"Vatican City\",\n    \"code\": \"VA\",\n    \"capital\": \"Vatican City\"\n  },\n  {\n    \"timezones\": [\n      \"America/St_Vincent\"\n    ],\n    \"lat\": 13.25,\n    \"lon\": -61.2,\n    \"name\": \"Saint Vincent and the Grenadines\",\n    \"code\": \"VC\",\n    \"capital\": \"Kingstown\"\n  },\n  {\n    \"timezones\": [\n      \"America/Caracas\"\n    ],\n    \"lon\": -66.9036, \"lat\": 10.4806,\n    \"name\": \"Venezuela\",\n    \"code\": \"VE\",\n    \"capital\": \"Caracas\"\n  },\n  {\n    \"timezones\": [\n      \"America/Tortola\"\n    ],\n    \"lat\": 18.431383,\n    \"lon\": -64.62305,\n    \"name\": \"British Virgin Islands\",\n    \"code\": \"VG\",\n    \"capital\": \"Road Town\"\n  },\n  {\n    \"timezones\": [\n      \"America/St_Thomas\"\n    ],\n    \"lat\": 18.35,\n    \"lon\": -64.933333,\n    \"name\": \"United States Virgin Islands\",\n    \"code\": \"VI\",\n    \"capital\": \"Charlotte Amalie\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Ho_Chi_Minh\"\n    ],\n    \"lat\": 16.16666666,\n    \"lon\": 107.83333333,\n    \"name\": \"Vietnam\",\n    \"code\": \"VN\",\n    \"capital\": \"Hanoi\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Efate\"\n    ],\n    \"lat\": 16,\n    \"lon\": 167,\n    \"name\": \"Vanuatu\",\n    \"code\": \"VU\",\n    \"capital\": \"Port Vila\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Wallis\"\n    ],\n    \"lat\": 13.3,\n    \"lon\": -176.2,\n    \"name\": \"Wallis and Futuna\",\n    \"code\": \"WF\",\n    \"capital\": \"Mata-Utu\"\n  },\n  {\n    \"timezones\": [\n      \"Pacific/Apia\"\n    ],\n    \"lat\": 13.58333333,\n    \"lon\": -172.33333333,\n    \"name\": \"Samoa\",\n    \"code\": \"WS\",\n    \"capital\": \"Apia\"\n  },\n  {\n    \"timezones\": [\n      \"Asia/Aden\"\n    ],\n    \"lat\": 15,\n    \"lon\": 48,\n    \"name\": \"Yemen\",\n    \"code\": \"YE\",\n    \"capital\": \"Sana'a\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Johannesburg\"\n    ],\n    \"lat\": 29,\n    \"lon\": 24,\n    \"name\": \"South Africa\",\n    \"code\": \"ZA\",\n    \"capital\": \"Pretoria\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Lusaka\"\n    ],\n    \"lat\": 15,\n    \"lon\": 30,\n    \"name\": \"Zambia\",\n    \"code\": \"ZM\",\n    \"capital\": \"Lusaka\"\n  },\n  {\n    \"timezones\": [\n      \"Africa/Harare\"\n    ],\n    \"lat\": 20,\n    \"lon\": 30,\n    \"name\": \"Zimbabwe\",\n    \"code\": \"ZW\",\n    \"capital\": \"Harare\"\n  }\n]\n","// eslint-disable-next-line\nimport * as React from 'react';\nimport { createContainer } from \"unstated-next\";\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { country_list } from './Map/countries';\nimport {IGlobalData, ICountry , IDataCovid} from './modules/Interfaces';\n// source : \"https://api.covid19api.com/\"\n// source : \"https://covidtracking.com/api/us/daily\"\n\n\nexport const useStore = () => {\n  const [country, setCountry] = React.useState<string>(\"\");\n  const [code, setCode] = React.useState<string>(\"\");\n  const [covidApi, setCovidApi] = React.useState<Object[] | null | void | undefined>([]);\n  const [countriesML, setCountriesML] = React.useState<Object[] | any>([]);\n  const [data, setData] = React.useState<Object[] | void | null | undefined>([]);// data for graph\n  const [dataDiff, setDataDiff] = React.useState<number[] | any[] | undefined>([]);// data diff for graph\n  const [total, setTotal] = React.useState<IGlobalData[] | void | null | undefined>([]);\n  const [labels, setLabels] = React.useState<Object[] | void | null | undefined>([]);\n  const [markers, setMarkers] = React.useState<any[] | undefined>([]);\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n\n  const debug: boolean = true;\n\n  function globalDataGraph(data: any) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    for (let i in data) {\n      resultDates.push(i);\n      resultCases.push(data[i]);\n    }\n    // console.log(resultCases, resultDates);\n    return ({ resultCases, resultDates });\n  }\n\n  function countriesListData(data: ICountry[]) {\n    let resultCases: any[] = []\n    let resultCountries: any[] = []\n    let result: any[] = []\n    for (let i in data) {\n      resultCountries.push(data[i].Country);\n      resultCases.push(data[i].TotalConfirmed);\n      result.push({\n        country: data[i].Country, TotalConfirmed: data[i].TotalConfirmed,\n        sortable: true,\n      })\n    }\n    // console.log(resultCases, resultCountries);\n    return ({ result, resultCases, resultCountries });\n  }\n\n  /**\n   * function countryDataGraph(data: IDataCovid[] | ICountry[], country: string, caseType: string, dateTo: string) {\n   * Clean data array result of API and transform into array for graph\n   * @param data \n   * @param country \n   * @param caseType \n   * @param dateTo \n   * @returns nothing, just  setData([]); setLabels([]);setDataDiff([]); in the store\n   */\n  function countryDataGraph(data: IDataCovid[] | ICountry[], country: string, caseType: string, dateTo: string) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    if (data.length > 0) {\n      data.forEach((item: any) => {\n        // console.log(\"item : \", caseType, item[caseType], item);\n        if (country === 'FR') {\n          // console.log(`country`, country)\n          if (!item.Province) {\n            resultCases.push(item.Cases);\n            resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          }\n          // } else if (country === 'us' || debug === true) {\n        } else if (country === 'US' && debug === true) {\n          if ((moment(item.last_update).isAfter(dateTo))) {\n            resultCases.push(caseType === \"confirmed\" ? item.cases : item[caseType]);\n            resultDates.push(moment(item.last_update).format('YYYY/MM/DD'));\n          }\n        } else {\n          if ((moment(item.Date).isAfter(dateTo))) {\n            resultCases.push(item.Cases);\n            resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          }\n        }\n      })\n      let resultCasesDiff: any[] = _.map(resultCases, function (e: any, i: any) {\n        return (resultCases[i + 1] - e) < 0 ? 0 : (resultCases[i + 1] - e)\n      });\n      // console.log(`resultCases`, resultCases)\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      // dataDiff === [] ? console.log(dataDiff) : console.log('');\n      setData(resultCasesDiff);// inversion between resultCasesDiff and resultCases for display graph of variations and not total\n      setDataDiff(resultCases);\n      setLabels(resultDates);\n      return ({ resultCases, resultDates, resultCasesDiff });\n    } else {\n      setData([]);\n      setLabels([]);\n      setDataDiff([]);\n\n    }\n  }\n\n  // function getCovidApi() :  get data by country\n  // differents source cause pb with USA, \n  // you cans get data according Country Code, date from  and case : confirmed, deaths, recovered\n  // have to use function countryDataGraph() to clean data and have an array to fit with D3js charts react-map-smples\n  function getCovidApi(country: string, caseType: string, dateTo: string) {\n    if (country === \"\") {\n      countryDataGraph([], \"\", \"\", \"\");\n    } else {\n      try {\n        if (debug === false) {\n          return fetch(`https://covid19-api.org/api/timeline/${country}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          })\n            .then((response: any) => response.json()).then((res) => {\n              countryDataGraph(res.reverse(), country, caseType, dateTo);// cleaning data for ChartJS\n            }).catch(err => alert(err));\n        } else {\n          return fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          })\n            .then((response: any) => response.json()).then((res) => {\n              // console.log(`res Fetch`, res)\n              countryDataGraph(res, country, caseType, dateTo);// cleaning data for ChartJS\n            }).catch(err => alert(err));\n        }\n      } catch (err) {\n        console.log(err)\n        return;\n      }\n    }\n  };\n\n\n  // to set unstated.total data : {Global, Countries,..} all total data of today\n  const getTotal = async () => {\n    await fetch(`https://api.covid19api.com/summary`)\n      .then(res => res.json())\n      .then(resp => setTotal(resp))\n      .catch((err) => { throw (err) })\n  }\n\n  // console.log(`https://covid19-api.org/api/timeline/${country}`)\n  // console.log(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`)\n  const getCovidCountry = async (country: string, caseType: string, dateTo: string) => {\n    setCovidApi(await getCovidApi(country, caseType, dateTo));\n  }\n\n  /**\n   * just update global world total data for main dashboard\n   */\n  const updateTotalCovid = async () => {\n    setTotal(await getTotal());\n  }\n\n  // =================================================\n\n  // function matching data for the map : react map simples\n  // source (`https://api.covid19api.com/all`, {\n  function getMarkers(arr1: any, arr2: any) {\n    return _.union(\n      _.map(arr1, function (obj1) {\n        var same = _.find(arr2, function (obj2) {\n          return obj1[\"CountryCode\"] === obj2[\"code\"];\n        });\n        return same ? _.extend(obj1, same) : obj1;\n      }),\n      _.reject(arr2, function (obj2) {\n        return _.find(arr1, function (obj1) {\n          return obj2[\"code\"] === obj1[\"CountryCode\"];\n        });\n      })\n    );\n  }\n\n  //order \n  function dynamicSort(property: any) {\n    var sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return function (b: any, a: any) {\n      /* next line works with strings and numbers, \n       * and you may want to customize it to your needs\n       */\n      var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n      return result * sortOrder;\n    }\n  }\n\n  /**\n   * function for creating markers for the world map component\n   */\n  function getCovidMapMarkers() {\n    fetch(`https://api.covid19api.com/summary`, {\n      method: \"GET\",\n    }).then((response: any) => response.json()).then((res) => {\n      // console.log(\"***********************\", res.Countries);\n      let resp = getMarkers(res.Countries, country_list);\n      setMarkers(resp.sort(dynamicSort(\"TotalConfirmed\")));\n      // console.log(resp);\n      return (resp);\n    }).catch(err => alert(err));\n  }\n\n  /**\n   * just a function to get all countries list infectino for left side bar\n   * @returns nothing\n   */\n  function getCountriesML() {\n    try {\n      return fetch(`\"https://covid19-api.org/api/status\"`, {\n        method: \"GET\",\n      }).then((response: any) => response.text())\n    } catch (err) {\n      console.log(err)\n      return;\n    }\n  };\n\n  const updateCountriesML = async () => {\n    setCountriesML(await getCountriesML());\n  }\n\n  return {\n    covidApi,\n    country_list,\n    data,\n    labels,\n    total,\n    country,\n    code,\n    markers,\n    countriesML,\n    dataDiff,\n    setCountry,\n    setCode,\n    getTotal,\n    getCovidCountry,\n    updateTotalCovid,\n    countryDataGraph,\n    globalDataGraph,\n    countriesListData,\n    getCovidMapMarkers,\n    updateCountriesML,\n  };\n}\nexport const StoreContainer = createContainer(useStore)\n","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { StoreContainer } from '../Store';\n\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\n/**\n * Search bar component to select a country and display its stats in /stats url\n */\nexport default function SearchBar() {\n  const unstated = StoreContainer.useContainer();\n  let textInput = \"\";\n\n  const handleChange = (e: any, values: any) => {\n    if (values) {\n      unstated.setCountry(values.name);\n      unstated.setCode(values.code);\n    } else {\n      unstated.setCountry(\"\");\n      unstated.setCode(\"\");\n    }\n  }\n\n\n  return (\n    <Autocomplete\n      id=\"country-select\"\n      options={unstated.country_list}\n      autoHighlight\n      getOptionLabel={(option) => option.name}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.name} ({option.code})\n        </React.Fragment>\n      )}\n      onChange={handleChange}\n      renderInput={(params) => (\n        <TextField\n          style={{ backgroundColor: 'white', borderRadius: 5, width: 300 }}\n          {...params}\n          label=\"Choose a country\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputProps={{\n            ...params.inputProps,\n          }}\n          value={textInput}\n        />\n      )\n      }\n    />\n  );\n}\n\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport SearchBar from './modules/SearchBar';\nimport Typography from '@material-ui/core/Typography';\nimport LinkURL from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from \"@material-ui/core/styles\";\n\n\nconst WhiteTextTypography = withStyles({\n  root: {\n    color: \"#FFFFFF\"\n  }\n})(Typography);\n\nfunction Copyright() {\n  return (\n    <WhiteTextTypography variant=\"body2\" color=\"textSecondary\" align=\"center\" >\n      {'Copyright © '}\n      <LinkURL color=\"inherit\" href=\"https://material-ui.com/\">\n        https://rim31.github.io/\n      </LinkURL>{' '}\n      {new Date().getFullYear()}\n    </WhiteTextTypography>\n  );\n}\n\nexport default function Layout(props: any) {\n  return (\n    <>\n      <nav className=\"navbar sticky-top  navbar-dark \" style={{ backgroundColor: \"#574b90\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\" }}>\n\n        <button className=\"d-lg-none navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\"\n          aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"dark-blue-text\"><i\n            className=\"fas fa-bars fa-1x\"></i></span></button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent1\">\n          <h3 style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }}>Covid-19</h3>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/covid19\" >Map</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/covid19/stats\">Stats</Link>\n            </li>\n            <li>\n              <SearchBar />\n            </li>\n          </ul>\n        </div>\n        <span className=\"d-none d-lg-block\" style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"flex-start\" }}>\n          <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/covid19\" >Map</Link>\n          <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/covid19/stats\">Stats</Link>\n        </span>\n        <h1 style={{ color: \"white\", fontWeight: \"bold\" }}>COVID-19</h1>\n        <span className=\"d-none d-lg-block\">\n          <SearchBar />\n        </span>\n      </nav>\n      {props.children}\n      <Box pt={4} style={{ bottom: 0, position: 'absolute', right: 0 }}>\n        <Copyright />\n      </Box>\n    </ >\n  )\n}\n","\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\n// import Chart from 'react-chartjs-2';\n\nexport default function BarChart(props: any) {\n  const data = {\n    labels: props.labelsCountry,\n    datasets: [\n      {\n        label: `COVID-19 ${props.country}`,\n        data: props.dataCountry,\n        color: \"rgba(255,0,255,0,75)\",\n        backgroundColor: \"#ffc107\"\n      }\n    ],\n    options: {\n      legend: {\n        display: true\n      },\n      title: {\n        display: true,\n        text: `World stats : ${props.labelsCountry[0]} - covid19`,\n        fontColor: 'whitesmoke',\n      },\n    }\n  }\n\n  React.useEffect(() => {\n\n  }, [])\n\n  return (\n    <>\n      <Bar data={data} />\n    </>\n  );\n}\n","import React from 'react';\nimport { StoreContainer } from '../Store';\nimport _ from 'lodash';\n\ninterface ICountry {\n  country: string,\n  last_update: Date,\n  cases: number,\n  deaths: number,\n  recovered: number\n}\n\ninterface ITable {\n  Country: string,\n  CountryCode: string,\n  Date: Date,\n  NewConfirmed: number,\n  NewDeaths: number,\n  NewRecovered: number,\n  TotalConfirmed: number,\n  TotalDeaths: number,\n  TotalRecovered: number,\n}\n\n\n// table Component of infected Data : for the left side bar\nexport default function TableCasesData(props: any) {\n  const unstated = StoreContainer.useContainer();\n  // const [table, setTable] = React.useState<ITable | object>({})\n  let data: any = {};\n  let countries: any[] = [];\n\n  if (_.isEmpty(unstated.total) === false) {\n    data = unstated.total;\n    countries = data.Countries;\n  }\n  const [result, setResult] = React.useState<ITable | any>({})\n  React.useEffect(() => {\n    if (unstated.code) {\n      let temp = (_.filter(countries, function (i: any) {\n        return i.CountryCode === unstated.code.toUpperCase();\n      }));\n      if (temp.length > 0)\n        setResult(temp[0])\n    }\n    // eslint-disable-next-line\n  }, [unstated.code])\n  return (\n    <table className=\"table table-sm table-dark table-striped\" style={{ fontSize: \"9px\", fontWeight: 'bold' }} >\n      <thead>\n        <tr>\n          <th style={{ color: \"white\" }}>Cases</th>\n          <th style={{ color: \"white\" }}>New Cases</th>\n          <th style={{ color: \"white\" }}>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Confirmed</td>\n          <td>{result?.NewConfirmed}</td>\n          <td>{result?.TotalConfirmed}</td>\n        </tr>\n        <tr>\n          <td>Deaths</td>\n          <td>{result?.NewDeaths}</td>\n          <td>{result?.TotalDeaths}</td>\n        </tr>\n        <tr>\n          <td>Recovered</td>\n          <td>{result?.NewRecovered}</td>\n          <td>{result?.TotalRecovered}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\n","// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nexport default function Flag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n};\n","import React from 'react';\nimport TableCasesData from './TableCasesData';\nimport _ from 'lodash';\nimport { StoreContainer } from '../Store';\nimport Flag from '../modules/Flag';\n\nexport default function ListCountries(props: any) {\n  const [data, setData] = React.useState<any>(props.countries)\n  const [country, setCountry] = React.useState<String>(\"\")\n  const [code, setCode] = React.useState<String>(\"\")\n  const unstated = StoreContainer.useContainer();\n\n\n  function handleClick(event: any) {\n    const value = event.currentTarget.dataset.name.toUpperCase();\n    // console.log(value)\n    setCountry(value);\n    setCode(event.currentTarget.dataset.code.toUpperCase());\n    unstated.setCountry(value);\n    unstated.setCode(event.currentTarget.dataset.code.toUpperCase());\n  }\n\n  // to sort array according attribute of object inside\n  // (data).sort(compareValues('TotalConfirmed', 'desc'))\n  function compareValues(key: string, order = 'asc') {\n    return function innerSort(a: any, b: any) {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n        // property doesn't exist on either object\n        return 0;\n      }\n      const varA = (typeof a[key] === 'string')\n        ? a[key].toUpperCase() : a[key];\n      const varB = (typeof b[key] === 'string')\n        ? b[key].toUpperCase() : b[key];\n      let comparison = 0;\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n      return (\n        (order === 'desc') ? (comparison * -1) : comparison\n      );\n    };\n  }\n\n  React.useEffect(() => {\n    if (!_.isEmpty(props.data.Countries))\n      setData(props.data.Countries.sort(compareValues('TotalConfirmed', 'desc')));\n\n  }, [props.data, data, unstated.code, unstated.country])\n\n  return (\n    <div\n      style={{\n        display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflow: \"hidden\",\n        whiteSpace: \"nowrap\", /* Don't forget this one */\n        textOverflow: \"ellipsis\",\n        justifyContent: \"space-between\",\n        maxWidth: '50vh'\n      }}>\n      <h1 style={{ color: 'whitesmoke' }}>\n        {!_.isEmpty(unstated.code) && !_.isEmpty(unstated.country) ?\n          <TableCasesData />\n          : \"\"}\n        <span>{Flag(unstated.code ? unstated.code : code)}</span>\n        {!_.isEmpty(unstated.country) ? unstated.country : country}\n      </h1>\n      {!_.isEmpty(props.data.Countries) ?\n        props.data.Countries.map((item: any, i: any) =>\n          <span className=\"button is-secondary is-fullwidth\"\n            style={{\n              display: \"flex\", fontSize: '12px', paddingLeft: '3px', justifyContent: \"space-between\",\n              whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", backgroundColor: '#282c34', color: \"whitesmoke\"\n            }} key={i} onClick={handleClick} data-name={item.Country} data-code={item.CountryCode}>\n            <span>{item.Country}</span><span> {item.TotalConfirmed}</span>\n          </span>)\n        : \"\"}\n    </div>\n  )\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\n\ninterface IGlobal {\n  NewConfirmed: number,\n  TotalConfirmed: number,\n  NewDeaths: number,\n  TotalDeaths: number,\n  NewRecovered: number,\n  TotalRecovered: number,\n}\n\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nexport default function Dashboard(props: any) {\n  const Global: IGlobal = props.data.Global;\n\n  let confirmedAverage: number | any = 0;\n  let deathsAverage: number | any = 0;\n  let recoveredAverage: number | any = 0;\n\n  React.useEffect(() => {\n    if (_.isEmpty(props.content) === false) {\n      // eslint-disable-next-line\n      confirmedAverage = (100 * props.content.TotalConfirmed / props.content.Population).toFixed(2);\n      // eslint-disable-next-line\n      deathsAverage = (100 * props.content.TotalDeaths / props.content.Population).toFixed(2);\n      // eslint-disable-next-line\n      recoveredAverage = (100 * props.content.TotalRecovered / props.content.Population).toFixed(2);\n    }\n  }, [props.content])\n\n  return (\n    <div>\n      <div className=\"row mb-4 mt-1\">\n        <div className=\"col-xl-4 col-lg-4\">\n          <div className=\"card card-inverse card-success\">\n            <div className=\"card-block rounded bg-warning\">\n              <h6 className=\"mt-2 ml-2\">Total confirmed</h6>\n              <h1 className=\"ml-2\">{Global ? Global.TotalConfirmed : \"...\"}</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-4 col-lg-4\">\n          <div className=\"card card-inverse card-danger\">\n            <div className=\"card-block rounded bg-danger\">\n              <h6 className=\"mt-2 ml-2\">Total deaths</h6>\n              <h1 className=\"ml-2\">{Global ? Global.TotalDeaths : \"...\"}</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-4 col-lg-4\">\n          <div className=\"card card-inverse card-info\">\n            <div className=\"card-block rounded bg-success\">\n              <h6 className=\"mt-2 ml-2\">Total recover</h6>\n              <h1 className=\"ml-2\">{Global ? Global.TotalRecovered : \"...\"}</h1>\n            </div>\n          </div>\n        </div>\n        {props.content ?\n          <div className=\"col-xl-12 col-lg-12\" style={{ position: \"absolute\", zIndex: 100 }}>\n            <div className=\"card card-inverse mb-0\">\n              <div className=\"card-block rounded mb-0\">\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}>\n                  <span>\n                    <h6 className=\"mt-2 ml-2\">Country : {props.content.Population} pers <PeopleOutlineIcon /> </h6>\n                    <h1 className=\"ml-2\">\n                      {_.isEmpty(props.content.data) === false ? <span>{countryToFlag(props.content.data.code)}</span> : \"\"}\n                      {props.content.Country}\n                    </h1>\n                  </span>\n                  <div>\n                    <table className=\"table table-sm table-dark table-striped\" style={{ fontSize: \"0.6rem\", fontWeight: \"bold\", marginBottom: \"0px\" }} >\n                      <thead>\n                        <tr>\n                          <th style={{ color: \"white\" }}>Cases</th>\n                          <th style={{ color: \"white\" }}>Today</th>\n                          <th style={{ color: \"white\" }}>Total</th>\n                          <th style={{ color: \"white\" }}>% pop T</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr style={{ color: \"#ffc107\", padding: '0!important', }}>\n                          <td>Confirmed</td>\n                          <td>{props.content?.NewConfirmed}</td>\n                          <td>{props.content?.TotalConfirmed}</td>\n                          <td>{confirmedAverage} %</td>\n                        </tr>\n                        <tr style={{ color: \"#dc3545\", padding: '0!important', }}>\n                          <td>Deaths</td>\n                          <td>{props.content?.NewDeaths}</td>\n                          <td>{props.content?.TotalDeaths}</td>\n                          <td>{deathsAverage} %</td>\n                        </tr>\n                        <tr style={{ color: \"#28a745\", padding: '0!important', }}>\n                          <td>Recovered</td>\n                          <td>{props.content?.NewRecovered}</td>\n                          <td>{props.content?.TotalRecovered}</td>\n                          <td>{recoveredAverage} %</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          : \"\"}\n      </div>\n\n\n    </div >\n  )\n}\n","import React from \"react\";\nimport { StoreContainer } from '../Store';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup,\n} from \"react-simple-maps\";\n\ninterface IMarkers {\n  markerOffset: number,\n  name: string,\n  lon: number,\n  lat: number\n}\nconst geoUrl: string =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = (props: any) => {\n  const unstated = StoreContainer.useContainer();\n  const [data, setData] = React.useState<any>(unstated.total);\n  const [maxMarkers, setMaxMarkers] = React.useState<number>(700000);\n  const myMarkers: IMarkers[] = []\n\n  function mapDataCountries(data: any) {\n    if (data.Countries) {\n      data.Countries.map((item: any) => myMarkers.push({ name: item.Country, markerOffset: 0, lon: 0, lat: 0 }))\n    }\n    // console.log(myMarkers)\n    return myMarkers;\n  }\n  React.useEffect(() => {\n    setData(unstated.getCovidMapMarkers());\n    if (data)\n      mapDataCountries(data);\n    // eslint-disable-next-line\n  }, [data, unstated.code])\n\n  React.useEffect(() => {\n    console.log(unstated.markers)\n    if (unstated.markers !== undefined)\n      setMaxMarkers(unstated.markers[9] ? unstated.markers[9].TotalConfirmed : 700000);\n    // eslint-disable-next-line\n  }, [unstated.markers])\n\n  return (\n    <ComposableMap\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 200\n      }}\n    >\n      <ZoomableGroup zoom={1}>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill=\"#DDD\"\n                stroke=\"#FFF\"\n                onMouseEnter={() => {\n                  let { NAME, POP_EST, ISO_A2 } = geo.properties;\n                  let country: object | any = _.find((unstated.markers), { CountryCode: ISO_A2 });\n                  if (country) {\n                    props.setTooltipContent({\n                      Country: NAME,\n                      Population: POP_EST,\n                      NewConfirmed: country.NewConfirmed,\n                      TotalConfirmed: country.TotalConfirmed,\n                      NewDeaths: country.NewDeaths,\n                      TotalDeaths: country.TotalDeaths,\n                      NewRecovered: country.NewRecovered,\n                      TotalRecovered: country.TotalRecovered,\n                      data: country\n                    });\n                  } else {\n                    props.setTooltipContent({ Country: NAME });\n                  }\n                }}\n                onMouseLeave={() => {\n                  props.setTooltipContent(\"\");\n                }}\n                onClick={() => {\n                  let { NAME, ISO_A2 } = geo.properties;\n                  unstated.setCode(ISO_A2.toUpperCase());\n                  unstated.setCountry(NAME.toUpperCase());\n\n                }}\n\n                style={{\n                  default: {\n                    fill: \"#D6D6DA\",\n                    outline: \"none\"\n                  },\n                  hover: {\n                    fill: \"#F53\",\n                    outline: \"none\"\n                  },\n                  pressed: {\n                    fill: \"#E42\",\n                    outline: \"none\"\n                  }\n                }}\n              />\n            ))\n          }\n        </Geographies>\n        {unstated.markers ?\n          (_.filter(unstated.markers, (o: any) => o.CountryCode === unstated.code || o.TotalConfirmed > maxMarkers))\n            .map((item: any) => (\n              <Marker key={item.name} coordinates={[item.lon, item.lat]}>\n                {item.CountryCode.toUpperCase() === unstated.code.toUpperCase() ?\n                  <g\n                    fill=\"none\"\n                    stroke=\"#ff0000\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    transform=\"translate(-12, -35)\"\n                  >\n                    <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                    <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                  </g> :\n                  <>\n                    {\n                      item.TotalConfirmed > maxMarkers ?\n                        <g\n                          fill=\"none\"\n                          stroke=\"#ffc107\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          transform=\"translate(-12, -6)\"\n                        >\n                          <circle cx=\"12\" cy=\"8\" r=\"1\" />\n                        </g>\n                        : \"\"}\n                  </>\n                }\n\n                {item.CountryCode.toUpperCase() === unstated.code.toUpperCase() ?\n                  <>\n                    <text\n                      textAnchor=\"middle\"\n                      style={{ fill: \"red\", fontWeight: \"bold\", textShadow: \"1px 1px 1px black\", fontSize: \"15px\", cursor: \"default\", zIndex: -10 }}\n                    >\n                      {/*  eslint-disable-next-line */}\n                      <Link to=\"/covid19/stats\">📈 Details - {item.CountryCode} : {item.TotalConfirmed}cases\n                        </Link>\n                    </text>\n                  </>\n                  :\n                  <>\n                    <text\n                      textAnchor=\"middle\"\n                      style={{ fill: \"orange\", textShadow: \"1px 1px 1px black\", fontWeight: \"bold\", fontSize: \"10px\", cursor: \"default\", zIndex: -10 }}\n                      onMouseEnter={() => {\n                        let country: object | any = _.find((unstated.markers), { CountryCode: item.CountryCode });\n                        if (country) {\n                          // cases = country.TotalConfirmed;\n                          props.setTooltipContent({\n                            Country: item.Country,\n                            Population: '',\n                            NewConfirmed: country.NewConfirmed,\n                            TotalConfirmed: country.TotalConfirmed,\n                            NewDeaths: country.NewDeaths,\n                            TotalDeaths: country.TotalDeaths,\n                            NewRecovered: country.NewRecovered,\n                            TotalRecovered: country.TotalRecovered,\n                            data: country\n                          });\n                        } else {\n                          props.setTooltipContent({ Country: item.Country });\n                        }\n                      }}\n                      onMouseLeave={() => {\n                        props.setTooltipContent(\"\");\n                      }}\n                      onClick={() => {\n                        unstated.setCode(item.CountryCode.toUpperCase());\n                        unstated.setCountry(item.Country.toUpperCase());\n                      }}\n                    >\n                      {item.TotalConfirmed > maxMarkers ? `${item.CountryCode} ${item.TotalConfirmed}` : \"\"}\n                    </text>\n                  </>\n                }\n              </Marker >\n            )) : \"\"\n        }\n      </ZoomableGroup>\n    </ComposableMap >\n  );\n};\n\nexport default MapChart;\n\n\n// Country: \"United States of America\"\n// CountryCode: \"US\"\n// Date: \"2020-12-12T01:31:13Z\"\n// NewConfirmed: 224452\n// NewDeaths: 2768\n// NewRecovered: 95151\n// Premium: {}\n// Slug: \"united-states\"\n// TotalConfirmed: 15611014\n// TotalDeaths: 292141\n// TotalRecovered: 5985047\n// capital: \"Washington D.C.\"\n// code: \"US\"\n// lat: 38\n// lon: -97\n// name: \"United States\"\n// timezones: (29) [\"America/New_York\", \"America/Detroit\", \"America/Kentucky/Louisville\", \"America/Kentucky/Monticello\", \"America/Indiana/Indianapolis\", \"America/Indiana/Vincennes\", \"America/Indiana/Winamac\", \"America/Indiana/Marengo\", \"America/Indiana/Petersburg\", \"America/Indiana/Vevay\", \"America/Chicago\", \"America/Indiana/Tell_City\", \"America/Indiana/Knox\", \"America/Menominee\", \"America/North_Dakota/Center\", \"America/North_Dakota/New_Salem\", \"America/North_Dakota/Beulah\", \"America/Denver\", \"America/Boise\", \"America/Phoenix\", \"America/Los_Angeles\", \"America/Anchorage\", \"America/Juneau\", \"America/Sitka\", \"America/Metlakatla\", \"America/Yakutat\", \"America/Nome\", \"America/Adak\", \"Pacific/Honolulu\"]\n// __proto__: Object","import React, { useState } from 'react'\n// import { useParams, useHistory } from 'react-router-dom';\nimport BarChart from '../Charts/BarChart';\nimport moment from 'moment';\nimport { StoreContainer } from '../Store';\nimport ListCountries from '../modules/ListCountries';\nimport Dashboard from '../Charts/Dashboard';\nimport MapChart from '../Map/MapChart';\nimport '../../App.css'\n\nexport default function HomeComponent() {\n  // eslint-disable-next-line\n  const [data, setData] = useState<any>(\"\");\n  const [date, setDate] = useState<any>(\"\");\n  const [X, setX] = useState<any>([]);// for graph bar General world Covid\n  const [Y, setY] = useState<any>([]);// for graph bar General world Covid\n  const [content, setContent] = React.useState(\"\");// for tooltip maps\n  const unstated = StoreContainer.useContainer();\n\n  function setGraph(data: any) {\n    setDate(\"World \" + moment().format('YYYY/MM/DD'));// set date for graph Label Title\n    const infos = unstated.globalDataGraph(data.Global);// cleaning data =  returning a double table \n    setX(infos?.resultDates)\n    setY(infos?.resultCases)\n  }\n\n\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n  React.useEffect(() => {\n    getAll();\n    setGraph(unstated.total);\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <>\n\n      <header>\n      </header>\n\n      <aside className=\"sidebar\">\n        <h3 className=\"mt-1\">Countries </h3>\n        <ListCountries data={unstated.total ? unstated.total : (data ? data : {})} />\n      </aside>\n\n      <section className=\"main\">\n        <Dashboard data={unstated.total ? unstated.total : (data ? data : {})}\n          content={content ? content : ''}\n        />\n        <MapChart setTooltipContent={setContent} />\n        <div className=\"sticky-top\">\n          <div className=\"nav flex-column\">\n            {data ?\n              <BarChart dataCountry={Y} labelsCountry={X} country={date} />\n              : <></>}\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n","import React from 'react';\n// import { Line } from 'react-chartjs-2';\nimport { Bar } from 'react-chartjs-2';\nimport { StoreContainer } from '../Store';\n\nexport default function LinearChart(props: any) {\n  const unstated = StoreContainer.useContainer();\n  const data = {\n    labels: props.labelsCountry,\n    datasets: [\n      {\n        label: `COVID-19 ${unstated.code.toUpperCase()} ${props.labelsCountry[0]}`,\n        data: props.dataCountry,\n        backgroundColor: \"red\",\n        color: \"rgba(255,0,255,0,75)\",\n        hoverBackgroundColor: \"rgba(232,105,90,0.8)\",\n      }\n    ]\n  }\n  const options = {\n    legend: {\n      display: true,\n      fontColor: 'whitesmoke'\n    },\n    title: {\n      display: true,\n      text: `${unstated.country.toUpperCase()} ${props.labelsCountry[0]} - covid19`,\n      fontColor: 'whitesmoke',\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 18,\n          color: \"rgba(2, 2, 2, 0.1)\"\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 14,\n        }\n      }]\n    }\n    // responsive: true,\n    // maintainAspectRatio: true,\n  }\n  return (\n    <div style={{ backgroundColor: \"#555555\" }}>\n      <Bar data={data} options={options} />\n      {/* <Line data={data} options={options} /> */}\n    </div>\n  );\n}\n","import React from 'react'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nexport default function SelectCase(props: any) {\n\n  const handleChange = (event: any) => {\n    props.setCases(event.target.value);\n  }\n\n  return (\n    <>\n      <InputLabel className=\"pt-2 pb-0 mb-0\" style={{ color: \"white\" }}>Cases</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-filled-label\"\n        id=\"demo-simple-select-filled\"\n        value={props.cases}\n        defaultValue={\"confirmed\"}\n        onChange={handleChange}\n        className=\"ml-1\"\n        style={{ backgroundColor: 'white', borderRadius: 5, width: \"auto\", paddingLeft: \"1px\" }}\n      >\n        <MenuItem value={\"confirmed\"}>confirmed</MenuItem>\n        <MenuItem value={\"deaths\"}>deaths</MenuItem>\n        <MenuItem value={\"recovered\"}>recovered</MenuItem>\n      </Select>\n    </>\n\n  )\n}\n","import React from 'react'\nimport moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nexport default function SelectPeriod(props: any) {\n  const [period, setPeriod] = React.useState<string>(\"last month\")\n\n  const handleChange = (event: any) => {\n    setPeriod(event.target.value);\n    switch (event.target.value) {\n      case \"last week\":\n        props.setDates(`${moment().subtract(1, 'weeks').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 2 weeks\":\n        props.setDates(`${moment().subtract(2, 'weeks').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last month\":\n        props.setDates(`${moment().subtract(1, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 2 months\":\n        props.setDates(`${moment().subtract(2, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 4 months\":\n        props.setDates(`${moment().subtract(4, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 6 months\":\n        props.setDates(`${moment().subtract(6, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"since January 2020\":\n        props.setDates(`${moment().subtract(1, 'years').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      default:\n        props.setDates(`${moment().subtract(5, 'days').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n    }\n  }\n\n  return (\n    <>\n      <InputLabel className=\"pt-2 pb-0 mb-0\" style={{ color: \"white\" }}>Period</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-filled-label\"\n        id=\"demo-simple-select-filled\"\n        value={period}\n        defaultValue={\"last month\"}\n        onChange={handleChange}\n        className=\"ml-1 mb-2\"\n        style={{ backgroundColor: 'white', borderRadius: 5, width: \"auto\", paddingLeft: \"1px\" }}\n      >\n        <MenuItem value={\"last month\"} >last month</MenuItem>\n        <MenuItem value={\"last week\"} >last week</MenuItem>\n        <MenuItem value={\"last 2 weeks\"} >last 2 weeks</MenuItem>\n        <MenuItem value={\"last 2 months\"} >last 2 months</MenuItem>\n        <MenuItem value={\"last 4 months\"} >last 4 months</MenuItem>\n        <MenuItem value={\"last 6 months\"} >last 6 months</MenuItem>\n        <MenuItem value={\"since January 2020\"} >since January 2020</MenuItem>\n      </Select>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport BarChart from '../Charts/BarChart';\nimport LinearChart from '../Charts/LinearChart';\nimport moment from 'moment';\nimport { StoreContainer } from '../Store';\nimport Dashboard from '../Charts/Dashboard';\nimport Flag from '../modules/Flag';\nimport SelectCase from '../Charts/SelectCase';\nimport SelectPeriod from '../Charts/SelectPeriod';\nimport SortCountries from '../modules/SortCountries';\nimport TableCasesData from '../modules/TableCasesData';\n// import ListCountries from '../modules/ListCountries';\n// import { useParams, useHistory } from 'react-router-dom';\n\nimport _ from 'lodash';\nimport '../../App.css'\n\n\n// position: \"-webkit-sticky\", top: \"4.5rem\"\n\n\ninterface ICountry {\n  code: string,\n  name: string\n}\n\nexport default function HomeComponent() {\n  const [data, setData] = useState<any>(\"\");\n  const [date, setDate] = useState<any>(\"\");\n  const [countries, setCountries] = useState<any>([]);\n  const [dates, setDates] = React.useState<string>(`${moment().subtract(1, 'months').format()}`)\n  const [cases, setCases] = React.useState<string>(\"confirmed\")\n  const [X, setX] = useState<any>([]);\n  const [Y, setY] = useState<any>([]);\n  let countrySelect: ICountry = { code: \"fr\", name: 'france' };\n  const unstated = StoreContainer.useContainer();\n\n  function setGraph(data: any) {\n    setDate(\"World \" + moment(data.Date).format('YYYY/MM/DD'));// set date for graph Label Title\n    const infos = unstated.globalDataGraph(data.Global);// cleaning data =  returning a double table \n    setX(infos?.resultDates)\n    setY(infos?.resultCases)\n  }\n\n  /**\n   * function getCovidData to get all covid world info(infected, cured, deaths)\n   * @returns res : array of results of all infected\n   */\n  function getCovidData() {\n    try {\n      fetch(`https://api.covid19api.com/summary`, {\n        method: \"GET\",\n      }).then((response: any) => response.json()).then((res) => {\n        // setData(res);\n        setGraph(res)\n        return (res)\n      }).catch(err => alert(err));\n    } catch (err) {\n      console.log(err)\n      return;\n    }\n  };\n\n  /**\n   * function getAll : to get the total of all data in the store\n   */\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n/**\n * function to set Country and contry code to the store\n * @param event \n */\n  function handleClick(event: any) {\n    unstated.setCountry(event.currentTarget.dataset.name.toLowerCase());\n    unstated.setCode(event.currentTarget.dataset.code.toLowerCase());\n  }\n\n  /**\n   * allow to modify data choosen on click, (when you change the country)\n   */\n  React.useEffect(() => {\n    setCountries(unstated.country_list);\n    if (unstated.code) {\n      unstated.getCovidCountry(unstated.code, cases, dates);\n    } else if (countries.filter((countries: any) => countries.name.toLowerCase().includes(unstated.country)).length === 1) {\n      // eslint-disable-next-line\n      countrySelect = countries.filter((countries: any) => countries.name.toLowerCase().includes(unstated.country))[0];\n      unstated.setCode(countrySelect.code.toLowerCase());\n      unstated.getCovidCountry(countrySelect.code.toLowerCase(), \"confirmed\", `${moment().subtract(1, 'months').format()}`);\n    } else {\n      unstated.getCovidCountry(\"\", \"\", `${moment().subtract(30, 'days').format()}`);\n    }\n    // eslint-disable-next-line\n  }, [unstated.country, cases, dates])\n\n  React.useEffect(() => {\n    setData(getCovidData());\n    getAll();\n    // eslint-disable-next-line\n  }, [])\n  React.useEffect(() => {\n    if (!_.isEmpty(unstated.total)) {\n      let tmp: any = unstated.total;\n      if (!_.isEmpty(tmp.Countries))\n        setData(tmp.Countries.sort(SortCountries('TotalConfirmed', 'desc')));\n    }\n    // eslint-disable-next-line\n  }, [unstated.total])\n\n  return (\n    <>\n\n      <header>\n      </header>\n\n      <aside className=\"sidebar\">\n        <div className=\"field\" style={{ position: \"sticky\", top: \"0rem\", zIndex: 100, backgroundColor: '#333' }}>\n          <div className=\"control has-icons-left\" style={{ position: 'sticky' }} >\n            <span style={{ display: 'flex', flexDirection: 'column' }}>\n              <SelectCase setCases={setCases} className=\"is-fullwidth\" />\n              <SelectPeriod setDates={setDates} className=\"is-fullwidth\" />\n            </span>\n          </div>\n        </div>\n\n        <h3 className=\"mt-1\">Countries </h3>\n        {!_.isEmpty(unstated.code) && !_.isEmpty(unstated.country) ?\n          <TableCasesData />\n          : \"\"}\n\n        {data ? data.filter((countries: any) => countries.Country.toLowerCase().includes(unstated.country)).map((item: any, i: any) => <span data-name={item.Country} data-code={item.CountryCode}\n          className=\"button is-secondary\" key={i} onClick={handleClick}\n          style={{\n            margin: \"1px\", display: 'flex', justifyContent: \"space-between\",\n            backgroundColor: \"#333\", color: \"whitesmoke\", fontSize: \"0.8em\",\n          }} >\n          {item.Country}\n          <span>{item.TotalConfirmed}{Flag(item.CountryCode)}</span>\n        </span>) : \"\"}\n      </aside>\n\n      <section className=\"main\">\n        <Dashboard data={unstated.total ? unstated.total : (data ? data : {})} />\n        <div className=\"sticky-top\">\n          <div className=\"nav flex-column\">\n            {unstated.code ?\n              <span><LinearChart dataCountry={unstated.data} labelsCountry={unstated.labels} country={`${unstated.code.toUpperCase()}`} /></span>\n              : <></>}\n            {data ?\n              <BarChart dataCountry={Y} labelsCountry={X} country={date} />\n              : <></>}\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n","export default function SortCountries(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n    const varA = (typeof a[key] === 'string')\n      ? a[key].toUpperCase() : a[key];\n    const varB = (typeof b[key] === 'string')\n      ? b[key].toUpperCase() : b[key];\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return (\n      (order === 'desc') ? (comparison * -1) : comparison\n    );\n  };\n}\n","import React from 'react';\nimport Layout from './components/Layout';\nimport MapComponent from './components/Pages/MapComponent';\nimport HomeComponent from './components/Pages/HomeComponent';\nimport { StoreContainer } from \"./components/Store\"\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <StoreContainer.Provider>\n        <Layout className=\"App\">\n          <Switch>\n            <Route exact path={'/'} component={MapComponent} />\n            <Route exact path={'/covid19'} component={MapComponent} />\n            <Route exact path={'/stats'} component={HomeComponent} />\n            <Route exact path={'/covid19/stats'} component={HomeComponent} />\n            <Route path={'*'} ><NotFound /></Route>\n          </Switch>\n        </Layout>\n      </StoreContainer.Provider>\n    </Router>\n  );\n}\n\nfunction NotFound() {\n  return (\n    <h1>Page Not Found</h1>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}