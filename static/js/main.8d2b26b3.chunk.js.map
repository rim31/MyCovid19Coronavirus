{"version":3,"sources":["components/Store.tsx","components/modules/SearchBar.tsx","components/Layout.tsx","components/modules/TableCasesData.tsx","components/modules/Flag.js","components/modules/ListCountries.tsx","components/Charts/Dashboard.tsx","components/Map/MapChart.tsx","components/Pages/MainComponent.tsx","components/Charts/BarChart.tsx","components/Pages/MapComponent.tsx","components/Charts/LinearChart.tsx","components/Charts/SelectCase.tsx","components/Charts/SelectPeriod.tsx","components/Pages/HomeComponent.tsx","components/modules/SortCountries.js","components/Pages/AboutComponent.tsx","components/Pages/GraphComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StoreContainer","createContainer","React","country","setCountry","code","setCode","covidApi","setCovidApi","countriesML","setCountriesML","data","setData","dataDiff","setDataDiff","total","setTotal","labels","setLabels","markers","setMarkers","headers","Headers","country_list","countryDataGraph","caseType","dateTo","resultCases","resultDates","length","forEach","item","moment","last_update","isAfter","push","cases","format","resultCasesDiff","_","map","e","i","pop","console","log","getCovidApi","fetch","method","redirect","then","response","json","res","reverse","catch","err","alert","getTotal","a","resp","getCovidCountry","updateTotalCovid","getCountriesML","text","globalDataGraph","countriesListData","resultCountries","result","Country","TotalConfirmed","sortable","getCovidMapMarkers","arr1","arr2","Countries","union","obj1","same","find","obj2","extend","reject","sort","property","sortOrder","substr","b","dynamicSort","updateCountriesML","SearchBar","unstated","useContainer","Autocomplete","id","options","autoHighlight","getOptionLabel","option","name","renderOption","Fragment","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","onChange","values","renderInput","params","TextField","style","backgroundColor","borderRadius","width","label","variant","size","inputProps","value","WhiteTextTypography","withStyles","root","color","Typography","Copyright","align","Link","href","Date","getFullYear","Layout","props","className","display","flexWrap","justifyContent","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","textDecoration","paddingLeft","to","onClick","setPage","fontWeight","children","Box","pt","bottom","position","right","TableCasesData","countries","isEmpty","useState","setResult","useEffect","temp","filter","CountryCode","fontSize","NewConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","Flag","ListCountries","handleClick","event","currentTarget","dataset","toLowerCase","key","order","hasOwnProperty","varA","varB","comparison","compareValues","flexDirection","overflow","whiteSpace","textOverflow","maxWidth","data-name","data-code","Dashboard","Global","confirmedAverage","deathsAverage","recoveredAverage","content","Population","toFixed","zIndex","marginBottom","padding","MapChart","maxMarkers","setMaxMarkers","myMarkers","markerOffset","lon","lat","mapDataCountries","undefined","projectionConfig","rotate","scale","zoom","geography","geographies","geo","rsmKey","fill","stroke","onMouseEnter","properties","NAME","POP_EST","ISO_A2","setTooltipContent","onMouseLeave","default","outline","hover","pressed","o","coordinates","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","textAnchor","textShadow","cursor","MainComponent","setContent","getCovidData","getAll","BarChart","labelsCountry","datasets","dataCountry","legend","title","fontColor","HomeComponent","date","setDate","X","setX","Y","setY","infos","setGraph","LinearChart","hoverBackgroundColor","scales","yAxes","ticks","xAxes","SelectCase","SelectPeriod","setCountries","subtract","dates","setDates","setCases","countrySelect","includes","tmp","SortCountries","top","target","placeholder","margin","AboutComponent","GraphComponent","history","useHistory","textAlign","onSubmit","evt","preventDefault","marginLeft","data-ride","NotFound","App","page","Provider","exact","path","component","MapComponent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8d2b26b3.chunk.js","sourcesContent":["// eslint-disable-next-line\nimport * as React from 'react';\nimport { createContainer } from \"unstated-next\";\nimport moment from 'moment';\nimport _ from 'lodash';\n\n// source : \"https://api.covid19api.com/\"\n// source : \"https://covidtracking.com/api/us/daily\"\n\ninterface ICountryData {\n  Cases: Number,\n  City: String,\n  CityName: String,\n  Country: String,\n  CountryName: String,\n  Date: Date,\n  Lat: String,\n  Lon: String,\n  Province: String,\n  Status: String,\n}\n\ninterface IGlobalData {\n  NewConfirmed: Number,\n  NewDeaths: Number,\n  NewRecovered: Number,\n  TotalConfirmed: Number,\n  TotalDeaths: Number,\n  TotalRecovered: Number\n}\n\ninterface ICountry {\n  Country: string,\n  CountryName: string,\n  Slug: string,\n  NewConfirmed: number,\n  TotalConfirmed: number,\n  NewDeaths: number,\n  TotalDeaths: number,\n  NewRecovered: number,\n  TotalRecovered: number,\n  Date: Date\n}\n\ninterface IDataCovid {\n  country: string,\n  cases: number,\n  deaths: number,\n  recovered: number,\n  last_update: Date\n}\n\ninterface ICountries {\n  timezones: string[],\n  latlon?: string[],\n  lat?: number,\n  lon?: number,\n  name: string,\n  code: string,\n  capital: string\n}\n\nexport const useStore = () => {\n  const [country, setCountry] = React.useState<string>(\"\");\n  const [code, setCode] = React.useState<string>(\"\");\n  const [covidApi, setCovidApi] = React.useState<Object[] | null | void | undefined>([]);\n  const [countriesML, setCountriesML] = React.useState<Object[] | any>([]);\n  const [data, setData] = React.useState<Object[] | void | null | undefined>([]);// data for graph\n  const [dataDiff, setDataDiff] = React.useState<number[] | any[] | undefined>([]);// data diff for graph\n  const [total, setTotal] = React.useState<IGlobalData[] | void | null | undefined>([]);\n  const [labels, setLabels] = React.useState<Object[] | void | null | undefined>([]);\n  const [markers, setMarkers] = React.useState<any[] | undefined>([]);\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n\n  const debug: boolean = true;\n\n  const country_list = [\n    {\n      \"timezones\": [\n        \"America/Aruba\"\n      ],\n      \"lat\": 12.5,\n      \"lon\": -69.96666666,\n      \"name\": \"Aruba\",\n      \"code\": \"AW\",\n      \"capital\": \"Oranjestad\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kabul\"\n      ],\n      \"lat\": 33,\n      \"lon\": 65,\n      \"name\": \"Afghanistan\",\n      \"code\": \"AF\",\n      \"capital\": \"Kabul\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Luanda\"\n      ],\n      \"lat\": 12.5,\n      \"lon\": 18.5,\n      \"name\": \"Angola\",\n      \"code\": \"AO\",\n      \"capital\": \"Luanda\"\n    },\n    {\n      \"timezones\": [\n        \"America/Anguilla\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": -63.16666666,\n      \"name\": \"Anguilla\",\n      \"code\": \"AI\",\n      \"capital\": \"The Valley\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Mariehamn\"\n      ],\n      \"lat\": 60.116667,\n      \"lon\": 19.9,\n      \"name\": \"\\u00c5land Islands\",\n      \"code\": \"AX\",\n      \"capital\": \"Mariehamn\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Tirane\"\n      ],\n      \"lat\": 41,\n      \"lon\": 20,\n      \"name\": \"Albania\",\n      \"code\": \"AL\",\n      \"capital\": \"Tirana\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Andorra\"\n      ],\n      \"lat\": 42.5,\n      \"lon\": 1.5,\n      \"name\": \"Andorra\",\n      \"code\": \"AD\",\n      \"capital\": \"Andorra la Vella\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dubai\"\n      ],\n      \"lat\": 24,\n      \"lon\": 54,\n      \"name\": \"United Arab Emirates\",\n      \"code\": \"AE\",\n      \"capital\": \"Abu Dhabi\"\n    },\n    {\n      \"timezones\": [\n        \"America/Argentina/Buenos_Aires\",\n        \"America/Argentina/Cordoba\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/Jujuy\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Catamarca\",\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/Mendoza\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Ushuaia\"\n      ],\n      \"lon\": -58.3816, \"lat\": -34.6037,\n      \"name\": \"Argentina\",\n      \"code\": \"AR\",\n      \"capital\": \"Buenos Aires\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Yerevan\"\n      ],\n      \"lat\": 40,\n      \"lon\": 45,\n      \"name\": \"Armenia\",\n      \"code\": \"AM\",\n      \"capital\": \"Yerevan\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Pago_Pago\"\n      ],\n      \"lat\": 14.33333333,\n      \"lon\": -170,\n      \"name\": \"American Samoa\",\n      \"code\": \"AS\",\n      \"capital\": \"Pago Pago\"\n    },\n    {\n      \"timezones\": [\n        \"Antarctica/McMurdo\",\n        \"Antarctica/Casey\",\n        \"Antarctica/Davis\",\n        \"Antarctica/DumontDUrville\",\n        \"Antarctica/Mawson\",\n        \"Antarctica/Palmer\",\n        \"Antarctica/Rothera\",\n        \"Antarctica/Syowa\",\n        \"Antarctica/Troll\",\n        \"Antarctica/Vostok\"\n      ],\n      \"lat\": 90,\n      \"lon\": 0,\n      \"name\": \"Antarctica\",\n      \"code\": \"AQ\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"Indian/Kerguelen\"\n      ],\n      \"lat\": 49.25,\n      \"lon\": 69.167,\n      \"name\": \"French Southern and Antarctic Lands\",\n      \"code\": \"TF\",\n      \"capital\": \"Port-aux-Fran\\u00e7ais\"\n    },\n    {\n      \"timezones\": [\n        \"America/Antigua\"\n      ],\n      \"lat\": 17.05,\n      \"lon\": -61.8,\n      \"name\": \"Antigua and Barbuda\",\n      \"code\": \"AG\",\n      \"capital\": \"Saint John's\"\n    },\n    {\n      \"timezones\": [\n        \"Australia/Lord_Howe\",\n        \"Antarctica/Macquarie\",\n        \"Australia/Hobart\",\n        \"Australia/Currie\",\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\",\n        \"Australia/Broken_Hill\",\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\",\n        \"Australia/Adelaide\",\n        \"Australia/Darwin\",\n        \"Australia/Perth\",\n        \"Australia/Eucla\"\n      ],\n      \"lat\": 27,\n      \"lon\": 133,\n      \"name\": \"Australia\",\n      \"code\": \"AU\",\n      \"capital\": \"Canberra\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vienna\"\n      ],\n      \"lat\": 47.33333333,\n      \"lon\": 13.33333333,\n      \"name\": \"Austria\",\n      \"code\": \"AT\",\n      \"capital\": \"Vienna\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Baku\"\n      ],\n      \"lat\": 40.5,\n      \"lon\": 47.5,\n      \"name\": \"Azerbaijan\",\n      \"code\": \"AZ\",\n      \"capital\": \"Baku\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bujumbura\"\n      ],\n      \"lat\": 3.5,\n      \"lon\": 30,\n      \"name\": \"Burundi\",\n      \"code\": \"BI\",\n      \"capital\": \"Bujumbura\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Brussels\"\n      ],\n      \"lat\": 50.83333333,\n      \"lon\": 4,\n      \"name\": \"Belgium\",\n      \"code\": \"BE\",\n      \"capital\": \"Brussels\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Porto-Novo\"\n      ],\n      \"lat\": 9.5,\n      \"lon\": 2.25,\n      \"name\": \"Benin\",\n      \"code\": \"BJ\",\n      \"capital\": \"Porto-Novo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Ouagadougou\"\n      ],\n      \"lat\": 13,\n      \"lon\": -2,\n      \"name\": \"Burkina Faso\",\n      \"code\": \"BF\",\n      \"capital\": \"Ouagadougou\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dhaka\"\n      ],\n      \"lat\": 24,\n      \"lon\": 90,\n      \"name\": \"Bangladesh\",\n      \"code\": \"BD\",\n      \"capital\": \"Dhaka\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Sofia\"\n      ],\n      \"lat\": 43,\n      \"lon\": 25,\n      \"name\": \"Bulgaria\",\n      \"code\": \"BG\",\n      \"capital\": \"Sofia\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Bahrain\"\n      ],\n      \"lat\": 26,\n      \"lon\": 50.55,\n      \"name\": \"Bahrain\",\n      \"code\": \"BH\",\n      \"capital\": \"Manama\"\n    },\n    {\n      \"timezones\": [\n        \"America/Nassau\"\n      ],\n      \"lat\": 24.25,\n      \"lon\": -76,\n      \"name\": \"Bahamas\",\n      \"code\": \"BS\",\n      \"capital\": \"Nassau\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Sarajevo\"\n      ],\n      \"lat\": 44,\n      \"lon\": 18,\n      \"name\": \"Bosnia and Herzegovina\",\n      \"code\": \"BA\",\n      \"capital\": \"Sarajevo\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Barthelemy\"\n      ],\n      \"lat\": 18.5,\n      \"lon\": -63.41666666,\n      \"name\": \"Saint Barth\\u00e9lemy\",\n      \"code\": \"BL\",\n      \"capital\": \"Gustavia\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Minsk\"\n      ],\n      \"lat\": 53,\n      \"lon\": 28,\n      \"name\": \"Belarus\",\n      \"code\": \"BY\",\n      \"capital\": \"Minsk\"\n    },\n    {\n      \"timezones\": [\n        \"America/Belize\"\n      ],\n      \"lat\": 17.25,\n      \"lon\": -88.75,\n      \"name\": \"Belize\",\n      \"code\": \"BZ\",\n      \"capital\": \"Belmopan\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Bermuda\"\n      ],\n      \"lat\": 32.33333333,\n      \"lon\": -64.75,\n      \"name\": \"Bermuda\",\n      \"code\": \"BM\",\n      \"capital\": \"Hamilton\"\n    },\n    {\n      \"timezones\": [\n        \"America/La_Paz\"\n      ],\n      \"lon\": -68.1193, \"lat\": -16.4897,\n      \"name\": \"Bolivia\",\n      \"code\": \"BO\",\n      \"capital\": \"Sucre\"\n    },\n    {\n      \"timezones\": [\n        \"America/Noronha\",\n        \"America/Belem\",\n        \"America/Fortaleza\",\n        \"America/Recife\",\n        \"America/Araguaina\",\n        \"America/Maceio\",\n        \"America/Bahia\",\n        \"America/Sao_Paulo\",\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\",\n        \"America/Santarem\",\n        \"America/Porto_Velho\",\n        \"America/Boa_Vista\",\n        \"America/Manaus\",\n        \"America/Eirunepe\",\n        \"America/Rio_Branco\"\n      ],\n      \"lat\": -34.6037,\n      \"lon\": -58.3816,\n      \"name\": \"Brazil\",\n      \"code\": \"BR\",\n      \"capital\": \"Bras\\u00edlia\"\n    },\n    {\n      \"timezones\": [\n        \"America/Barbados\"\n      ],\n      \"lat\": 13.16666666,\n      \"lon\": -59.53333333,\n      \"name\": \"Barbados\",\n      \"code\": \"BB\",\n      \"capital\": \"Bridgetown\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Brunei\"\n      ],\n      \"lat\": 4.5,\n      \"lon\": 114.66666666,\n      \"name\": \"Brunei\",\n      \"code\": \"BN\",\n      \"capital\": \"Bandar Seri Begawan\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Thimphu\"\n      ],\n      \"lat\": 27.5,\n      \"lon\": 90.5,\n      \"name\": \"Bhutan\",\n      \"code\": \"BT\",\n      \"capital\": \"Thimphu\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Oslo\"\n      ],\n      \"lat\": 54.43333333,\n      \"lon\": 3.4,\n      \"name\": \"Bouvet Island\",\n      \"code\": \"BV\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"Africa/Gaborone\"\n      ],\n      \"lat\": 22,\n      \"lon\": 24,\n      \"name\": \"Botswana\",\n      \"code\": \"BW\",\n      \"capital\": \"Gaborone\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bangui\"\n      ],\n      \"lat\": 7,\n      \"lon\": 21,\n      \"name\": \"Central African Republic\",\n      \"code\": \"CF\",\n      \"capital\": \"Bangui\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Johns\",\n        \"America/Halifax\",\n        \"America/Glace_Bay\",\n        \"America/Moncton\",\n        \"America/Goose_Bay\",\n        \"America/Blanc-Sablon\",\n        \"America/Toronto\",\n        \"America/Nipigon\",\n        \"America/Thunder_Bay\",\n        \"America/Iqaluit\",\n        \"America/Pangnirtung\",\n        \"America/Atikokan\",\n        \"America/Winnipeg\",\n        \"America/Rainy_River\",\n        \"America/Resolute\",\n        \"America/Rankin_Inlet\",\n        \"America/Regina\",\n        \"America/Swift_Current\",\n        \"America/Edmonton\",\n        \"America/Cambridge_Bay\",\n        \"America/Yellowknife\",\n        \"America/Inuvik\",\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Fort_Nelson\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"America/Dawson\"\n      ],\n      \"lat\": 60,\n      \"lon\": -95,\n      \"name\": \"Canada\",\n      \"code\": \"CA\",\n      \"capital\": \"Ottawa\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Cocos\"\n      ],\n      \"lat\": 12.5,\n      \"lon\": 96.83333333,\n      \"name\": \"Cocos (Keeling) Islands\",\n      \"code\": \"CC\",\n      \"capital\": \"West Island\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Zurich\"\n      ],\n      \"lat\": 47,\n      \"lon\": 8,\n      \"name\": \"Switzerland\",\n      \"code\": \"CH\",\n      \"capital\": \"Bern\"\n    },\n    {\n      \"timezones\": [\n        \"America/Santiago\",\n        \"Pacific/Easter\"\n      ],\n      \"lon\": -70.6693, \"lat\": -33.4489,\n      \"name\": \"Chile\",\n      \"code\": \"CL\",\n      \"capital\": \"Santiago\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Shanghai\",\n        \"Asia/Urumqi\"\n      ],\n      \"lat\": 35,\n      \"lon\": 105,\n      \"name\": \"China\",\n      \"code\": \"CN\",\n      \"capital\": \"Beijing\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Abidjan\"\n      ],\n      \"lat\": 8,\n      \"lon\": -5,\n      \"name\": \"Ivory Coast\",\n      \"code\": \"CI\",\n      \"capital\": \"Yamoussoukro\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Douala\"\n      ],\n      \"lat\": 6,\n      \"lon\": 12,\n      \"name\": \"Cameroon\",\n      \"code\": \"CM\",\n      \"capital\": \"Yaound\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Kinshasa\",\n        \"Africa/Lubumbashi\"\n      ],\n      \"lat\": 0,\n      \"lon\": 25,\n      \"name\": \"DR Congo\",\n      \"code\": \"CD\",\n      \"capital\": \"Kinshasa\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Brazzaville\"\n      ],\n      \"lat\": 1,\n      \"lon\": 15,\n      \"name\": \"Republic of the Congo\",\n      \"code\": \"CG\",\n      \"capital\": \"Brazzaville\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Rarotonga\"\n      ],\n      \"lat\": 21.23333333,\n      \"lon\": -159.76666666,\n      \"name\": \"Cook Islands\",\n      \"code\": \"CK\",\n      \"capital\": \"Avarua\"\n    },\n    {\n      \"timezones\": [\n        \"America/Bogota\"\n      ],\n      \"lon\": -74.0721, \"lat\": 4.711,\n      \"name\": \"Colombia\",\n      \"code\": \"CO\",\n      \"capital\": \"Bogot\\u00e1\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Comoro\"\n      ],\n      \"lat\": 12.16666666,\n      \"lon\": 44.25,\n      \"name\": \"Comoros\",\n      \"code\": \"KM\",\n      \"capital\": \"Moroni\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Cape_Verde\"\n      ],\n      \"lat\": 16,\n      \"lon\": -24,\n      \"name\": \"Cape Verde\",\n      \"code\": \"CV\",\n      \"capital\": \"Praia\"\n    },\n    {\n      \"timezones\": [\n        \"America/Costa_Rica\"\n      ],\n      \"lat\": 10,\n      \"lon\": -84,\n      \"name\": \"Costa Rica\",\n      \"code\": \"CR\",\n      \"capital\": \"San Jos\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"America/Havana\"\n      ],\n      \"lat\": 21.5,\n      \"lon\": -80,\n      \"name\": \"Cuba\",\n      \"code\": \"CU\",\n      \"capital\": \"Havana\"\n    },\n    {\n      \"timezones\": [\n        \"America/Curacao\"\n      ],\n      \"lat\": 12.116667,\n      \"lon\": -68.933333,\n      \"name\": \"Cura\\u00e7ao\",\n      \"code\": \"CW\",\n      \"capital\": \"Willemstad\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Christmas\"\n      ],\n      \"lat\": 10.5,\n      \"lon\": 105.66666666,\n      \"name\": \"Christmas Island\",\n      \"code\": \"CX\",\n      \"capital\": \"Flying Fish Cove\"\n    },\n    {\n      \"timezones\": [\n        \"America/Cayman\"\n      ],\n      \"lat\": 19.5,\n      \"lon\": -80.5,\n      \"name\": \"Cayman Islands\",\n      \"code\": \"KY\",\n      \"capital\": \"George Town\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Nicosia\"\n      ],\n      \"lat\": 35,\n      \"lon\": 33,\n      \"name\": \"Cyprus\",\n      \"code\": \"CY\",\n      \"capital\": \"Nicosia\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Prague\"\n      ],\n      \"lat\": 49.75,\n      \"lon\": 15.5,\n      \"name\": \"Czech Republic\",\n      \"code\": \"CZ\",\n      \"capital\": \"Prague\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Berlin\",\n        \"Europe/Busingen\"\n      ],\n      \"lat\": 51,\n      \"lon\": 9,\n      \"name\": \"Germany\",\n      \"code\": \"DE\",\n      \"capital\": \"Berlin\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Djibouti\"\n      ],\n      \"lat\": 11.5,\n      \"lon\": 43,\n      \"name\": \"Djibouti\",\n      \"code\": \"DJ\",\n      \"capital\": \"Djibouti\"\n    },\n    {\n      \"timezones\": [\n        \"America/Dominica\"\n      ],\n      \"lat\": 15.41666666,\n      \"lon\": -61.33333333,\n      \"name\": \"Dominica\",\n      \"code\": \"DM\",\n      \"capital\": \"Roseau\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Copenhagen\"\n      ],\n      \"lat\": 56,\n      \"lon\": 10,\n      \"name\": \"Denmark\",\n      \"code\": \"DK\",\n      \"capital\": \"Copenhagen\"\n    },\n    {\n      \"timezones\": [\n        \"America/Santo_Domingo\"\n      ],\n      \"lat\": 19,\n      \"lon\": -70.66666666,\n      \"name\": \"Dominican Republic\",\n      \"code\": \"DO\",\n      \"capital\": \"Santo Domingo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Algiers\"\n      ],\n      \"lat\": 28,\n      \"lon\": 3,\n      \"name\": \"Algeria\",\n      \"code\": \"DZ\",\n      \"capital\": \"Algiers\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guayaquil\",\n        \"Pacific/Galapagos\"\n      ],\n      \"lon\": -78.4678, \"lat\": -0.1807,\n      \"name\": \"Ecuador\",\n      \"code\": \"EC\",\n      \"capital\": \"Quito\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Cairo\"\n      ],\n      \"lat\": 27,\n      \"lon\": 30,\n      \"name\": \"Egypt\",\n      \"code\": \"EG\",\n      \"capital\": \"Cairo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Asmara\"\n      ],\n      \"lat\": 15,\n      \"lon\": 39,\n      \"name\": \"Eritrea\",\n      \"code\": \"ER\",\n      \"capital\": \"Asmara\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/El_Aaiun\"\n      ],\n      \"lat\": 24.5,\n      \"lon\": -13,\n      \"name\": \"Western Sahara\",\n      \"code\": \"EH\",\n      \"capital\": \"El Aai\\u00fan\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Madrid\",\n        \"Africa/Ceuta\",\n        \"Atlantic/Canary\"\n      ],\n      \"lat\": 40,\n      \"lon\": -4,\n      \"name\": \"Spain\",\n      \"code\": \"ES\",\n      \"capital\": \"Madrid\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Tallinn\"\n      ],\n      \"lat\": 59,\n      \"lon\": 26,\n      \"name\": \"Estonia\",\n      \"code\": \"EE\",\n      \"capital\": \"Tallinn\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Addis_Ababa\"\n      ],\n      \"lat\": 8,\n      \"lon\": 38,\n      \"name\": \"Ethiopia\",\n      \"code\": \"ET\",\n      \"capital\": \"Addis Ababa\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Helsinki\"\n      ],\n      \"lat\": 64,\n      \"lon\": 26,\n      \"name\": \"Finland\",\n      \"code\": \"FI\",\n      \"capital\": \"Helsinki\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Fiji\"\n      ],\n      \"lat\": 18,\n      \"lon\": 175,\n      \"name\": \"Fiji\",\n      \"code\": \"FJ\",\n      \"capital\": \"Suva\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Stanley\"\n      ],\n      \"lat\": 51.75,\n      \"lon\": -59,\n      \"name\": \"Falkland Islands\",\n      \"code\": \"FK\",\n      \"capital\": \"Stanley\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Paris\"\n      ],\n      \"lat\": 46,\n      \"lon\": 2,\n      \"name\": \"France\",\n      \"code\": \"FR\",\n      \"capital\": \"Paris\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Faroe\"\n      ],\n      \"lat\": 62,\n      \"lon\": -7,\n      \"name\": \"Faroe Islands\",\n      \"code\": \"FO\",\n      \"capital\": \"T\\u00f3rshavn\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Chuuk\",\n        \"Pacific/Pohnpei\",\n        \"Pacific/Kosrae\"\n      ],\n      \"lat\": 6.91666666,\n      \"lon\": 158.25,\n      \"name\": \"Micronesia\",\n      \"code\": \"FM\",\n      \"capital\": \"Palikir\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Libreville\"\n      ],\n      \"lat\": 1,\n      \"lon\": 11.75,\n      \"name\": \"Gabon\",\n      \"code\": \"GA\",\n      \"capital\": \"Libreville\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/London\"\n      ],\n      \"lat\": 54,\n      \"lon\": -2,\n      \"name\": \"United Kingdom\",\n      \"code\": \"GB\",\n      \"capital\": \"London\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Tbilisi\"\n      ],\n      \"lat\": 42,\n      \"lon\": 43.5,\n      \"name\": \"Georgia\",\n      \"code\": \"GE\",\n      \"capital\": \"Tbilisi\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Guernsey\"\n      ],\n      \"lat\": 49.46666666,\n      \"lon\": -2.58333333,\n      \"name\": \"Guernsey\",\n      \"code\": \"GG\",\n      \"capital\": \"St. Peter Port\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Accra\"\n      ],\n      \"lat\": 8,\n      \"lon\": -2,\n      \"name\": \"Ghana\",\n      \"code\": \"GH\",\n      \"capital\": \"Accra\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Gibraltar\"\n      ],\n      \"lat\": 36.13333333,\n      \"lon\": -5.35,\n      \"name\": \"Gibraltar\",\n      \"code\": \"GI\",\n      \"capital\": \"Gibraltar\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Conakry\"\n      ],\n      \"lat\": 11,\n      \"lon\": -10,\n      \"name\": \"Guinea\",\n      \"code\": \"GN\",\n      \"capital\": \"Conakry\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guadeloupe\"\n      ],\n      \"lat\": 16.25,\n      \"lon\": -61.583333,\n      \"name\": \"Guadeloupe\",\n      \"code\": \"GP\",\n      \"capital\": \"Basse-Terre\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Banjul\"\n      ],\n      \"lat\": 13.46666666,\n      \"lon\": -16.56666666,\n      \"name\": \"Gambia\",\n      \"code\": \"GM\",\n      \"capital\": \"Banjul\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bissau\"\n      ],\n      \"lat\": 12,\n      \"lon\": -15,\n      \"name\": \"Guinea-Bissau\",\n      \"code\": \"GW\",\n      \"capital\": \"Bissau\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Malabo\"\n      ],\n      \"lat\": 2,\n      \"lon\": 10,\n      \"name\": \"Equatorial Guinea\",\n      \"code\": \"GQ\",\n      \"capital\": \"Malabo\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Athens\"\n      ],\n      \"lat\": 39,\n      \"lon\": 22,\n      \"name\": \"Greece\",\n      \"code\": \"GR\",\n      \"capital\": \"Athens\"\n    },\n    {\n      \"timezones\": [\n        \"America/Grenada\"\n      ],\n      \"lat\": 12.11666666,\n      \"lon\": -61.66666666,\n      \"name\": \"Grenada\",\n      \"code\": \"GD\",\n      \"capital\": \"St. George's\"\n    },\n    {\n      \"timezones\": [\n        \"America/Godthab\",\n        \"America/Danmarkshavn\",\n        \"America/Scoresbysund\",\n        \"America/Thule\"\n      ],\n      \"lat\": 72,\n      \"lon\": -40,\n      \"name\": \"Greenland\",\n      \"code\": \"GL\",\n      \"capital\": \"Nuuk\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guatemala\"\n      ],\n      \"lat\": 15.5,\n      \"lon\": -90.25,\n      \"name\": \"Guatemala\",\n      \"code\": \"GT\",\n      \"capital\": \"Guatemala City\"\n    },\n    {\n      \"timezones\": [\n        \"America/Cayenne\"\n      ],\n      \"lat\": 4,\n      \"lon\": -53,\n      \"name\": \"French Guiana\",\n      \"code\": \"GF\",\n      \"capital\": \"Cayenne\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Guam\"\n      ],\n      \"lat\": 13.46666666,\n      \"lon\": 144.78333333,\n      \"name\": \"Guam\",\n      \"code\": \"GU\",\n      \"capital\": \"Hag\\u00e5t\\u00f1a\"\n    },\n    {\n      \"timezones\": [\n        \"America/Guyana\"\n      ],\n      \"lon\": -58.1551, \"lat\": 6.8013,\n      \"name\": \"Guyana\",\n      \"code\": \"GY\",\n      \"capital\": \"Georgetown\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Hong_Kong\"\n      ],\n      \"lat\": 22.267,\n      \"lon\": 114.188,\n      \"name\": \"Hong Kong\",\n      \"code\": \"HK\",\n      \"capital\": \"City of Victoria\"\n    },\n    {\n      \"timezones\": [\n        \"America/Tegucigalpa\"\n      ],\n      \"lat\": 15,\n      \"lon\": -86.5,\n      \"name\": \"Honduras\",\n      \"code\": \"HN\",\n      \"capital\": \"Tegucigalpa\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Zagreb\"\n      ],\n      \"lat\": 45.16666666,\n      \"lon\": 15.5,\n      \"name\": \"Croatia\",\n      \"code\": \"HR\",\n      \"capital\": \"Zagreb\"\n    },\n    {\n      \"timezones\": [\n        \"America/Port-au-Prince\"\n      ],\n      \"lat\": 19,\n      \"lon\": -72.41666666,\n      \"name\": \"Haiti\",\n      \"code\": \"HT\",\n      \"capital\": \"Port-au-Prince\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Budapest\"\n      ],\n      \"lat\": 47,\n      \"lon\": 20,\n      \"name\": \"Hungary\",\n      \"code\": \"HU\",\n      \"capital\": \"Budapest\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Jakarta\",\n        \"Asia/Pontianak\",\n        \"Asia/Makassar\",\n        \"Asia/Jayapura\"\n      ],\n      \"lat\": 5,\n      \"lon\": 120,\n      \"name\": \"Indonesia\",\n      \"code\": \"ID\",\n      \"capital\": \"Jakarta\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Isle_of_Man\"\n      ],\n      \"lat\": 54.25,\n      \"lon\": -4.5,\n      \"name\": \"Isle of Man\",\n      \"code\": \"IM\",\n      \"capital\": \"Douglas\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kolkata\"\n      ],\n      \"lat\": 20,\n      \"lon\": 77,\n      \"name\": \"India\",\n      \"code\": \"IN\",\n      \"capital\": \"New Delhi\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Chagos\"\n      ],\n      \"lat\": 6,\n      \"lon\": 71.5,\n      \"name\": \"British Indian Ocean Territory\",\n      \"code\": \"IO\",\n      \"capital\": \"Diego Garcia\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Dublin\"\n      ],\n      \"lat\": 53,\n      \"lon\": -8,\n      \"name\": \"Ireland\",\n      \"code\": \"IE\",\n      \"capital\": \"Dublin\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Tehran\"\n      ],\n      \"lat\": 32,\n      \"lon\": 53,\n      \"name\": \"Iran\",\n      \"code\": \"IR\",\n      \"capital\": \"Tehran\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Baghdad\"\n      ],\n      \"lat\": 33,\n      \"lon\": 44,\n      \"name\": \"Iraq\",\n      \"code\": \"IQ\",\n      \"capital\": \"Baghdad\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/Reykjavik\"\n      ],\n      \"lat\": 65,\n      \"lon\": -18,\n      \"name\": \"Iceland\",\n      \"code\": \"IS\",\n      \"capital\": \"Reykjavik\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Jerusalem\"\n      ],\n      \"lat\": 31.47,\n      \"lon\": 35.13,\n      \"name\": \"Israel\",\n      \"code\": \"IL\",\n      \"capital\": \"Jerusalem\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Rome\"\n      ],\n      \"lat\": 42.83333333,\n      \"lon\": 12.83333333,\n      \"name\": \"Italy\",\n      \"code\": \"IT\",\n      \"capital\": \"Rome\"\n    },\n    {\n      \"timezones\": [\n        \"America/Jamaica\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": -77.5,\n      \"name\": \"Jamaica\",\n      \"code\": \"JM\",\n      \"capital\": \"Kingston\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Jersey\"\n      ],\n      \"lat\": 49.25,\n      \"lon\": -2.16666666,\n      \"name\": \"Jersey\",\n      \"code\": \"JE\",\n      \"capital\": \"Saint Helier\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Amman\"\n      ],\n      \"lat\": 31,\n      \"lon\": 36,\n      \"name\": \"Jordan\",\n      \"code\": \"JO\",\n      \"capital\": \"Amman\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Tokyo\"\n      ],\n      \"lat\": 36,\n      \"lon\": 138,\n      \"name\": \"Japan\",\n      \"code\": \"JP\",\n      \"capital\": \"Tokyo\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Almaty\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Aqtobe\",\n        \"Asia/Aqtau\",\n        \"Asia/Oral\"\n      ],\n      \"lat\": 48,\n      \"lon\": 68,\n      \"name\": \"Kazakhstan\",\n      \"code\": \"KZ\",\n      \"capital\": \"Astana\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Nairobi\"\n      ],\n      \"lat\": 1,\n      \"lon\": 38,\n      \"name\": \"Kenya\",\n      \"code\": \"KE\",\n      \"capital\": \"Nairobi\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Bishkek\"\n      ],\n      \"lat\": 41,\n      \"lon\": 75,\n      \"name\": \"Kyrgyzstan\",\n      \"code\": \"KG\",\n      \"capital\": \"Bishkek\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Phnom_Penh\"\n      ],\n      \"lat\": 13,\n      \"lon\": 105,\n      \"name\": \"Cambodia\",\n      \"code\": \"KH\",\n      \"capital\": \"Phnom Penh\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Tarawa\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Kiritimati\"\n      ],\n      \"lat\": 1.41666666,\n      \"lon\": 173,\n      \"name\": \"Kiribati\",\n      \"code\": \"KI\",\n      \"capital\": \"South Tarawa\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Kitts\"\n      ],\n      \"lat\": 17.33333333,\n      \"lon\": -62.75,\n      \"name\": \"Saint Kitts and Nevis\",\n      \"code\": \"KN\",\n      \"capital\": \"Basseterre\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Seoul\"\n      ],\n      \"lat\": 37,\n      \"lon\": 127.5,\n      \"name\": \"South Korea\",\n      \"code\": \"KR\",\n      \"capital\": \"Seoul\"\n    },\n    {\n      \"timezones\": [\"Europe/Belgrade\"],\n      \"lat\": 42.666667,\n      \"lon\": 21.166667,\n      \"name\": \"Kosovo\",\n      \"code\": \"XK\",\n      \"capital\": \"Pristina\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kuwait\"\n      ],\n      \"lat\": 29.5,\n      \"lon\": 45.75,\n      \"name\": \"Kuwait\",\n      \"code\": \"KW\",\n      \"capital\": \"Kuwait City\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Vientiane\"\n      ],\n      \"lat\": 18,\n      \"lon\": 105,\n      \"name\": \"Laos\",\n      \"code\": \"LA\",\n      \"capital\": \"Vientiane\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Beirut\"\n      ],\n      \"lat\": 33.83333333,\n      \"lon\": 35.83333333,\n      \"name\": \"Lebanon\",\n      \"code\": \"LB\",\n      \"capital\": \"Beirut\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Monrovia\"\n      ],\n      \"lat\": 6.5,\n      \"lon\": -9.5,\n      \"name\": \"Liberia\",\n      \"code\": \"LR\",\n      \"capital\": \"Monrovia\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Tripoli\"\n      ],\n      \"lat\": 25,\n      \"lon\": 17,\n      \"name\": \"Libya\",\n      \"code\": \"LY\",\n      \"capital\": \"Tripoli\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Lucia\"\n      ],\n      \"lat\": 13.88333333,\n      \"lon\": -60.96666666,\n      \"name\": \"Saint Lucia\",\n      \"code\": \"LC\",\n      \"capital\": \"Castries\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vaduz\"\n      ],\n      \"lat\": 47.26666666,\n      \"lon\": 9.53333333,\n      \"name\": \"Liechtenstein\",\n      \"code\": \"LI\",\n      \"capital\": \"Vaduz\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Colombo\"\n      ],\n      \"lat\": 7,\n      \"lon\": 81,\n      \"name\": \"Sri Lanka\",\n      \"code\": \"LK\",\n      \"capital\": \"Colombo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Maseru\"\n      ],\n      \"lat\": 29.5,\n      \"lon\": 28.5,\n      \"name\": \"Lesotho\",\n      \"code\": \"LS\",\n      \"capital\": \"Maseru\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vilnius\"\n      ],\n      \"lat\": 56,\n      \"lon\": 24,\n      \"name\": \"Lithuania\",\n      \"code\": \"LT\",\n      \"capital\": \"Vilnius\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Luxembourg\"\n      ],\n      \"lat\": 49.75,\n      \"lon\": 6.16666666,\n      \"name\": \"Luxembourg\",\n      \"code\": \"LU\",\n      \"capital\": \"Luxembourg\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Riga\"\n      ],\n      \"lat\": 57,\n      \"lon\": 25,\n      \"name\": \"Latvia\",\n      \"code\": \"LV\",\n      \"capital\": \"Riga\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Macau\"\n      ],\n      \"lat\": 22.16666666,\n      \"lon\": 113.55,\n      \"name\": \"Macau\",\n      \"code\": \"MO\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"America/Marigot\"\n      ],\n      \"lat\": 18.08333333,\n      \"lon\": -63.95,\n      \"name\": \"Saint Martin\",\n      \"code\": \"MF\",\n      \"capital\": \"Marigot\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Casablanca\"\n      ],\n      \"lat\": 32,\n      \"lon\": -5,\n      \"name\": \"Morocco\",\n      \"code\": \"MA\",\n      \"capital\": \"Rabat\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Monaco\"\n      ],\n      \"lat\": 43.73333333,\n      \"lon\": 7.4,\n      \"name\": \"Monaco\",\n      \"code\": \"MC\",\n      \"capital\": \"Monaco\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Chisinau\"\n      ],\n      \"lat\": 47,\n      \"lon\": 29,\n      \"name\": \"Moldova\",\n      \"code\": \"MD\",\n      \"capital\": \"Chi\\u0219in\\u0103u\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Antananarivo\"\n      ],\n      \"lat\": 20,\n      \"lon\": 47,\n      \"name\": \"Madagascar\",\n      \"code\": \"MG\",\n      \"capital\": \"Antananarivo\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Maldives\"\n      ],\n      \"lat\": 3.25,\n      \"lon\": 73,\n      \"name\": \"Maldives\",\n      \"code\": \"MV\",\n      \"capital\": \"Mal\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"America/Mexico_City\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Monterrey\",\n        \"America/Matamoros\",\n        \"America/Mazatlan\",\n        \"America/Chihuahua\",\n        \"America/Ojinaga\",\n        \"America/Hermosillo\",\n        \"America/Tijuana\",\n        \"America/Bahia_Banderas\"\n      ],\n      \"lat\": 23,\n      \"lon\": -102,\n      \"name\": \"Mexico\",\n      \"code\": \"MX\",\n      \"capital\": \"Mexico City\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Majuro\",\n        \"Pacific/Kwajalein\"\n      ],\n      \"lat\": 9,\n      \"lon\": 168,\n      \"name\": \"Marshall Islands\",\n      \"code\": \"MH\",\n      \"capital\": \"Majuro\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Skopje\"\n      ],\n      \"lat\": 41.83333333,\n      \"lon\": 22,\n      \"name\": \"Macedonia\",\n      \"code\": \"MK\",\n      \"capital\": \"Skopje\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Bamako\"\n      ],\n      \"lat\": 17,\n      \"lon\": -4,\n      \"name\": \"Mali\",\n      \"code\": \"ML\",\n      \"capital\": \"Bamako\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Malta\"\n      ],\n      \"lat\": 35.83333333,\n      \"lon\": 14.58333333,\n      \"name\": \"Malta\",\n      \"code\": \"MT\",\n      \"capital\": \"Valletta\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Rangoon\"\n      ],\n      \"lat\": 22,\n      \"lon\": 98,\n      \"name\": \"Myanmar\",\n      \"code\": \"MM\",\n      \"capital\": \"Naypyidaw\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Podgorica\"\n      ],\n      \"lat\": 42.5,\n      \"lon\": 19.3,\n      \"name\": \"Montenegro\",\n      \"code\": \"ME\",\n      \"capital\": \"Podgorica\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Ulaanbaatar\",\n        \"Asia/Hovd\",\n        \"Asia/Choibalsan\"\n      ],\n      \"lat\": 46,\n      \"lon\": 105,\n      \"name\": \"Mongolia\",\n      \"code\": \"MN\",\n      \"capital\": \"Ulan Bator\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Saipan\"\n      ],\n      \"lat\": 15.2,\n      \"lon\": 145.75,\n      \"name\": \"Northern Mariana Islands\",\n      \"code\": \"MP\",\n      \"capital\": \"Saipan\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Maputo\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": 35,\n      \"name\": \"Mozambique\",\n      \"code\": \"MZ\",\n      \"capital\": \"Maputo\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Nouakchott\"\n      ],\n      \"lat\": 20,\n      \"lon\": -12,\n      \"name\": \"Mauritania\",\n      \"code\": \"MR\",\n      \"capital\": \"Nouakchott\"\n    },\n    {\n      \"timezones\": [\n        \"America/Montserrat\"\n      ],\n      \"lat\": 16.75,\n      \"lon\": -62.2,\n      \"name\": \"Montserrat\",\n      \"code\": \"MS\",\n      \"capital\": \"Plymouth\"\n    },\n    {\n      \"timezones\": [\n        \"America/Martinique\"\n      ],\n      \"lat\": 14.666667,\n      \"lon\": -61,\n      \"name\": \"Martinique\",\n      \"code\": \"MQ\",\n      \"capital\": \"Fort-de-France\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Mauritius\"\n      ],\n      \"lat\": 20.28333333,\n      \"lon\": 57.55,\n      \"name\": \"Mauritius\",\n      \"code\": \"MU\",\n      \"capital\": \"Port Louis\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Blantyre\"\n      ],\n      \"lat\": 13.5,\n      \"lon\": 34,\n      \"name\": \"Malawi\",\n      \"code\": \"MW\",\n      \"capital\": \"Lilongwe\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\"\n      ],\n      \"lat\": 2.5,\n      \"lon\": 112.5,\n      \"name\": \"Malaysia\",\n      \"code\": \"MY\",\n      \"capital\": \"Kuala Lumpur\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Mayotte\"\n      ],\n      \"lat\": 12.83333333,\n      \"lon\": 45.16666666,\n      \"name\": \"Mayotte\",\n      \"code\": \"YT\",\n      \"capital\": \"Mamoudzou\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Windhoek\"\n      ],\n      \"lat\": 22,\n      \"lon\": 17,\n      \"name\": \"Namibia\",\n      \"code\": \"NA\",\n      \"capital\": \"Windhoek\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Noumea\"\n      ],\n      \"lat\": 21.5,\n      \"lon\": 165.5,\n      \"name\": \"New Caledonia\",\n      \"code\": \"NC\",\n      \"capital\": \"Noum\\u00e9a\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Niamey\"\n      ],\n      \"lat\": 16,\n      \"lon\": 8,\n      \"name\": \"Niger\",\n      \"code\": \"NE\",\n      \"capital\": \"Niamey\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Norfolk\"\n      ],\n      \"lat\": 29.03333333,\n      \"lon\": 167.95,\n      \"name\": \"Norfolk Island\",\n      \"code\": \"NF\",\n      \"capital\": \"Kingston\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Lagos\"\n      ],\n      \"lat\": 10,\n      \"lon\": 8,\n      \"name\": \"Nigeria\",\n      \"code\": \"NG\",\n      \"capital\": \"Abuja\"\n    },\n    {\n      \"timezones\": [\n        \"America/Managua\"\n      ],\n      \"lat\": 13,\n      \"lon\": -85,\n      \"name\": \"Nicaragua\",\n      \"code\": \"NI\",\n      \"capital\": \"Managua\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Niue\"\n      ],\n      \"lat\": 19.03333333,\n      \"lon\": -169.86666666,\n      \"name\": \"Niue\",\n      \"code\": \"NU\",\n      \"capital\": \"Alofi\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Amsterdam\"\n      ],\n      \"lat\": 52.5,\n      \"lon\": 5.75,\n      \"name\": \"Netherlands\",\n      \"code\": \"NL\",\n      \"capital\": \"Amsterdam\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Oslo\"\n      ],\n      \"lat\": 62,\n      \"lon\": 10,\n      \"name\": \"Norway\",\n      \"code\": \"NO\",\n      \"capital\": \"Oslo\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Kathmandu\"\n      ],\n      \"lat\": 28,\n      \"lon\": 84,\n      \"name\": \"Nepal\",\n      \"code\": \"NP\",\n      \"capital\": \"Kathmandu\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Nauru\"\n      ],\n      \"lat\": 0.53333333,\n      \"lon\": 166.91666666,\n      \"name\": \"Nauru\",\n      \"code\": \"NR\",\n      \"capital\": \"Yaren\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Auckland\",\n        \"Pacific/Chatham\"\n      ],\n      \"lat\": 41,\n      \"lon\": 174,\n      \"name\": \"New Zealand\",\n      \"code\": \"NZ\",\n      \"capital\": \"Wellington\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Muscat\"\n      ],\n      \"lat\": 21,\n      \"lon\": 57,\n      \"name\": \"Oman\",\n      \"code\": \"OM\",\n      \"capital\": \"Muscat\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Karachi\"\n      ],\n      \"lat\": 30,\n      \"lon\": 70,\n      \"name\": \"Pakistan\",\n      \"code\": \"PK\",\n      \"capital\": \"Islamabad\"\n    },\n    {\n      \"timezones\": [\n        \"America/Panama\"\n      ],\n      \"lat\": 9,\n      \"lon\": -80,\n      \"name\": \"Panama\",\n      \"code\": \"PA\",\n      \"capital\": \"Panama City\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Pitcairn\"\n      ],\n      \"lat\": 25.06666666,\n      \"lon\": -130.1,\n      \"name\": \"Pitcairn Islands\",\n      \"code\": \"PN\",\n      \"capital\": \"Adamstown\"\n    },\n    {\n      \"timezones\": [\n        \"America/Lima\"\n      ],\n      \"lon\": -77.0428, \"lat\": -12.0464,\n      \"name\": \"Peru\",\n      \"code\": \"PE\",\n      \"capital\": \"Lima\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Manila\"\n      ],\n      \"lat\": 13,\n      \"lon\": 122,\n      \"name\": \"Philippines\",\n      \"code\": \"PH\",\n      \"capital\": \"Manila\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Palau\"\n      ],\n      \"lat\": 7.5,\n      \"lon\": 134.5,\n      \"name\": \"Palau\",\n      \"code\": \"PW\",\n      \"capital\": \"Ngerulmud\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Bougainville\"\n      ],\n      \"lat\": 6,\n      \"lon\": 147,\n      \"name\": \"Papua New Guinea\",\n      \"code\": \"PG\",\n      \"capital\": \"Port Moresby\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Warsaw\"\n      ],\n      \"lat\": 52,\n      \"lon\": 20,\n      \"name\": \"Poland\",\n      \"code\": \"PL\",\n      \"capital\": \"Warsaw\"\n    },\n    {\n      \"timezones\": [\n        \"America/Puerto_Rico\"\n      ],\n      \"lat\": 18.25,\n      \"lon\": -66.5,\n      \"name\": \"Puerto Rico\",\n      \"code\": \"PR\",\n      \"capital\": \"San Juan\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Pyongyang\"\n      ],\n      \"lat\": 40,\n      \"lon\": 127,\n      \"name\": \"North Korea\",\n      \"code\": \"KP\",\n      \"capital\": \"Pyongyang\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Lisbon\",\n        \"Atlantic/Madeira\",\n        \"Atlantic/Azores\"\n      ],\n      \"lat\": 39.5,\n      \"lon\": -8,\n      \"name\": \"Portugal\",\n      \"code\": \"PT\",\n      \"capital\": \"Lisbon\"\n    },\n    {\n      \"timezones\": [\n        \"America/Asuncion\"\n      ],\n      \"lon\": -57.5759, \"lat\": -25.2637,\n      \"name\": \"Paraguay\",\n      \"code\": \"PY\",\n      \"capital\": \"Asunci\\u00f3n\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Gaza\",\n        \"Asia/Hebron\"\n      ],\n      \"lat\": 31.9,\n      \"lon\": 35.2,\n      \"name\": \"Palestine\",\n      \"code\": \"PS\",\n      \"capital\": \"Ramallah\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Tahiti\",\n        \"Pacific/Marquesas\",\n        \"Pacific/Gambier\"\n      ],\n      \"lat\": 15,\n      \"lon\": -140,\n      \"name\": \"French Polynesia\",\n      \"code\": \"PF\",\n      \"capital\": \"Papeet\\u0113\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Qatar\"\n      ],\n      \"lat\": 25.5,\n      \"lon\": 51.25,\n      \"name\": \"Qatar\",\n      \"code\": \"QA\",\n      \"capital\": \"Doha\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Reunion\"\n      ],\n      \"lat\": 21.15,\n      \"lon\": 55.5,\n      \"name\": \"R\\u00e9union\",\n      \"code\": \"RE\",\n      \"capital\": \"Saint-Denis\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Bucharest\"\n      ],\n      \"lat\": 46,\n      \"lon\": 25,\n      \"name\": \"Romania\",\n      \"code\": \"RO\",\n      \"capital\": \"Bucharest\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Kaliningrad\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Kirov\",\n        \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n        \"Europe/Ulyanovsk\",\n        \"Asia/Yekaterinburg\",\n        \"Asia/Omsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Barnaul\",\n        \"Asia/Tomsk\",\n        \"Asia/Novokuznetsk\",\n        \"Asia/Krasnoyarsk\",\n        \"Asia/Irkutsk\",\n        \"Asia/Chita\",\n        \"Asia/Yakutsk\",\n        \"Asia/Khandyga\",\n        \"Asia/Vladivostok\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Magadan\",\n        \"Asia/Sakhalin\",\n        \"Asia/Srednekolymsk\",\n        \"Asia/Kamchatka\",\n        \"Asia/Anadyr\"\n      ],\n      \"lat\": 60,\n      \"lon\": 100,\n      \"name\": \"Russia\",\n      \"code\": \"RU\",\n      \"capital\": \"Moscow\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Kigali\"\n      ],\n      \"lat\": 2,\n      \"lon\": 30,\n      \"name\": \"Rwanda\",\n      \"code\": \"RW\",\n      \"capital\": \"Kigali\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Riyadh\"\n      ],\n      \"lat\": 25,\n      \"lon\": 45,\n      \"name\": \"Saudi Arabia\",\n      \"code\": \"SA\",\n      \"capital\": \"Riyadh\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Khartoum\"\n      ],\n      \"lat\": 15,\n      \"lon\": 30,\n      \"name\": \"Sudan\",\n      \"code\": \"SD\",\n      \"capital\": \"Khartoum\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Dakar\"\n      ],\n      \"lat\": 14,\n      \"lon\": -14,\n      \"name\": \"Senegal\",\n      \"code\": \"SN\",\n      \"capital\": \"Dakar\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Singapore\"\n      ],\n      \"lat\": 1.36666666,\n      \"lon\": 103.8,\n      \"name\": \"Singapore\",\n      \"code\": \"SG\",\n      \"capital\": \"Singapore\"\n    },\n    {\n      \"timezones\": [\n        \"Atlantic/South_Georgia\"\n      ],\n      \"lat\": 54.5,\n      \"lon\": -37,\n      \"name\": \"South Georgia\",\n      \"code\": \"GS\",\n      \"capital\": \"King Edward Point\"\n    },\n    {\n      \"timezones\": [\n        \"Arctic/Longyearbyen\"\n      ],\n      \"lat\": 78,\n      \"lon\": 20,\n      \"name\": \"Svalbard and Jan Mayen\",\n      \"code\": \"SJ\",\n      \"capital\": \"Longyearbyen\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Guadalcanal\"\n      ],\n      \"lat\": 8,\n      \"lon\": 159,\n      \"name\": \"Solomon Islands\",\n      \"code\": \"SB\",\n      \"capital\": \"Honiara\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Freetown\"\n      ],\n      \"lat\": 8.5,\n      \"lon\": -11.5,\n      \"name\": \"Sierra Leone\",\n      \"code\": \"SL\",\n      \"capital\": \"Freetown\"\n    },\n    {\n      \"timezones\": [\n        \"America/El_Salvador\"\n      ],\n      \"lat\": 13.83333333,\n      \"lon\": -88.91666666,\n      \"name\": \"El Salvador\",\n      \"code\": \"SV\",\n      \"capital\": \"San Salvador\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/San_Marino\"\n      ],\n      \"lat\": 43.76666666,\n      \"lon\": 12.41666666,\n      \"name\": \"San Marino\",\n      \"code\": \"SM\",\n      \"capital\": \"City of San Marino\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Mogadishu\"\n      ],\n      \"lat\": 10,\n      \"lon\": 49,\n      \"name\": \"Somalia\",\n      \"code\": \"SO\",\n      \"capital\": \"Mogadishu\"\n    },\n    {\n      \"timezones\": [\n        \"America/Miquelon\"\n      ],\n      \"lat\": 46.83333333,\n      \"lon\": -56.33333333,\n      \"name\": \"Saint Pierre and Miquelon\",\n      \"code\": \"PM\",\n      \"capital\": \"Saint-Pierre\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Belgrade\"\n      ],\n      \"lat\": 44,\n      \"lon\": 21,\n      \"name\": \"Serbia\",\n      \"code\": \"RS\",\n      \"capital\": \"Belgrade\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Juba\"\n      ],\n      \"lat\": 7,\n      \"lon\": 30,\n      \"name\": \"South Sudan\",\n      \"code\": \"SS\",\n      \"capital\": \"Juba\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Sao_Tome\"\n      ],\n      \"lat\": 1,\n      \"lon\": 7,\n      \"name\": \"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\",\n      \"code\": \"ST\",\n      \"capital\": \"S\\u00e3o Tom\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"America/Paramaribo\"\n      ],\n      \"lon\": -55.2038, \"lat\": 5.852,\n      \"name\": \"Suriname\",\n      \"code\": \"SR\",\n      \"capital\": \"Paramaribo\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Bratislava\"\n      ],\n      \"lat\": 48.66666666,\n      \"lon\": 19.5,\n      \"name\": \"Slovakia\",\n      \"code\": \"SK\",\n      \"capital\": \"Bratislava\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Ljubljana\"\n      ],\n      \"lat\": 46.11666666,\n      \"lon\": 14.81666666,\n      \"name\": \"Slovenia\",\n      \"code\": \"SI\",\n      \"capital\": \"Ljubljana\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Stockholm\"\n      ],\n      \"lat\": 62,\n      \"lon\": 15,\n      \"name\": \"Sweden\",\n      \"code\": \"SE\",\n      \"capital\": \"Stockholm\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Mbabane\"\n      ],\n      \"lat\": 26.5,\n      \"lon\": 31.5,\n      \"name\": \"Swaziland\",\n      \"code\": \"SZ\",\n      \"capital\": \"Lobamba\"\n    },\n    {\n      \"timezones\": [\n        \"America/Lower_Princes\"\n      ],\n      \"lat\": 18.033333,\n      \"lon\": -63.05,\n      \"name\": \"Sint Maarten\",\n      \"code\": \"SX\",\n      \"capital\": \"Philipsburg\"\n    },\n    {\n      \"timezones\": [\n        \"Indian/Mahe\"\n      ],\n      \"lat\": 4.58333333,\n      \"lon\": 55.66666666,\n      \"name\": \"Seychelles\",\n      \"code\": \"SC\",\n      \"capital\": \"Victoria\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Damascus\"\n      ],\n      \"lat\": 35,\n      \"lon\": 38,\n      \"name\": \"Syria\",\n      \"code\": \"SY\",\n      \"capital\": \"Damascus\"\n    },\n    {\n      \"timezones\": [\n        \"America/Grand_Turk\"\n      ],\n      \"lat\": 21.75,\n      \"lon\": -71.58333333,\n      \"name\": \"Turks and Caicos Islands\",\n      \"code\": \"TC\",\n      \"capital\": \"Cockburn Town\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Ndjamena\"\n      ],\n      \"lat\": 15,\n      \"lon\": 19,\n      \"name\": \"Chad\",\n      \"code\": \"TD\",\n      \"capital\": \"N'Djamena\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Lome\"\n      ],\n      \"lat\": 8,\n      \"lon\": 1.16666666,\n      \"name\": \"Togo\",\n      \"code\": \"TG\",\n      \"capital\": \"Lom\\u00e9\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Bangkok\"\n      ],\n      \"lat\": 15,\n      \"lon\": 100,\n      \"name\": \"Thailand\",\n      \"code\": \"TH\",\n      \"capital\": \"Bangkok\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dushanbe\"\n      ],\n      \"lat\": 39,\n      \"lon\": 71,\n      \"name\": \"Tajikistan\",\n      \"code\": \"TJ\",\n      \"capital\": \"Dushanbe\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Fakaofo\"\n      ],\n      \"lat\": 9,\n      \"lon\": -172,\n      \"name\": \"Tokelau\",\n      \"code\": \"TK\",\n      \"capital\": \"Fakaofo\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Ashgabat\"\n      ],\n      \"lat\": 40,\n      \"lon\": 60,\n      \"name\": \"Turkmenistan\",\n      \"code\": \"TM\",\n      \"capital\": \"Ashgabat\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Dili\"\n      ],\n      \"lat\": 8.83333333,\n      \"lon\": 125.91666666,\n      \"name\": \"Timor-Leste\",\n      \"code\": \"TL\",\n      \"capital\": \"Dili\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Tongatapu\"\n      ],\n      \"lat\": 20,\n      \"lon\": -175,\n      \"name\": \"Tonga\",\n      \"code\": \"TO\",\n      \"capital\": \"Nuku'alofa\"\n    },\n    {\n      \"timezones\": [\n        \"America/Port_of_Spain\"\n      ],\n      \"lat\": 11,\n      \"lon\": -61,\n      \"name\": \"Trinidad and Tobago\",\n      \"code\": \"TT\",\n      \"capital\": \"Port of Spain\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Tunis\"\n      ],\n      \"lat\": 34,\n      \"lon\": 9,\n      \"name\": \"Tunisia\",\n      \"code\": \"TN\",\n      \"capital\": \"Tunis\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Istanbul\"\n      ],\n      \"lat\": 39,\n      \"lon\": 35,\n      \"name\": \"Turkey\",\n      \"code\": \"TR\",\n      \"capital\": \"Ankara\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Funafuti\"\n      ],\n      \"lat\": 8,\n      \"lon\": 178,\n      \"name\": \"Tuvalu\",\n      \"code\": \"TV\",\n      \"capital\": \"Funafuti\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Taipei\"\n      ],\n      \"lat\": 23.5,\n      \"lon\": 121,\n      \"name\": \"Taiwan\",\n      \"code\": \"TW\",\n      \"capital\": \"Taipei\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Dar_es_Salaam\"\n      ],\n      \"lat\": 6,\n      \"lon\": 35,\n      \"name\": \"Tanzania\",\n      \"code\": \"TZ\",\n      \"capital\": \"Dodoma\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Kampala\"\n      ],\n      \"lat\": 1,\n      \"lon\": 32,\n      \"name\": \"Uganda\",\n      \"code\": \"UG\",\n      \"capital\": \"Kampala\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Kiev\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Zaporozhye\"\n      ],\n      \"lat\": 49,\n      \"lon\": 32,\n      \"name\": \"Ukraine\",\n      \"code\": \"UA\",\n      \"capital\": \"Kiev\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Johnston\",\n        \"Pacific/Midway\",\n        \"Pacific/Wake\"\n      ],\n      \"lat\": 19.2911437,\n      \"lon\": 166.618332,\n      \"name\": \"United States Minor Outlying Islands\",\n      \"code\": \"UM\",\n      \"capital\": null\n    },\n    {\n      \"timezones\": [\n        \"America/Montevideo\"\n      ],\n      \"lon\": -56.1645, \"lat\": -34.9011,\n      \"name\": \"Uruguay\",\n      \"code\": \"UY\",\n      \"capital\": \"Montevideo\"\n    },\n    {\n      \"timezones\": [\n        \"America/New_York\",\n        \"America/Detroit\",\n        \"America/Kentucky/Louisville\",\n        \"America/Kentucky/Monticello\",\n        \"America/Indiana/Indianapolis\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vevay\",\n        \"America/Chicago\",\n        \"America/Indiana/Tell_City\",\n        \"America/Indiana/Knox\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/North_Dakota/Beulah\",\n        \"America/Denver\",\n        \"America/Boise\",\n        \"America/Phoenix\",\n        \"America/Los_Angeles\",\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Sitka\",\n        \"America/Metlakatla\",\n        \"America/Yakutat\",\n        \"America/Nome\",\n        \"America/Adak\",\n        \"Pacific/Honolulu\"\n      ],\n      \"lat\": 38,\n      \"lon\": -97,\n      \"name\": \"United States\",\n      \"code\": \"US\",\n      \"capital\": \"Washington D.C.\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\"\n      ],\n      \"lat\": 41,\n      \"lon\": 64,\n      \"name\": \"Uzbekistan\",\n      \"code\": \"UZ\",\n      \"capital\": \"Tashkent\"\n    },\n    {\n      \"timezones\": [\n        \"Europe/Vatican\"\n      ],\n      \"lat\": 41.9,\n      \"lon\": 12.45,\n      \"name\": \"Vatican City\",\n      \"code\": \"VA\",\n      \"capital\": \"Vatican City\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Vincent\"\n      ],\n      \"lat\": 13.25,\n      \"lon\": -61.2,\n      \"name\": \"Saint Vincent and the Grenadines\",\n      \"code\": \"VC\",\n      \"capital\": \"Kingstown\"\n    },\n    {\n      \"timezones\": [\n        \"America/Caracas\"\n      ],\n      \"lon\": -66.9036, \"lat\": 10.4806,\n      \"name\": \"Venezuela\",\n      \"code\": \"VE\",\n      \"capital\": \"Caracas\"\n    },\n    {\n      \"timezones\": [\n        \"America/Tortola\"\n      ],\n      \"lat\": 18.431383,\n      \"lon\": -64.62305,\n      \"name\": \"British Virgin Islands\",\n      \"code\": \"VG\",\n      \"capital\": \"Road Town\"\n    },\n    {\n      \"timezones\": [\n        \"America/St_Thomas\"\n      ],\n      \"lat\": 18.35,\n      \"lon\": -64.933333,\n      \"name\": \"United States Virgin Islands\",\n      \"code\": \"VI\",\n      \"capital\": \"Charlotte Amalie\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Ho_Chi_Minh\"\n      ],\n      \"lat\": 16.16666666,\n      \"lon\": 107.83333333,\n      \"name\": \"Vietnam\",\n      \"code\": \"VN\",\n      \"capital\": \"Hanoi\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Efate\"\n      ],\n      \"lat\": 16,\n      \"lon\": 167,\n      \"name\": \"Vanuatu\",\n      \"code\": \"VU\",\n      \"capital\": \"Port Vila\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Wallis\"\n      ],\n      \"lat\": 13.3,\n      \"lon\": -176.2,\n      \"name\": \"Wallis and Futuna\",\n      \"code\": \"WF\",\n      \"capital\": \"Mata-Utu\"\n    },\n    {\n      \"timezones\": [\n        \"Pacific/Apia\"\n      ],\n      \"lat\": 13.58333333,\n      \"lon\": -172.33333333,\n      \"name\": \"Samoa\",\n      \"code\": \"WS\",\n      \"capital\": \"Apia\"\n    },\n    {\n      \"timezones\": [\n        \"Asia/Aden\"\n      ],\n      \"lat\": 15,\n      \"lon\": 48,\n      \"name\": \"Yemen\",\n      \"code\": \"YE\",\n      \"capital\": \"Sana'a\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Johannesburg\"\n      ],\n      \"lat\": 29,\n      \"lon\": 24,\n      \"name\": \"South Africa\",\n      \"code\": \"ZA\",\n      \"capital\": \"Pretoria\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Lusaka\"\n      ],\n      \"lat\": 15,\n      \"lon\": 30,\n      \"name\": \"Zambia\",\n      \"code\": \"ZM\",\n      \"capital\": \"Lusaka\"\n    },\n    {\n      \"timezones\": [\n        \"Africa/Harare\"\n      ],\n      \"lat\": 20,\n      \"lon\": 30,\n      \"name\": \"Zimbabwe\",\n      \"code\": \"ZW\",\n      \"capital\": \"Harare\"\n    }\n  ]\n\n  function globalDataGraph(data: any) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    for (let i in data) {\n      resultDates.push(i);\n      resultCases.push(data[i]);\n    }\n    // console.log(resultCases, resultDates);\n    return ({ resultCases, resultDates });\n  }\n\n  function countriesListData(data: ICountry[]) {\n    let resultCases: any[] = []\n    let resultCountries: any[] = []\n    let result: any[] = []\n    for (let i in data) {\n      resultCountries.push(data[i].Country);\n      resultCases.push(data[i].TotalConfirmed);\n      result.push({\n        country: data[i].Country, TotalConfirmed: data[i].TotalConfirmed,\n        sortable: true,\n      })\n    }\n    // console.log(resultCases, resultCountries);\n    return ({ result, resultCases, resultCountries });\n  }\n\n  function countryDataGraph(data: IDataCovid[] | ICountry[], country: string, caseType: string, dateTo: string) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    if (data.length > 0) {\n      data.forEach((item: any) => {\n        // console.log(\"item : \", caseType, item[caseType], item);\n        if (country === 'us' || debug === true) {\n          if ((moment(item.last_update).isAfter(dateTo))) {\n            resultCases.push(caseType === \"confirmed\" ? item.cases : item[caseType]);\n            resultDates.push(moment(item.last_update).format('YYYY/MM/DD'));\n          }\n        } else {\n          if ((moment(item.Date).isAfter(dateTo))) {\n            resultCases.push(item.Cases);\n            resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          }\n        }\n      })\n      let resultCasesDiff: any[] = _.map(resultCases, function (e: any, i: any) {\n        return (resultCases[i + 1] - e) < 0 ? 0 : (resultCases[i + 1] - e)\n      });\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      dataDiff === [] ? console.log(dataDiff) : console.log('');\n      setData(resultCasesDiff);// inversion between resultCasesDiff and resultCases for display graph of variations and not total\n      setDataDiff(resultCases);\n      setLabels(resultDates);\n      return ({ resultCases, resultDates, resultCasesDiff });\n    } else {\n      setData([]);\n      setLabels([]);\n      setDataDiff([]);\n\n    }\n  }\n\n  // function getCovidApi() :  get data by country\n  // differents source cause pb with USA, \n  // you cans get data according Country Code, date from  and case : confirmed, deaths, recovered\n  // have to use function countryDataGraph() to clean data and have an array to fit with D3js charts react-map-smples\n  function getCovidApi(country: string, caseType: string, dateTo: string) {\n    if (country === \"\") {\n      countryDataGraph([], \"\", \"\", \"\");\n    } else {\n      try {\n        if (country === \"us\" || debug === true) {\n          return fetch(`https://covid19-api.org/api/timeline/${country}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          })\n            .then((response: any) => response.json()).then((res) => {\n              countryDataGraph(res.reverse(), country, caseType, dateTo);// cleaning data for ChartJS\n            }).catch(err => alert(err));\n        } else {\n          return fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n            method: 'GET',\n            redirect: 'follow',\n            headers: headers\n          })\n            .then((response: any) => response.json()).then((res) => {\n              countryDataGraph(res, country, caseType, dateTo);// cleaning data for ChartJS\n            }).catch(err => alert(err));\n        }\n      } catch (err) {\n        console.log(err)\n        return;\n      }\n    }\n  };\n\n\n  // to set unstated.total data : {Global, Countries,..} all total data of today\n  const getTotal = async () => {\n    await fetch(`https://api.covid19api.com/summary`)\n      .then(res => res.json())\n      .then(resp => setTotal(resp))\n      .catch((err) => { throw (err) })\n  }\n\n  const getCovidCountry = async (country: string, caseType: string, dateTo: string) => {\n    setCovidApi(await getCovidApi(country, caseType, dateTo));\n    // console.log(`https://covid19-api.org/api/timeline/${country}`)\n    // console.log(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`)\n  }\n\n\n  const updateTotalCovid = async () => {\n    setTotal(await getTotal());\n  }\n\n  // =================================================\n\n  // function matching data for the map : react map simples\n  // source (`https://api.covid19api.com/all`, {\n  function getMarkers(arr1: any, arr2: any) {\n    return _.union(\n      _.map(arr1, function (obj1) {\n        var same = _.find(arr2, function (obj2) {\n          return obj1[\"CountryCode\"] === obj2[\"code\"];\n        });\n        return same ? _.extend(obj1, same) : obj1;\n      }),\n      _.reject(arr2, function (obj2) {\n        return _.find(arr1, function (obj1) {\n          return obj2[\"code\"] === obj1[\"CountryCode\"];\n        });\n      })\n    );\n  }\n\n  //order \n  function dynamicSort(property: any) {\n    var sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return function (b: any, a: any) {\n      /* next line works with strings and numbers, \n       * and you may want to customize it to your needs\n       */\n      var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n      return result * sortOrder;\n    }\n  }\n  function getCovidMapMarkers() {\n    fetch(`https://api.covid19api.com/summary`, {\n      method: \"GET\",\n    }).then((response: any) => response.json()).then((res) => {\n      // console.log(\"***********************\", res.Countries);\n      let resp = getMarkers(res.Countries, country_list);\n      setMarkers(resp.sort(dynamicSort(\"TotalConfirmed\")));\n      // console.log(resp);\n      return (resp);\n    }).catch(err => alert(err));\n  }\n\n  function getCountriesML() {\n    try {\n      return fetch(`\"https://covid19-api.org/api/status\"`, {\n        method: \"GET\",\n      }).then((response: any) => response.text())\n    } catch (err) {\n      console.log(err)\n      return;\n    }\n  };\n\n  const updateCountriesML = async () => {\n    setCountriesML(await getCountriesML());\n  }\n\n  return {\n    covidApi,\n    country_list,\n    data,\n    labels,\n    total,\n    country,\n    code,\n    markers,\n    countriesML,\n    setCountry,\n    setCode,\n    getTotal,\n    getCovidCountry,\n    updateTotalCovid,\n    countryDataGraph,\n    globalDataGraph,\n    countriesListData,\n    getCovidMapMarkers,\n    updateCountriesML,\n  };\n}\nexport const StoreContainer = createContainer(useStore)\n\n// let country_list = { 'AF' : 'Afghanistan', 'AX' : 'Aland Islands', 'AL' : 'Albania', 'DZ' : 'Algeria', 'AS' : 'American Samoa', 'AD' : 'Andorra', 'AO' : 'Angola', 'AI' : 'Anguilla', 'AQ' : 'Antarctica', 'AG' : 'Antigua And Barbuda', 'AR' : 'Argentina', 'AM' : 'Armenia', 'AW' : 'Aruba', 'AU' : 'Australia', 'AT' : 'Austria', 'AZ' : 'Azerbaijan', 'BS' : 'Bahamas', 'BH' : 'Bahrain', 'BD' : 'Bangladesh', 'BB' : 'Barbados', 'BY' : 'Belarus', 'BE' : 'Belgium', 'BZ' : 'Belize', 'BJ' : 'Benin', 'BM' : 'Bermuda', 'BT' : 'Bhutan', 'BO' : 'Bolivia', 'BA' : 'Bosnia And Herzegovina', 'BW' : 'Botswana', 'BV' : 'Bouvet Island', 'BR' : 'Brazil', 'IO' : 'British Indian Ocean Territory', 'BN' : 'Brunei Darussalam', 'BG' : 'Bulgaria', 'BF' : 'Burkina Faso', 'BI' : 'Burundi', 'KH' : 'Cambodia', 'CM' : 'Cameroon', 'CA' : 'Canada', 'CV' : 'Cape Verde', 'KY' : 'Cayman Islands', 'CF' : 'Central African Republic', 'TD' : 'Chad', 'CL' : 'Chile', 'CN' : 'China', 'CX' : 'Christmas Island', 'CC' : 'Cocos (Keeling) Islands', 'CO' : 'Colombia', 'KM' : 'Comoros', 'CG' : 'Congo', 'CD' : 'Congo, Democratic Republic', 'CK' : 'Cook Islands', 'CR' : 'Costa Rica', 'CI' : 'Cote D\\'Ivoire', 'HR' : 'Croatia', 'CU' : 'Cuba', 'CY' : 'Cyprus', 'CZ' : 'Czech Republic', 'DK' : 'Denmark', 'DJ' : 'Djibouti', 'DM' : 'Dominica', 'DO' : 'Dominican Republic', 'EC' : 'Ecuador', 'EG' : 'Egypt', 'SV' : 'El Salvador', 'GQ' : 'Equatorial Guinea', 'ER' : 'Eritrea', 'EE' : 'Estonia', 'ET' : 'Ethiopia', 'FK' : 'Falkland Islands (Malvinas)', 'FO' : 'Faroe Islands', 'FJ' : 'Fiji', 'FI' : 'Finland', 'FR' : 'France', 'GF' : 'French Guiana', 'PF' : 'French Polynesia', 'TF' : 'French Southern Territories', 'GA' : 'Gabon', 'GM' : 'Gambia', 'GE' : 'Georgia', 'DE' : 'Germany', 'GH' : 'Ghana', 'GI' : 'Gibraltar', 'GR' : 'Greece', 'GL' : 'Greenland', 'GD' : 'Grenada', 'GP' : 'Guadeloupe', 'GU' : 'Guam', 'GT' : 'Guatemala', 'GG' : 'Guernsey', 'GN' : 'Guinea', 'GW' : 'Guinea-Bissau', 'GY' : 'Guyana', 'HT' : 'Haiti', 'HM' : 'Heard Island & Mcdonald Islands', 'VA' : 'Holy See (Vatican City State)', 'HN' : 'Honduras', 'HK' : 'Hong Kong', 'HU' : 'Hungary', 'IS' : 'Iceland', 'IN' : 'India', 'ID' : 'Indonesia', 'IR' : 'Iran, Islamic Republic Of', 'IQ' : 'Iraq', 'IE' : 'Ireland', 'IM' : 'Isle Of Man', 'IL' : 'Israel', 'IT' : 'Italy', 'JM' : 'Jamaica', 'JP' : 'Japan', 'JE' : 'Jersey', 'JO' : 'Jordan', 'KZ' : 'Kazakhstan', 'KE' : 'Kenya', 'KI' : 'Kiribati', 'KR' : 'Korea', 'KW' : 'Kuwait', 'KG' : 'Kyrgyzstan', 'LA' : 'Lao People\\'s Democratic Republic', 'LV' : 'Latvia', 'LB' : 'Lebanon', 'LS' : 'Lesotho', 'LR' : 'Liberia', 'LY' : 'Libyan Arab Jamahiriya', 'LI' : 'Liechtenstein', 'LT' : 'Lithuania', 'LU' : 'Luxembourg', 'MO' : 'Macao', 'MK' : 'Macedonia', 'MG' : 'Madagascar', 'MW' : 'Malawi', 'MY' : 'Malaysia', 'MV' : 'Maldives', 'ML' : 'Mali', 'MT' : 'Malta', 'MH' : 'Marshall Islands', 'MQ' : 'Martinique', 'MR' : 'Mauritania', 'MU' : 'Mauritius', 'YT' : 'Mayotte', 'MX' : 'Mexico', 'FM' : 'Micronesia, Federated States Of', 'MD' : 'Moldova', 'MC' : 'Monaco', 'MN' : 'Mongolia', 'ME' : 'Montenegro', 'MS' : 'Montserrat', 'MA' : 'Morocco', 'MZ' : 'Mozambique', 'MM' : 'Myanmar', 'NA' : 'Namibia', 'NR' : 'Nauru', 'NP' : 'Nepal', 'NL' : 'Netherlands', 'AN' : 'Netherlands Antilles', 'NC' : 'New Caledonia', 'NZ' : 'New Zealand', 'NI' : 'Nicaragua', 'NE' : 'Niger', 'NG' : 'Nigeria', 'NU' : 'Niue', 'NF' : 'Norfolk Island', 'MP' : 'Northern Mariana Islands', 'NO' : 'Norway', 'OM' : 'Oman', 'PK' : 'Pakistan', 'PW' : 'Palau', 'PS' : 'Palestinian Territory, Occupied', 'PA' : 'Panama', 'PG' : 'Papua New Guinea', 'PY' : 'Paraguay', 'PE' : 'Peru', 'PH' : 'Philippines', 'PN' : 'Pitcairn', 'PL' : 'Poland', 'PT' : 'Portugal', 'PR' : 'Puerto Rico', 'QA' : 'Qatar', 'RE' : 'Reunion', 'RO' : 'Romania', 'RU' : 'Russian Federation', 'RW' : 'Rwanda', 'BL' : 'Saint Barthelemy', 'SH' : 'Saint Helena', 'KN' : 'Saint Kitts And Nevis', 'LC' : 'Saint Lucia', 'MF' : 'Saint Martin', 'PM' : 'Saint Pierre And Miquelon', 'VC' : 'Saint Vincent And Grenadines', 'WS' : 'Samoa', 'SM' : 'San Marino', 'ST' : 'Sao Tome And Principe', 'SA' : 'Saudi Arabia', 'SN' : 'Senegal', 'RS' : 'Serbia', 'SC' : 'Seychelles', 'SL' : 'Sierra Leone', 'SG' : 'Singapore', 'SK' : 'Slovakia', 'SI' : 'Slovenia', 'SB' : 'Solomon Islands', 'SO' : 'Somalia', 'ZA' : 'South Africa', 'GS' : 'South Georgia And Sandwich Isl.', 'ES' : 'Spain', 'LK' : 'Sri Lanka', 'SD' : 'Sudan', 'SR' : 'Suriname', 'SJ' : 'Svalbard And Jan Mayen', 'SZ' : 'Swaziland', 'SE' : 'Sweden', 'CH' : 'Switzerland', 'SY' : 'Syrian Arab Republic', 'TW' : 'Taiwan', 'TJ' : 'Tajikistan', 'TZ' : 'Tanzania', 'TH' : 'Thailand', 'TL' : 'Timor-Leste', 'TG' : 'Togo', 'TK' : 'Tokelau', 'TO' : 'Tonga', 'TT' : 'Trinidad And Tobago', 'TN' : 'Tunisia', 'TR' : 'Turkey', 'TM' : 'Turkmenistan', 'TC' : 'Turks And Caicos Islands', 'TV' : 'Tuvalu', 'UG' : 'Uganda', 'UA' : 'Ukraine', 'AE' : 'United Arab Emirates', 'GB' : 'United Kingdom', 'US' : 'United States', 'UM' : 'United States Outlying Islands', 'UY' : 'Uruguay', 'UZ' : 'Uzbekistan', 'VU' : 'Vanuatu', 'VE' : 'Venezuela', 'VN' : 'Viet Nam', 'VG' : 'Virgin Islands, British', 'VI' : 'Virgin Islands, U.S.', 'WF' : 'Wallis And Futuna', 'EH' : 'Western Sahara', 'YE' : 'Yemen', 'ZM' : 'Zambia', 'ZW' : 'Zimbabwe' };\n\n\n// let country_list = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua &amp; Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia &amp; Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Cape Verde\", \"Cayman Islands\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cruise Ship\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kuwait\", \"Kyrgyz Republic\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre &amp; Miquelon\", \"Samoa\", \"San Marino\", \"Satellite\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"South Africa\", \"South Korea\", \"Spain\", \"Sri Lanka\", \"St Kitts &amp; Nevis\", \"St Lucia\", \"St Vincent\", \"St. Lucia\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad &amp; Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks &amp; Caicos\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"Uruguay\", \"Uzbekistan\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\n\n","// import React from 'react'\n// import { StoreContainer } from '../Store';\n// import TextField from '@material-ui/core/TextField';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n\n// export default function SearchBar(props: any) {\n//   const unstated = StoreContainer.useContainer();\n//   let textRef = React.useRef();\n//   return (\n//     <span className=\"d-none d-lg-block\">\n//       <Autocomplete\n//         options={unstated.country_list}\n//         getOptionLabel={(option) => option.name}\n//         style={{ maxWidth: '300', backgroundColor: 'white', borderRadius: 5 }}\n//         renderInput={(params) => <TextField {...params} label=\"search a country ?\" variant=\"outlined\" inputRef={textRef} onChange={() => console.log(textRef)} />}\n//       />\n//     </span>\n//   )\n// }\n\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { StoreContainer } from '../Store';\n\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\n// export default function SearchBar(props: any) {\nexport default function SearchBar() {\n  const unstated = StoreContainer.useContainer();\n  let textInput = \"\";\n\n  const handleChange = (e: any, values: any) => {\n    if (values) {\n      unstated.setCountry(values.name);\n      unstated.setCode(values.code);\n    } else {\n      unstated.setCountry(\"\");\n      unstated.setCode(\"\");\n    }\n  }\n\n\n  return (\n    <Autocomplete\n      id=\"country-select\"\n      options={unstated.country_list}\n      autoHighlight\n      getOptionLabel={(option) => option.name}\n      renderOption={(option) => (\n        <React.Fragment>\n          <span>{countryToFlag(option.code)}</span>\n          {option.name} ({option.code})\n        </React.Fragment>\n      )}\n      onChange={handleChange}\n      renderInput={(params) => (\n        <TextField\n          style={{ backgroundColor: 'white', borderRadius: 5, width: 300 }}\n          {...params}\n          label=\"Choose a country\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputProps={{\n            ...params.inputProps,\n            // autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n          value={textInput}\n        />\n      )\n      }\n    />\n  );\n}\n\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport SearchBar from './modules/SearchBar';\nimport Typography from '@material-ui/core/Typography';\nimport LinkURL from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from \"@material-ui/core/styles\";\n\n\nconst WhiteTextTypography = withStyles({\n  root: {\n    color: \"#FFFFFF\"\n  }\n})(Typography);\n\nfunction Copyright() {\n  return (\n    <WhiteTextTypography variant=\"body2\" color=\"textSecondary\" align=\"center\" >\n      {'Copyright © '}\n      <LinkURL color=\"inherit\" href=\"https://material-ui.com/\">\n        https://rim31.github.io/\n      </LinkURL>{' '}\n      {new Date().getFullYear()}\n    </WhiteTextTypography>\n  );\n}\n\nexport default function Layout(props: any) {\n  return (\n    <>\n      <nav className=\"navbar sticky-top  navbar-dark \" style={{ backgroundColor: \"#574b90\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\" }}>\n\n        <button className=\"d-lg-none navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent1\"\n          aria-controls=\"navbarSupportedContent1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"dark-blue-text\"><i\n            className=\"fas fa-bars fa-1x\"></i></span></button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent1\">\n          <h3 style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }}>Covid-19</h3>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/\" onClick={()=> props.setPage(\"map\")} >Map</Link>\n            </li>\n            <li className=\"nav-item\">\n              {/* <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/stats\" onClick={()=> props.setPage(\"map\")}>Stats</Link> */}\n              <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/\" onClick={()=> props.setPage(\"map\")}>Stats</Link>\n            </li>\n            <li>\n              <SearchBar />\n            </li>\n          </ul>\n        </div>\n        <span className=\"d-none d-lg-block\" style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"flex-start\" }}>\n          <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/\" onClick={()=> props.setPage(\"map\")} >Map</Link>\n          {/* <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/stats\" onClick={()=> props.setPage(\"map\")}>Stats</Link> */}\n          <Link style={{ color: 'white', textDecoration: 'inherit', paddingLeft: '15px' }} to=\"/\" onClick={()=> props.setPage(\"map\")}>Stats</Link>\n        </span>\n        <h1 style={{ color: \"white\", fontWeight: \"bold\" }}>COVID-19</h1>\n        <span className=\"d-none d-lg-block\">\n          <SearchBar />\n        </span>\n      </nav>\n      {props.children}\n      {/* {React.cloneElement(props.children, { code: unstated.code, country: unstated.country })} */}\n      <Box pt={4} style={{ bottom: 0, position: 'absolute', right: 0 }}>\n        <Copyright />\n      </Box>\n    </ >\n  )\n}\n","import React from 'react';\nimport { StoreContainer } from '../Store';\nimport _ from 'lodash';\n\ninterface ICountry {\n  country: string,\n  last_update: Date,\n  cases: number,\n  deaths: number,\n  recovered: number\n}\n\ninterface ITable {\n  Country: string,\n  CountryCode: string,\n  Date: Date,\n  NewConfirmed: number,\n  NewDeaths: number,\n  NewRecovered: number,\n  TotalConfirmed: number,\n  TotalDeaths: number,\n  TotalRecovered: number,\n}\nexport default function TableCasesData(props: any) {\n  const unstated = StoreContainer.useContainer();\n  // const [table, setTable] = React.useState<ITable | object>({})\n  let data: any = {};\n  let countries: any[] = [];\n\n  if (_.isEmpty(unstated.total) === false) {\n    data = unstated.total;\n    countries = data.Countries;\n  }\n  const [result, setResult] = React.useState<ITable | any>({})\n  React.useEffect(() => {\n    if (unstated.code) {\n      let temp = (_.filter(countries, function (i: any) {\n        return i.CountryCode === unstated.code.toUpperCase();\n      }));\n      if (temp.length > 0)\n        setResult(temp[0])\n    }\n    // eslint-disable-next-line\n  }, [unstated.code])\n  return (\n    <table className=\"table table-sm table-dark table-striped\" style={{ fontSize: \"9px\", fontWeight: 'bold' }} >\n      <thead>\n        <tr>\n          <th style={{ color: \"white\" }}>Cases</th>\n          <th style={{ color: \"white\" }}>New Cases</th>\n          <th style={{ color: \"white\" }}>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Confirmed</td>\n          <td>{result?.NewConfirmed}</td>\n          <td>{result?.TotalConfirmed}</td>\n        </tr>\n        <tr>\n          <td>Deaths</td>\n          <td>{result?.NewDeaths}</td>\n          <td>{result?.TotalDeaths}</td>\n        </tr>\n        <tr>\n          <td>Recovered</td>\n          <td>{result?.NewRecovered}</td>\n          <td>{result?.TotalRecovered}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\n","// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nexport default function Flag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n};\n","import React from 'react';\nimport TableCasesData from './TableCasesData';\nimport _ from 'lodash';\nimport { StoreContainer } from '../Store';\nimport Flag from '../modules/Flag';\n\nexport default function ListCountries(props: any) {\n  const [data, setData] = React.useState<any>(props.countries)\n  const [country, setCountry] = React.useState<String>(\"\")\n  const [code, setCode] = React.useState<String>(\"\")\n  const unstated = StoreContainer.useContainer();\n\n\n  function handleClick(event: any) {\n    const value = event.currentTarget.dataset.name.toLowerCase();\n    // console.log(value)\n    setCountry(value);\n    setCode(event.currentTarget.dataset.code.toLowerCase());\n    unstated.setCountry(value);\n    unstated.setCode(event.currentTarget.dataset.code.toLowerCase());\n  }\n\n  // to sort array according attribute of object inside\n  // (data).sort(compareValues('TotalConfirmed', 'desc'))\n  function compareValues(key: string, order = 'asc') {\n    return function innerSort(a: any, b: any) {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n        // property doesn't exist on either object\n        return 0;\n      }\n      const varA = (typeof a[key] === 'string')\n        ? a[key].toUpperCase() : a[key];\n      const varB = (typeof b[key] === 'string')\n        ? b[key].toUpperCase() : b[key];\n      let comparison = 0;\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n      return (\n        (order === 'desc') ? (comparison * -1) : comparison\n      );\n    };\n  }\n\n  React.useEffect(() => {\n    if (!_.isEmpty(props.data.Countries))\n      setData(props.data.Countries.sort(compareValues('TotalConfirmed', 'desc')));\n\n  }, [props.data, data, unstated.code, unstated.country])\n\n  return (\n    <div\n      style={{\n        display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflow: \"hidden\",\n        whiteSpace: \"nowrap\", /* Don't forget this one */\n        textOverflow: \"ellipsis\",\n        justifyContent: \"space-between\",\n        maxWidth: '50vh'\n      }}>\n      <h1 style={{ color: 'whitesmoke' }}>\n        {!_.isEmpty(unstated.code) && !_.isEmpty(unstated.country) ?\n          // <img src={`https://www.countryflags.io/${code}/flat/64.png`} alt={`${country}`} />\n          <TableCasesData />\n          : \"\"}\n        <span>{Flag(unstated.code ? unstated.code : code)}</span>\n        {!_.isEmpty(unstated.country) ? unstated.country : country}\n      </h1>\n      {/* {(_.isEmpty(props.data) === false) ? */}\n      {!_.isEmpty(props.data.Countries) ?\n        props.data.Countries.map((item: any, i: any) =>\n          <span className=\"button is-secondary is-fullwidth\"\n            style={{\n              display: \"flex\", fontSize: '12px', paddingLeft: '3px', justifyContent: \"space-between\",\n              whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", backgroundColor: '#282c34', color: \"whitesmoke\"\n            }} key={i} onClick={handleClick} data-name={item.Country} data-code={item.CountryCode}>\n            <span>{item.Country}</span><span> {item.TotalConfirmed}</span>\n          </span>)\n        : \"\"}\n    </div>\n  )\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\n\ninterface IGlobal {\n  NewConfirmed: number,\n  TotalConfirmed: number,\n  NewDeaths: number,\n  TotalDeaths: number,\n  NewRecovered: number,\n  TotalRecovered: number,\n}\n\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nexport default function Dashboard(props: any) {\n  const Global: IGlobal = props.data.Global;\n\n  let confirmedAverage: number | any = 0;\n  let deathsAverage: number | any = 0;\n  let recoveredAverage: number | any = 0;\n\n  React.useEffect(() => {\n    if (_.isEmpty(props.content) === false) {\n      // eslint-disable-next-line\n      confirmedAverage = (100 * props.content.TotalConfirmed / props.content.Population).toFixed(2);\n      // eslint-disable-next-line\n      deathsAverage = (100 * props.content.TotalDeaths / props.content.Population).toFixed(2);\n      // eslint-disable-next-line\n      recoveredAverage = (100 * props.content.TotalRecovered / props.content.Population).toFixed(2);\n    }\n  }, [props.content])\n\n  return (\n    <div>\n      <div className=\"row mb-4 mt-1\">\n        <div className=\"col-xl-4 col-lg-4\">\n          <div className=\"card card-inverse card-success\">\n            <div className=\"card-block rounded bg-warning\">\n              <h6 className=\"mt-2 ml-2\">Total confirmed</h6>\n              <h1 className=\"ml-2\">{Global ? Global.TotalConfirmed : \"...\"}</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-4 col-lg-4\">\n          <div className=\"card card-inverse card-danger\">\n            <div className=\"card-block rounded bg-danger\">\n              <h6 className=\"mt-2 ml-2\">Total deaths</h6>\n              <h1 className=\"ml-2\">{Global ? Global.TotalDeaths : \"...\"}</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xl-4 col-lg-4\">\n          <div className=\"card card-inverse card-info\">\n            <div className=\"card-block rounded bg-success\">\n              <h6 className=\"mt-2 ml-2\">Total recover</h6>\n              <h1 className=\"ml-2\">{Global ? Global.TotalRecovered : \"...\"}</h1>\n            </div>\n          </div>\n        </div>\n        {props.content ?\n          <div className=\"col-xl-12 col-lg-12\" style={{ position: \"absolute\", zIndex: 100 }}>\n            <div className=\"card card-inverse mb-0\">\n              <div className=\"card-block rounded mb-0\">\n                {/* <div className=\"progress \" style={{ height: '3px' }}>\n                  <div className=\"progress-bar bg-warning\" role=\"progressbar\"\n                    style={{ width: `${confirmed}%`, color: 'black' }} >{props.content.TotalConfirmed} confirmed</div>\n                  <div className=\"progress-bar bg-danger\" role=\"progressbar\"\n                    style={{ width: `${deaths}%`, color: 'black' }} >{props.content.TotalDeaths} deaths</div>\n                  <div className=\"progress-bar bg-success\" role=\"progressbar\"\n                    aria-valuenow={props.content.TotalRecovered}\n                    aria-valuemin={0}\n                    aria-valuemax={max}\n                    style={{ width: `${recovered}%`, color: 'black' }} >{props.content.TotalRecovered} recovered</div>\n                </div> */}\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}>\n                  <span>\n                    <h6 className=\"mt-2 ml-2\">Country : {props.content.Population} pers <PeopleOutlineIcon /> </h6>\n                    <h1 className=\"ml-2\">\n                      {_.isEmpty(props.content.data) === false ? <span>{countryToFlag(props.content.data.code)}</span> : \"\"}\n                      {props.content.Country}\n                    </h1>\n                  </span>\n                  <div>\n                    <table className=\"table table-sm table-dark table-striped\" style={{ fontSize: \"0.6rem\", fontWeight: \"bold\", marginBottom: \"0px\" }} >\n                      <thead>\n                        <tr>\n                          <th style={{ color: \"white\" }}>Cases</th>\n                          <th style={{ color: \"white\" }}>Today</th>\n                          <th style={{ color: \"white\" }}>Total</th>\n                          <th style={{ color: \"white\" }}>% pop T</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr style={{ color: \"#ffc107\", padding: '0!important', }}>\n                          <td>Confirmed</td>\n                          <td>{props.content?.NewConfirmed}</td>\n                          <td>{props.content?.TotalConfirmed}</td>\n                          <td>{confirmedAverage} %</td>\n                        </tr>\n                        <tr style={{ color: \"#dc3545\", padding: '0!important', }}>\n                          <td>Deaths</td>\n                          <td>{props.content?.NewDeaths}</td>\n                          <td>{props.content?.TotalDeaths}</td>\n                          <td>{deathsAverage} %</td>\n                        </tr>\n                        <tr style={{ color: \"#28a745\", padding: '0!important', }}>\n                          <td>Recovered</td>\n                          <td>{props.content?.NewRecovered}</td>\n                          <td>{props.content?.TotalRecovered}</td>\n                          <td>{recoveredAverage} %</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          : \"\"}\n      </div>\n\n\n    </div >\n  )\n}\n","import React from \"react\";\nimport { StoreContainer } from '../Store';\nimport _ from 'lodash';\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  ZoomableGroup\n} from \"react-simple-maps\";\n\ninterface IMarkers {\n  markerOffset: number,\n  name: string,\n  lon: number,\n  lat: number\n}\nconst geoUrl: string =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = (props: any) => {\n  const unstated = StoreContainer.useContainer();\n  const [data, setData] = React.useState<any>(unstated.total);\n  const [maxMarkers, setMaxMarkers] = React.useState<number>(700000);\n  const myMarkers: IMarkers[] = []\n\n  function mapDataCountries(data: any) {\n    if (data.Countries) {\n      data.Countries.map((item: any) => myMarkers.push({ name: item.Country, markerOffset: 0, lon: 0, lat: 0 }))\n    }\n    // console.log(myMarkers)\n    return myMarkers;\n  }\n  React.useEffect(() => {\n    setData(unstated.getCovidMapMarkers());\n    if (data)\n      mapDataCountries(data);\n    // eslint-disable-next-line\n  }, [data, unstated.code])\n\n  React.useEffect(() => {\n    console.log(unstated.markers)\n    if (unstated.markers !== undefined)\n      setMaxMarkers(unstated.markers[9] ? unstated.markers[9].TotalConfirmed : 700000);\n    // eslint-disable-next-line\n  }, [unstated.markers])\n\n  return (\n    <ComposableMap\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 200\n      }}\n    // style={{ marginTop: '-5em' }}\n    >\n      <ZoomableGroup zoom={1}>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill=\"#DDD\"\n                stroke=\"#FFF\"\n                onMouseEnter={() => {\n                  let { NAME, POP_EST, ISO_A2 } = geo.properties;\n                  let country: object | any = _.find((unstated.markers), { CountryCode: ISO_A2 });\n                  if (country) {\n                    // cases = country.TotalConfirmed;\n                    props.setTooltipContent({\n                      Country: NAME,\n                      Population: POP_EST,\n                      NewConfirmed: country.NewConfirmed,\n                      TotalConfirmed: country.TotalConfirmed,\n                      NewDeaths: country.NewDeaths,\n                      TotalDeaths: country.TotalDeaths,\n                      NewRecovered: country.NewRecovered,\n                      TotalRecovered: country.TotalRecovered,\n                      data: country\n                    });\n                  } else {\n                    props.setTooltipContent({ Country: NAME });\n                  }\n                }}\n                onMouseLeave={() => {\n                  props.setTooltipContent(\"\");\n                }}\n                onClick={() => {\n                  let { NAME, ISO_A2 } = geo.properties;\n                  unstated.setCode(ISO_A2.toLowerCase());\n                  unstated.setCountry(NAME.toLowerCase());\n                  // console.log(\"mapCharts : code \", unstated.code);\n                }}\n\n                style={{\n                  default: {\n                    fill: \"#D6D6DA\",\n                    outline: \"none\"\n                  },\n                  hover: {\n                    fill: \"#F53\",\n                    outline: \"none\"\n                  },\n                  pressed: {\n                    fill: \"#E42\",\n                    outline: \"none\"\n                  }\n                }}\n              />\n            ))\n          }\n        </Geographies>\n        {unstated.markers ?\n          (_.filter(unstated.markers, (o: any) => o.CountryCode === unstated.code || o.TotalConfirmed > maxMarkers))\n            .map((item: any) => (\n              <Marker key={item.name} coordinates={[item.lon, item.lat]}>\n                {item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ?\n                  <g\n                    fill=\"none\"\n                    stroke=\"#ff0000\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    transform=\"translate(-12, -35)\"\n                  >\n                    <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                    <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                  </g> :\n                  <>\n                    {\n                      item.TotalConfirmed > maxMarkers ?\n                        <g\n                          fill=\"none\"\n                          stroke=\"#ffc107\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          transform=\"translate(-12, -6)\"\n                        >\n                          <circle cx=\"12\" cy=\"8\" r=\"1\" />\n                        </g>\n                        : \"\"}\n                  </>\n                }\n\n                {item.CountryCode.toLowerCase() === unstated.code.toLowerCase() ?\n                  <text\n                    textAnchor=\"middle\"\n                    style={{ fill: \"red\", fontWeight: \"bold\", textShadow: \"1px 1px 1px black\", fontSize: \"15px\" , cursor: \"default\", zIndex:-10}}\n                  >\n                    {item.CountryCode} : {item.TotalConfirmed} cases\n                </text>\n                  : <text\n                    textAnchor=\"middle\"\n                    style={{ fill: \"orange\", textShadow: \"1px 1px 1px black\", fontWeight: \"bold\", fontSize: \"10px\", cursor: \"default\", zIndex:-10 }}\n                    onMouseEnter={() => {\n                      let country: object | any = _.find((unstated.markers), { CountryCode: item.CountryCode });\n                      if (country) {\n                        // cases = country.TotalConfirmed;\n                        props.setTooltipContent({\n                          Country: item.Country,\n                          Population: '',\n                          NewConfirmed: country.NewConfirmed,\n                          TotalConfirmed: country.TotalConfirmed,\n                          NewDeaths: country.NewDeaths,\n                          TotalDeaths: country.TotalDeaths,\n                          NewRecovered: country.NewRecovered,\n                          TotalRecovered: country.TotalRecovered,\n                          data: country\n                        });\n                      } else {\n                        props.setTooltipContent({ Country: item.Country });\n                      }\n                    }}\n                    onMouseLeave={() => {\n                      props.setTooltipContent(\"\");\n                    }}\n                    onClick={() => {\n                      unstated.setCode(item.CountryCode.toLowerCase());\n                      unstated.setCountry(item.Country.toLowerCase());\n                      // console.log(\"mapCharts : code \", unstated.code);\n                    }}\n                  >\n                    {\n                      item.TotalConfirmed > maxMarkers ? `${item.CountryCode} ${item.TotalConfirmed}` : \"\"}\n                  </text>\n                }\n              </Marker >\n            )) : \"\"\n        }\n      </ZoomableGroup>\n    </ComposableMap >\n  );\n};\n\nexport default MapChart;\n\n\n// Country: \"United States of America\"\n// CountryCode: \"US\"\n// Date: \"2020-12-12T01:31:13Z\"\n// NewConfirmed: 224452\n// NewDeaths: 2768\n// NewRecovered: 95151\n// Premium: {}\n// Slug: \"united-states\"\n// TotalConfirmed: 15611014\n// TotalDeaths: 292141\n// TotalRecovered: 5985047\n// capital: \"Washington D.C.\"\n// code: \"US\"\n// lat: 38\n// lon: -97\n// name: \"United States\"\n// timezones: (29) [\"America/New_York\", \"America/Detroit\", \"America/Kentucky/Louisville\", \"America/Kentucky/Monticello\", \"America/Indiana/Indianapolis\", \"America/Indiana/Vincennes\", \"America/Indiana/Winamac\", \"America/Indiana/Marengo\", \"America/Indiana/Petersburg\", \"America/Indiana/Vevay\", \"America/Chicago\", \"America/Indiana/Tell_City\", \"America/Indiana/Knox\", \"America/Menominee\", \"America/North_Dakota/Center\", \"America/North_Dakota/New_Salem\", \"America/North_Dakota/Beulah\", \"America/Denver\", \"America/Boise\", \"America/Phoenix\", \"America/Los_Angeles\", \"America/Anchorage\", \"America/Juneau\", \"America/Sitka\", \"America/Metlakatla\", \"America/Yakutat\", \"America/Nome\", \"America/Adak\", \"Pacific/Honolulu\"]\n// __proto__: Object","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { StoreContainer } from '../Store';\nimport ListCountries from '../modules/ListCountries';\nimport Dashboard from '../Charts/Dashboard';\nimport MapChart from '../Map/MapChart';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        https://rim31.github.io/\n      </Link>{' '}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nexport default function MainComponent() {\n  const unstated = StoreContainer.useContainer();\n  const [data, setData] = React.useState<any>(\"\");\n  const [content, setContent] = React.useState(\"\");\n\n\n  const getCovidData = () => {\n    try {\n      fetch(`https://api.covid19api.com/summary`, {\n        method: \"GET\",\n      }).then((response: any) => response.json()).then((res) => {\n        setData(res);\n        return (res)\n      }).catch(err => alert(`please change browser : error getting data`));\n    } catch (err) {\n      console.log(err)\n      return;\n    }\n  };\n\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n  React.useEffect(() => {\n    setData(getCovidData());\n    unstated.updateCountriesML();\n    console.log(\"countriesML : mainComponents\", unstated.countriesML)\n    // problem with fetching data :TODO  Remove this(after found out) \n    getAll();\n    // eslint-disable-next-line\n  }, [])\n  return (\n    <div style={{ backgroundColor: '#282c34' }}>\n      <div className=\"row py-3\">\n        <div className=\" col-lg-9 col-md-9 col-sm-12 col-xs-12\" id=\"sticky-sidebar\">\n          <Dashboard data={unstated.total ? unstated.total : (data ? data : {})}\n            content={content ? content : ''}\n            style={{ position: \"absolute\", zIndex: 100, backgroundColor: '#282c34' }}\n          />\n          <MapChart setTooltipContent={setContent} />\n        </div>\n        <div className=\"order-1 col-lg-3 col-md-3 col-sm-12 col-xs-12\" id=\"main\" >\n          {/* <ListCountries data={unstated.getCovid19All} /> */}\n          <ListCountries data={unstated.total !== undefined ? unstated.total : (data !== undefined ? data : {})}\n            setCountry={unstated.setCountry} setCode={unstated.setCode} />\n          {/* {unstated.total ? unstated.total : (data ? data : {})} */}\n        </div>\n      </div>\n\n\n      <Box pt={4} style={{ bottom: 0, position: 'absolute' }}>\n        <Copyright />\n      </Box>\n    </div>\n  );\n}","\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\n// import Chart from 'react-chartjs-2';\n\nexport default function BarChart(props: any) {\n  const data = {\n    labels: props.labelsCountry,\n    datasets: [\n      {\n        label: `COVID-19 ${props.country}`,\n        data: props.dataCountry,\n        color: \"rgba(255,0,255,0,75)\",\n        backgroundColor: \"#ffc107\"\n      }\n    ],\n    options: {\n      legend: {\n        display: true\n      },\n      title: {\n        display: true,\n        text: `World stats : ${props.labelsCountry[0]} - covid19`,\n        fontColor: 'whitesmoke',\n      },\n    }\n  }\n\n  React.useEffect(() => {\n\n  }, [])\n\n  return (\n    <>\n      <Bar data={data} />\n    </>\n  );\n}\n","import React, { useState } from 'react'\n// import { useParams, useHistory } from 'react-router-dom';\nimport BarChart from '../Charts/BarChart';\nimport moment from 'moment';\nimport { StoreContainer } from '../Store';\nimport ListCountries from '../modules/ListCountries';\nimport Dashboard from '../Charts/Dashboard';\nimport MapChart from '../Map/MapChart';\nimport '../../App.css'\n\nexport default function HomeComponent() {\n  // eslint-disable-next-line\n  const [data, setData] = useState<any>(\"\");\n  const [date, setDate] = useState<any>(\"\");\n  const [X, setX] = useState<any>([]);// for graph bar General world Covid\n  const [Y, setY] = useState<any>([]);// for graph bar General world Covid\n  const [content, setContent] = React.useState(\"\");// for tooltip maps\n  const unstated = StoreContainer.useContainer();\n\n  function setGraph(data: any) {\n    setDate(\"World \" + moment().format('YYYY/MM/DD'));// set date for graph Label Title\n    const infos = unstated.globalDataGraph(data.Global);// cleaning data =  returning a double table \n    setX(infos?.resultDates)\n    setY(infos?.resultCases)\n  }\n\n\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n  React.useEffect(() => {\n    getAll();\n    setGraph(unstated.total);\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <>\n\n      <header>\n      </header>\n\n      <aside className=\"sidebar\">\n        <h3 className=\"mt-1\">Countries </h3>\n        <ListCountries data={unstated.total ? unstated.total : (data ? data : {})} />\n      </aside>\n\n      <section className=\"main\">\n        <Dashboard data={unstated.total ? unstated.total : (data ? data : {})}\n          content={content ? content : ''}\n        />\n        <MapChart setTooltipContent={setContent} />\n        <div className=\"sticky-top\">\n          <div className=\"nav flex-column\">\n            {data ?\n              <BarChart dataCountry={Y} labelsCountry={X} country={date} />\n              : <></>}\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n","import React from 'react';\n// import { Line } from 'react-chartjs-2';\nimport { Bar } from 'react-chartjs-2';\nimport { StoreContainer } from '../Store';\n\nexport default function LinearChart(props: any) {\n  const unstated = StoreContainer.useContainer();\n  const data = {\n    labels: props.labelsCountry,\n    datasets: [\n      {\n        label: `COVID-19 ${unstated.code.toUpperCase()} ${props.labelsCountry[0]}`,\n        data: props.dataCountry,\n        backgroundColor: \"red\",\n        color: \"rgba(255,0,255,0,75)\",\n        hoverBackgroundColor: \"rgba(232,105,90,0.8)\",\n      }\n    ]\n  }\n  const options = {\n    legend: {\n      display: true,\n      fontColor: 'whitesmoke'\n    },\n    title: {\n      display: true,\n      text: `${unstated.country.toUpperCase()} ${props.labelsCountry[0]} - covid19`,\n      fontColor: 'whitesmoke',\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 18,\n          color: \"rgba(2, 2, 2, 0.1)\"\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 14,\n        }\n      }]\n    }\n    // responsive: true,\n    // maintainAspectRatio: true,\n  }\n  return (\n    <div style={{ backgroundColor: \"#555555\" }}>\n      <Bar data={data} options={options} />\n      {/* <Line data={data} options={options} /> */}\n    </div>\n  );\n}\n","import React from 'react'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nexport default function SelectCase(props: any) {\n\n  const handleChange = (event: any) => {\n    props.setCases(event.target.value);\n  }\n\n  return (\n    // <div className=\"control\" >\n    //   <select className=\"select is-primary\" value={props.cases} onChange={handleChange}>\n    //     <option value=\"confirmed\">confirmed</option>\n    //     <option value=\"deaths\">deaths</option>\n    //     <option value=\"recovered\">recovered</option>\n    //   </select>\n    // </div >\n    <>\n      <InputLabel className=\"pt-2 pb-0 mb-0\" style={{ color: \"white\" }}>Cases</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-filled-label\"\n        id=\"demo-simple-select-filled\"\n        value={props.cases}\n        defaultValue={\"confirmed\"}\n        onChange={handleChange}\n        className=\"ml-1\"\n        style={{ backgroundColor: 'white', borderRadius: 5, width: \"auto\", paddingLeft: \"1px\" }}\n      >\n        <MenuItem value={\"confirmed\"}>confirmed</MenuItem>\n        <MenuItem value={\"deaths\"}>deaths</MenuItem>\n        <MenuItem value={\"recovered\"}>recovered</MenuItem>\n      </Select>\n    </>\n\n  )\n}\n","import React from 'react'\nimport moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nexport default function SelectPeriod(props: any) {\n  const [period, setPeriod] = React.useState<string>(\"last month\")\n\n  const handleChange = (event: any) => {\n    setPeriod(event.target.value);\n    switch (event.target.value) {\n      case \"last week\":\n        props.setDates(`${moment().subtract(1, 'weeks').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 2 weeks\":\n        props.setDates(`${moment().subtract(2, 'weeks').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last month\":\n        props.setDates(`${moment().subtract(1, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 2 months\":\n        props.setDates(`${moment().subtract(2, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 4 months\":\n        props.setDates(`${moment().subtract(4, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"last 6 months\":\n        props.setDates(`${moment().subtract(6, 'months').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      case \"since January 2020\":\n        props.setDates(`${moment().subtract(1, 'years').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n      default:\n        props.setDates(`${moment().subtract(5, 'days').format('YYYY-MM-DDT00:00:00')}`);\n        break;\n    }\n  }\n\n  return (\n    // <div className=\"control\" >\n    //   <select className=\"select\" value={period} onChange={handleChange}>\n    //     <option value=\"last month\" >last month</option>\n    //     <option value=\"last week\" >last week</option>\n    //     <option value=\"last week\" >last 2 weeks</option>\n    //     <option value=\"last 2 months\" >last 2 months</option>\n    //     <option value=\"last 6 months\" >last 4 months</option>\n    //     <option value=\"last 6 months\" >last 6 months</option>\n    //     <option value=\"since January 2020\" >since January 2020</option>\n    //   </select>\n    // </div >\n    <>\n      <InputLabel className=\"pt-2 pb-0 mb-0\" style={{ color: \"white\" }}>Period</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-filled-label\"\n        id=\"demo-simple-select-filled\"\n        value={period}\n        defaultValue={\"last month\"}\n        onChange={handleChange}\n        className=\"ml-1 mb-2\"\n        style={{ backgroundColor: 'white', borderRadius: 5, width: \"auto\", paddingLeft: \"1px\" }}\n      >\n        <MenuItem value={\"last month\"} >last month</MenuItem>\n        <MenuItem value={\"last week\"} >last week</MenuItem>\n        <MenuItem value={\"last 2 weeks\"} >last 2 weeks</MenuItem>\n        <MenuItem value={\"last 2 months\"} >last 2 months</MenuItem>\n        <MenuItem value={\"last 4 months\"} >last 4 months</MenuItem>\n        <MenuItem value={\"last 6 months\"} >last 6 months</MenuItem>\n        <MenuItem value={\"since January 2020\"} >since January 2020</MenuItem>\n      </Select>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n// import { useParams, useHistory } from 'react-router-dom';\nimport BarChart from '../Charts/BarChart';\nimport LinearChart from '../Charts/LinearChart';\nimport moment from 'moment';\nimport { StoreContainer } from '../Store';\n// import ListCountries from '../modules/ListCountries';\nimport Dashboard from '../Charts/Dashboard';\nimport Flag from '../modules/Flag';\nimport SelectCase from '../Charts/SelectCase';\nimport SelectPeriod from '../Charts/SelectPeriod';\nimport SortCountries from '../modules/SortCountries';\nimport TableCasesData from '../modules/TableCasesData';\n\nimport _ from 'lodash';\nimport '../../App.css'\n\n\n// position: \"-webkit-sticky\", top: \"4.5rem\"\n\n\ninterface ICountry {\n  code: string,\n  name: string\n}\n\nexport default function HomeComponent() {\n  const [data, setData] = useState<any>(\"\");\n  const [date, setDate] = useState<any>(\"\");\n  const [countries, setCountries] = useState<any>([]);\n  const [dates, setDates] = React.useState<string>(`${moment().subtract(1, 'months').format()}`)\n  const [cases, setCases] = React.useState<string>(\"confirmed\")\n  const [X, setX] = useState<any>([]);\n  const [Y, setY] = useState<any>([]);\n  let countrySelect: ICountry = { code: \"fr\", name: 'france' };\n  const unstated = StoreContainer.useContainer();\n\n  function setGraph(data: any) {\n    setDate(\"World \" + moment(data.Date).format('YYYY/MM/DD'));// set date for graph Label Title\n    const infos = unstated.globalDataGraph(data.Global);// cleaning data =  returning a double table \n    setX(infos?.resultDates)\n    setY(infos?.resultCases)\n  }\n\n  function getCovidData() {\n    try {\n      fetch(`https://api.covid19api.com/summary`, {\n        method: \"GET\",\n      }).then((response: any) => response.json()).then((res) => {\n        // setData(res);\n        setGraph(res)\n        return (res)\n      }).catch(err => alert(err));\n    } catch (err) {\n      console.log(err)\n      return;\n    }\n  };\n\n  async function getAll() {\n    await unstated.getTotal();\n  }\n\n\n  function handleClick(event: any) {\n    unstated.setCountry(event.currentTarget.dataset.name.toLowerCase());\n    unstated.setCode(event.currentTarget.dataset.code.toLowerCase());\n  }\n\n  React.useEffect(() => {\n    setCountries(unstated.country_list);\n    if (unstated.code) {\n      unstated.getCovidCountry(unstated.code, cases, dates);\n    } else if (countries.filter((countries: any) => countries.name.toLowerCase().includes(unstated.country)).length === 1) {\n      // eslint-disable-next-line\n      countrySelect = countries.filter((countries: any) => countries.name.toLowerCase().includes(unstated.country))[0];\n      unstated.setCode(countrySelect.code.toLowerCase());\n      unstated.getCovidCountry(countrySelect.code.toLowerCase(), \"confirmed\", `${moment().subtract(1, 'months').format()}`);\n    } else {\n      unstated.getCovidCountry(\"\", \"\", `${moment().subtract(30, 'days').format()}`);\n    }\n    // eslint-disable-next-line\n  }, [unstated.country, cases, dates])\n\n  React.useEffect(() => {\n    setData(getCovidData());\n    getAll();\n    // eslint-disable-next-line\n  }, [])\n  React.useEffect(() => {\n    if (!_.isEmpty(unstated.total)) {\n      let tmp: any = unstated.total;\n      if (!_.isEmpty(tmp.Countries))\n        setData(tmp.Countries.sort(SortCountries('TotalConfirmed', 'desc')));\n    }\n    // eslint-disable-next-line\n  }, [unstated.total])\n\n  return (\n    <>\n\n      <header>\n      </header>\n      <aside className=\"sidebar\">\n        <div className=\"field\" style={{ position: \"sticky\", top: \"0rem\", zIndex: 100, backgroundColor: '#333' }}>\n          <div className=\"control has-icons-left\" style={{ position: 'sticky' }} >\n            <span style={{ display: 'flex', flexDirection: 'column' }}>\n              <input type=\"text\" className=\"input  is-fullwidth mt-1\" value={unstated.country} onChange={e => unstated.setCountry((e.target.value).toLowerCase())} placeholder='Search a country' />\n              {unstated.country ? <span className=\"icon is-small is-left\" onClick={() => { unstated.setCountry(\"\"); unstated.setCode(\"\"); }}>\n                <i className=\"delete\"></i>\n              </span> : <></>}\n              <SelectCase setCases={setCases} className=\"is-fullwidth\" />\n              <SelectPeriod setDates={setDates} className=\"is-fullwidth\" />\n            </span>\n          </div>\n        </div>\n\n        <h3 className=\"mt-1\">Countries </h3>\n        {!_.isEmpty(unstated.code) && !_.isEmpty(unstated.country) ?\n          <TableCasesData />\n          : \"\"}\n\n        {data ? data.filter((countries: any) => countries.Country.toLowerCase().includes(unstated.country)).map((item: any, i: any) => <span data-name={item.Country} data-code={item.CountryCode}\n          className=\"button is-secondary\" key={i} onClick={handleClick}\n          style={{\n            margin: \"1px\", display: 'flex', justifyContent: \"space-between\",\n            backgroundColor: \"#333\", color: \"whitesmoke\", fontSize: \"0.8em\",\n          }} >\n          {item.Country}\n          <span>{item.TotalConfirmed}{Flag(item.CountryCode)}</span>\n        </span>) : \"\"}\n      </aside>\n\n      <section className=\"main\">\n        <Dashboard data={unstated.total ? unstated.total : (data ? data : {})} />\n        <div className=\"sticky-top\">\n          <div className=\"nav flex-column\">\n            {unstated.code ?\n              <span>\n                <LinearChart dataCountry={unstated.data} labelsCountry={unstated.labels} country={`${unstated.code.toUpperCase()}`} />\n              </span>\n              : <></>}\n            {data ?\n              <BarChart dataCountry={Y} labelsCountry={X} country={date} />\n              : <></>}\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n","export default function SortCountries(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n    const varA = (typeof a[key] === 'string')\n      ? a[key].toUpperCase() : a[key];\n    const varB = (typeof b[key] === 'string')\n      ? b[key].toUpperCase() : b[key];\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return (\n      (order === 'desc') ? (comparison * -1) : comparison\n    );\n  };\n}\n\n// use it : \n\n    // array is sorted by TotalConfirmed, in ascending order by default\n    // setData((data).sort(compareValues('TotalConfirmed')));\n    // (data).sort(compareValues('TotalConfirmed', 'desc'));\n    // // array is sorted by TotalConfirmed in descending order\n    // (data).sort(compareValues('TotalConfirmed', 'desc'));\n    // // array is sorted by Country name in ascending order\n    // (data).sort(compareValues('Country'));\n    // // array is sorted by Country name in descending order\n    // (data).sort(compareValues('Country', 'desc'));\n\n    // ('list countries', props.data.Countries)\n    // _.filter(props.data.Countries, function (i: any) {\n    //   return i.CountryCode === unstated.code.toUpperCase();\n    // });","import React from 'react'\nimport { StoreContainer } from '../Store';\nimport Dashboard from '../Charts/Dashboard';\nimport MapChart from '../Map/MapChart';\n\nexport default function AboutComponent() {\n  const unstated = StoreContainer.useContainer();\n  const [content, setContent] = React.useState(\"\");\n\n  React.useEffect(() => {\n    unstated.getTotal();// fetching data => the can call unstated.total, unstated.getCovid19All for the markers\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div style={{ backgroundColor: \"black\" }}>\n      <Dashboard data={unstated.total}\n        content={content ? content : ''}\n        style={{ position: \"absolute\", zIndex: 100 }}\n      />\n      <MapChart setTooltipContent={setContent} />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { StoreContainer } from '../Store';\nimport LinearChart from '../Charts/LinearChart';\n// import BarChart from '../Charts/BarChart';\n// import { map } from 'lodash';\n// import { imgUrl } from '../../../public/loading.png';\nimport SelectCase from '../Charts/SelectCase';\nimport SelectPeriod from '../Charts/SelectPeriod';\nimport moment from 'moment';\n\n// const imgStyle = {\n//   height: '2rem',\n//   paddingLeft: '2px',\n//   backgroundImage: 'url(`../../../public/loading.png`)',\n// };\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\n\nexport default function GraphComponent() {\n  const [country, setCountry] = useState<string>(\"\");\n  const [code, setCode] = useState<string>(\"\");\n  const [countries, setCountries] = useState<any>([]);\n  const [dates, setDates] = React.useState<string>(`${moment().subtract(1, 'week').format()}`)\n  const [cases, setCases] = React.useState<string>(\"confirmed\")\n\n  let history = useHistory();\n  // let url = useParams;\n  const unstated = StoreContainer.useContainer();\n\n  // const country_list = unstated.country_list.map((item, i) =>\n  //   <span style={{ fontSize: '6px', paddingLeft: '3px' }} key={i} onClick={(i) => alert(i)}>{item.name}</span>)\n\n  function handleClick(event: any) {\n    // setCountry(value);\n    setCountry(event.currentTarget.dataset.name.toLowerCase());\n    unstated.setCountry(event.currentTarget.dataset.name.toLowerCase());\n    setCode(event.currentTarget.dataset.code.toLowerCase());\n    unstated.setCode(event.currentTarget.dataset.code.toLowerCase());\n    console.log(event.currentTarget.dataset.code.toLowerCase());\n\n  }\n\n  const handleSubmit = (evt: any) => {\n    evt.preventDefault();\n    if (country) {\n      history.push(`/graph/${code}`)\n    }\n  }\n\n  React.useEffect(() => {\n    console.log(\"Graph\")\n    setCountries(unstated.country_list);\n    if (unstated.code) {\n      unstated.getCovidCountry(unstated.code, cases, dates);\n    } else if (unstated.country !== '' && countries.filter((countries: any) => countries.name.toLowerCase().includes(unstated.country)).length === 1) {\n      unstated.getCovidCountry(unstated.country, cases, dates);\n    } else {\n      unstated.getCovidCountry(\"\", \"\", `${moment().subtract(3, 'days').format()}`);\n    }\n    // eslint-disable-next-line\n  }, [country, unstated.country, cases, dates])\n\n  return (\n    <div style={{ backgroundColor: \"#343a40\" }}>\n      < h2 style={{ textAlign: \"center\", color: \"white\" }}> Covid19 - Search a Country </h2 >\n      <div className=\"field\">\n        <div className=\"control has-icons-left\">\n          <form onSubmit={handleSubmit} style={{ display: 'flex' }}>\n            <input type=\"text\" className=\"input  is-fullwidth\" value={country} onChange={e => setCountry((e.target.value).toLowerCase())} />\n            {country ? <span className=\"icon is-small is-left\" onClick={() => { setCountry(\"\"); setCode(\"\"); }}>\n              <i className=\"delete\"></i>\n            </span> : <></>}\n            <SelectCase setCases={setCases} />\n            <SelectPeriod setDates={setDates} />\n            <input type=\"submit\" value=\"Submit\" className=\"button is-primary \" style={{ marginLeft: \"3px\" }} />\n          </form>\n        </div>\n      </div>\n      <div>\n        <h1> {country} </h1>\n        <div className=\"columns\">\n          <div\n            className=\"column is-one-fifth\"\n            style={{\n              display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", overflow: \"hidden\",\n              whiteSpace: \"nowrap\", /* Don't forget this one */\n              textOverflow: \"ellipsis\",\n            }}>\n            {unstated.country_list.filter((countries: any) => countries.name.toLowerCase().includes(country)).map((item: any, i: any) => <span data-name={item.name} data-code={item.code}\n              className=\"button is-secondary is-fullwidth\" key={i} onClick={handleClick}\n              style={{ margin: \"1px\", justifyContent: \"space-between\", }} >\n              {item.name}\n\n              <span>{countryToFlag(item.code)}</span>\n\n            </span>)}\n          </div>\n          <div className=\"column\">\n\n            <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\n              {/*<ol className=\"carousel-indicators\">\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n              </ol>\n              <div className=\"carousel-inner\">\n                <div className=\"carousel-item active\">\n                  {unstated.data ?\n                    <LinearChart dataCountry={unstated.data} labelsCountry={unstated.labels} country={country} />\n                    : <></>}\n                </div>\n                <div className=\"carousel-item\">\n                  {unstated.data ?\n                    <BarChart dataCountry={unstated.data} labelsCountry={unstated.labels} country={country} />\n                    : <></>}    </div>\n                <div className=\"carousel-item\">\n                  {unstated.data ?\n                    <LinearChart dataCountry={unstated.data} labelsCountry={unstated.labels} country={country} />\n                    : <></>}\n                </div>\n              </div>\n              <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span className=\"sr-only\">Previous</span>\n              </a>\n              <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span className=\"sr-only\">Next</span>\n              </a>*/}\n            </div>\n\n            {unstated.data ?\n              <LinearChart dataCountry={unstated.data} labelsCountry={unstated.labels} country={country} />\n              : <></>}\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n","import React from 'react';\nimport Layout from './components/Layout';\nimport MainComponent from './components/Pages/MainComponent';\nimport MapComponent from './components/Pages/MapComponent';\nimport HomeComponent from './components/Pages/HomeComponent';\nimport AboutComponent from './components/Pages/AboutComponent';\nimport GraphComponent from './components/Pages/GraphComponent';\nimport { StoreContainer } from \"./components/Store\"\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  const [page, setPage] = React.useState<string>(\"map\")\n  return (\n    <Router>\n      <StoreContainer.Provider>\n        <Layout className=\"App\" setPage={setPage}>\n          <Switch>\n            <Route exact path={'/'} component={MapComponent} />\n            {page === \"map\" ?\n              <Route exact path={'/covid19/'} component={MapComponent} />\n            : <Route exact path={'/covid19/'} component={HomeComponent} />}\n            <Route exact path={'/covid19/'} component={MapComponent} />\n            <Route exact path={'/stats'} component={HomeComponent} />\n            <Route exact path={'/main'} component={MainComponent} />\n            <Route exact path={'/about'} component={AboutComponent} />\n            <Route exact path={'/graph/:country?'} component={GraphComponent} />\n            <Route path={'*'} ><NotFound /></Route>\n          </Switch>\n        </Layout>\n      </StoreContainer.Provider>\n    </Router>\n  );\n}\n\nfunction NotFound() {\n  return (\n    <h1>Page Not Found</h1>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}